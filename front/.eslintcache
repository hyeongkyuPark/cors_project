[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginSaga.ts":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginSlice.ts":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\loginAPI.ts":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\loginApi.ts":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx":"8"},{"size":948,"mtime":1611877801053,"results":"9","hashOfConfig":"10"},{"size":1598,"mtime":1612137819742,"results":"11","hashOfConfig":"10"},{"size":2324,"mtime":1611877801049,"results":"12","hashOfConfig":"10"},{"size":1977,"mtime":1612134606937,"results":"13","hashOfConfig":"10"},{"size":920,"mtime":1612102048641,"results":"14","hashOfConfig":"10"},{"size":445,"mtime":1612102817222,"results":"15","hashOfConfig":"10"},{"size":629,"mtime":1612137749943,"results":"16","hashOfConfig":"10"},{"size":1844,"mtime":1612137310034,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"26ncnw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts",["35","36","37","38","39","40"],"import shortId from 'shortid';\r\n\r\nimport { all, takeLatest, put, fork, call } from 'redux-saga/effects';\r\nimport { addPostInterface } from '../../interfaces/PostList.interface';\r\n\r\nimport { addBookPostAPI, getBookPostPurchaseAPI, getBookPostSalesAPI } from '../../api/postBookApi';\r\nimport { loadBookPostRequest, addBookPostRequest, addBookPostError, addBookPostSuccess } from './postSlice';\r\n\r\nfunction* addBookPost(action: any) { // any는 구조 잡히면 변경 할거임\r\n  try {\r\n    const result = yield call(addBookPostAPI, action.payload.data);\r\n    yield put({\r\n      type: addBookPostSuccess,\r\n      data: result,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: addBookPostError,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddBookPost() {\r\n  yield takeLatest(addBookPostRequest, addBookPost);\r\n}\r\n\r\nexport default function* postSaga():Generator {\r\n  yield all([\r\n    fork(watchAddBookPost),\r\n  ]);\r\n}\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginSaga.ts",["41"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx",["42","43"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginSlice.ts",["44"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\loginAPI.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\loginApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx",[],{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":15},{"ruleId":"45","severity":1,"message":"49","line":4,"column":10,"nodeType":"47","messageId":"48","endLine":4,"endColumn":26},{"ruleId":"45","severity":1,"message":"50","line":6,"column":26,"nodeType":"47","messageId":"48","endLine":6,"endColumn":48},{"ruleId":"45","severity":1,"message":"51","line":6,"column":50,"nodeType":"47","messageId":"48","endLine":6,"endColumn":69},{"ruleId":"45","severity":1,"message":"52","line":7,"column":10,"nodeType":"47","messageId":"48","endLine":7,"endColumn":29},{"ruleId":"53","severity":1,"message":"54","line":9,"column":31,"nodeType":"55","messageId":"56","endLine":9,"endColumn":34,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":54,"column":16,"nodeType":"60","messageId":"61","endLine":54,"endColumn":37},{"ruleId":"45","severity":1,"message":"62","line":77,"column":10,"nodeType":"47","messageId":"48","endLine":77,"endColumn":18},{"ruleId":"45","severity":1,"message":"63","line":77,"column":20,"nodeType":"47","messageId":"48","endLine":77,"endColumn":31},{"ruleId":"45","severity":1,"message":"64","line":12,"column":24,"nodeType":"47","messageId":"48","endLine":12,"endColumn":30},"@typescript-eslint/no-unused-vars","'shortId' is defined but never used.","Identifier","unusedVar","'addPostInterface' is defined but never used.","'getBookPostPurchaseAPI' is defined but never used.","'getBookPostSalesAPI' is defined but never used.","'loadBookPostRequest' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["65","66"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'postType' is assigned a value but never used.","'setPostType' is assigned a value but never used.","'action' is defined but never used.",{"messageId":"67","fix":"68","desc":"69"},{"messageId":"70","fix":"71","desc":"72"},"suggestUnknown",{"range":"73","text":"74"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"73","text":"75"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[425,428],"unknown","never"]