[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\wishList\\WishList.tsx":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishsApi.ts":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\imageFileReader.ts":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\Review.tsx":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx":"12","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts":"13","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSlice.ts":"14","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSaga.ts":"15","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSlice.ts":"16","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSaga.ts":"17","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mySlaeArticle\\mySaleArticleSaga.ts":"18","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mySlaeArticle\\mySaleArticleSlice.ts":"19","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSlice.ts":"20","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSlice.ts":"21","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\myPurchaseArticleSaga.ts":"22","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSaga.ts":"23","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\wishList\\wishListSlice.ts":"24","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts":"25","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\Notice.tsx":"26","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\modifyProfile\\ModifyProfile.tsx":"27","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts":"28","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\chattingApi.ts":"29","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx":"30","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\mockdata.ts":"31","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx":"32","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts":"33","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostView.tsx":"34","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts":"35","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\ImagePreView.tsx":"36","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts":"37","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\market\\Market.tsx":"38","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts":"39","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts":"40","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\AddPostButton.tsx":"41","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx":"42","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx":"43","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\AddPostPage.tsx":"44","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx":"45","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts":"46","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx":"47","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts":"48","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\myPurchaseArticleSlice.ts":"49","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx":"50","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\chatting\\Chatting.tsx":"51","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx":"52","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts":"53","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\question\\questionSlice.ts":"54","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx":"55","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts":"56","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mypage\\MyPage.tsx":"57","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\interfaces\\mockdata.ts":"58","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\question\\question.tsx":"59"},{"size":2256,"mtime":1613542151617,"results":"60","hashOfConfig":"61"},{"size":8172,"mtime":1613543412662,"results":"62","hashOfConfig":"61"},{"size":483,"mtime":1613542151477,"results":"63","hashOfConfig":"61"},{"size":346,"mtime":1613381320288,"results":"64","hashOfConfig":"61"},{"size":1137,"mtime":1613542151541,"results":"65","hashOfConfig":"61"},{"size":241,"mtime":1613542151673,"results":"66","hashOfConfig":"61"},{"size":3638,"mtime":1613636983082,"results":"67","hashOfConfig":"61"},{"size":3260,"mtime":1613542151621,"results":"68","hashOfConfig":"61"},{"size":191,"mtime":1613542151677,"results":"69","hashOfConfig":"61"},{"size":2849,"mtime":1613543412662,"results":"70","hashOfConfig":"61"},{"size":1414,"mtime":1613272432278,"results":"71","hashOfConfig":"61"},{"size":1546,"mtime":1613543412666,"results":"72","hashOfConfig":"61"},{"size":989,"mtime":1613543412626,"results":"73","hashOfConfig":"61"},{"size":923,"mtime":1613542151517,"results":"74","hashOfConfig":"61"},{"size":793,"mtime":1613542151513,"results":"75","hashOfConfig":"61"},{"size":885,"mtime":1613272432272,"results":"76","hashOfConfig":"61"},{"size":4447,"mtime":1613542151545,"results":"77","hashOfConfig":"61"},{"size":988,"mtime":1613542151581,"results":"78","hashOfConfig":"61"},{"size":1098,"mtime":1613538560663,"results":"79","hashOfConfig":"61"},{"size":4063,"mtime":1613542151549,"results":"80","hashOfConfig":"61"},{"size":1376,"mtime":1613542151597,"results":"81","hashOfConfig":"61"},{"size":1038,"mtime":1613538560651,"results":"82","hashOfConfig":"61"},{"size":852,"mtime":1613542151597,"results":"83","hashOfConfig":"61"},{"size":1000,"mtime":1613542151637,"results":"84","hashOfConfig":"61"},{"size":358,"mtime":1613272432328,"results":"85","hashOfConfig":"61"},{"size":5762,"mtime":1613638401526,"results":"86","hashOfConfig":"61"},{"size":15133,"mtime":1613543412646,"results":"87","hashOfConfig":"61"},{"size":2189,"mtime":1613545410990,"results":"88","hashOfConfig":"61"},{"size":108,"mtime":1613542151449,"results":"89","hashOfConfig":"61"},{"size":2342,"mtime":1613381320162,"results":"90","hashOfConfig":"61"},{"size":1218,"mtime":1613381320257,"results":"91","hashOfConfig":"61"},{"size":1565,"mtime":1613272432279,"results":"92","hashOfConfig":"61"},{"size":759,"mtime":1613542151665,"results":"93","hashOfConfig":"61"},{"size":1478,"mtime":1613543412634,"results":"94","hashOfConfig":"61"},{"size":343,"mtime":1613272432332,"results":"95","hashOfConfig":"61"},{"size":1697,"mtime":1613542151493,"results":"96","hashOfConfig":"61"},{"size":2566,"mtime":1613542151621,"results":"97","hashOfConfig":"61"},{"size":1636,"mtime":1613543412642,"results":"98","hashOfConfig":"61"},{"size":512,"mtime":1613542151477,"results":"99","hashOfConfig":"61"},{"size":569,"mtime":1613272432329,"results":"100","hashOfConfig":"61"},{"size":1476,"mtime":1613543412654,"results":"101","hashOfConfig":"61"},{"size":2753,"mtime":1613542151533,"results":"102","hashOfConfig":"61"},{"size":2325,"mtime":1613543412598,"results":"103","hashOfConfig":"61"},{"size":8869,"mtime":1613544380871,"results":"104","hashOfConfig":"61"},{"size":1942,"mtime":1613543412630,"results":"105","hashOfConfig":"61"},{"size":463,"mtime":1613542151461,"results":"106","hashOfConfig":"61"},{"size":5698,"mtime":1613543685116,"results":"107","hashOfConfig":"61"},{"size":440,"mtime":1611271238964,"results":"108","hashOfConfig":"61"},{"size":1174,"mtime":1613542151569,"results":"109","hashOfConfig":"61"},{"size":1319,"mtime":1613543412662,"results":"110","hashOfConfig":"61"},{"size":6784,"mtime":1613542151501,"results":"111","hashOfConfig":"61"},{"size":3408,"mtime":1613543412658,"results":"112","hashOfConfig":"61"},{"size":911,"mtime":1613635883943,"results":"113","hashOfConfig":"61"},{"size":1109,"mtime":1613621651293,"results":"114","hashOfConfig":"61"},{"size":18394,"mtime":1613542151525,"results":"115","hashOfConfig":"61"},{"size":2112,"mtime":1613542151465,"results":"116","hashOfConfig":"61"},{"size":5808,"mtime":1613543412638,"results":"117","hashOfConfig":"61"},{"size":3897,"mtime":1613543412670,"results":"118","hashOfConfig":"61"},{"size":5435,"mtime":1613638310640,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"sthwp6",{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"125"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"125"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"139"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"125"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"145"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"132"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"125"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"139"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"125"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"139"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"125"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"125"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"125"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts",["261","262","263","264"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\wishList\\WishList.tsx",["265","266","267"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../utils/numberArrayUtill';\r\nimport { getWishListRequest } from './wishListSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MyWishsItems = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MyWishsItem = styled.div`\r\n  \r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImgBox = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 9em;\r\n  height: 10em;\r\n  margin-right: 1.5em;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: auto;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 2.5vw;\r\n    font-weight: bold;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 2.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 11.38px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 11.38px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 18.208px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction WishList():JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { wishList, totalPage, isGetWishListsError } = useSelector((state: any) => state.wishListSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getWishListRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  useEffect(() => {\r\n    if (isGetWishListsError === 'NON_LOGIN') {\r\n      alert('로그인이 필요한 서비스입니다. 로그인 후 더 많은 혜택을 받으세요.');\r\n      history.push('/');\r\n    } else if (isGetWishListsError === 'SERVER_ERROR') {\r\n      alert('서버 통신중 오류 발생');\r\n    }\r\n  }, [isGetWishListsError, history]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>찜목록</h1>\r\n        </Header>\r\n        {\r\n          totalPage === 0\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>찜한 책이 없습니다.</h2>\r\n                  <p>관심있는 상품을 찜해보아요.</p>\r\n                  <button type=\"button\" onClick={() => history.push('/home')}>판매책 보러가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MyWishsItems>\r\n                  {\r\n                    wishList.map((item: myArticleInterface) => (\r\n                      <MyWishsItem key={item.articleId}>\r\n                        <ItemLink to={`/post/${item.articleId}`}>\r\n                          <ItemImgBox>\r\n                            <ItemImage src={item.thumbnail} />\r\n                          </ItemImgBox>\r\n                          <ItemInfo>\r\n                            <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                            <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                            <h2 className=\"my_title\">{item.title}</h2>\r\n                            <p className=\"my_price\">{item.tprice} 원</p>\r\n                          </ItemInfo>\r\n                        </ItemLink>\r\n                      </MyWishsItem>\r\n                    ))\r\n                  }\r\n                </MyWishsItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/wishs?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/wishs?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/wishs?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            )\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WishList;\r\n",["268","269","270","271","272","273"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishsApi.ts",["274","275","276","277"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\imageFileReader.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx",[],["278","279","280","281","282","283"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\Review.tsx",[],["284","285","286","287","288","289"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts",["290"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx",["291","292"],"import React from 'react';\nimport { List, AutoSizer } from 'react-virtualized';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport CategoryFormatUtil from '../../utils/categoryFormatUtil';\nimport { loadScrollBookPostRequest } from './postSlice';\n\ninterface IndexInterface {\n  index: number;\n  style?: any;\n}\ninterface OnScrollParams {\n  clientHeight: number;\n  clientWidth: number;\n  scrollHeight: number;\n  scrollLeft: number;\n  scrollTop: number;\n  scrollWidth: number;\n}\nconst ListWrapper = styled.div`\n  display: flex;\n  max-width: 100%;\n  flex-wrap: wrap;\n  margin-top: 150px;\n  overflow: hidden;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 200px;\n  flex-basis: 50%;\n  padding:10px;\n  border-top: 1px solid #e8e8e8;\n  & img {\n    width: 150px;\n    height: 150px;\n    border-radius: 10px;\n  }\n`;\nconst ContentExplanation = styled.div`\n  padding: 0px 20px;\n  & h3 {\n    overflow:hidden;\n    padding: 10px 0px;\n  }\n`;\nconst Categoty = styled.div`\n  font-size: 9px;\n`;\nfunction InfiniteScrollList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, hasMorePost, isLoadScrollBookPostLoading } = useSelector((state: any) => state.postSlice);\n  const scrollListener = (params:OnScrollParams) => {\n    if (params.scrollTop + params.clientHeight >= params.scrollHeight - 300) {\n      if (hasMorePost && !isLoadScrollBookPostLoading) {\n        const LastId = bookPost[bookPost.length - 1].articleId;\n        dispatch(loadScrollBookPostRequest({ lastId: LastId }));\n      }\n    }\n  };\n\n  const rowRanderer = ({ index, style }: IndexInterface) => {\n    const post = bookPost[index];\n    return (\n      <div style={style}>\n        <NavLink to={`post/${post.articleId}`}>\n          <Content key={post.articleId}>\n            <img src={post.image} alt=\"\" />\n            <ContentExplanation>\n              <Categoty>{CategoryFormatUtil(post.category)}</Categoty>\n              <h3>{post.title}</h3>\n              <h3>{post.tprice}원</h3>\n            </ContentExplanation>\n          </Content>\n        </NavLink>\n      </div>\n    );\n  };\n\n  return (\n    <ListWrapper>\n      <AutoSizer disableHeight>\n        {({ width }) => (\n          <List\n            rowCount={bookPost.length} // 항목의 개수\n            height={700} // 실제 렌더링 되는 높이범위\n            rowHeight={200} // 항목의높이\n            width={width} // 항목의 너비\n            rowRenderer={rowRanderer} // 항목렌더링할때쓰는 함수\n            onScroll={scrollListener} // scroll 함수\n            overscanRowCount={10} // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\n          />\n        )}\n      </AutoSizer>\n    </ListWrapper>\n  );\n}\n\nexport default InfiniteScrollList;\n",["293","294","295","296","297","298"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSlice.ts",["299"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst detailViewSlice = createSlice({\n  name: 'detailView',\n  initialState: {\n    detailBookPost: null,\n    isLoadDetailBookPostLoading: false,\n    isLoadDetailBookPostDone: false,\n    isLoadDetailBookPostError: null,\n  },\n  reducers: {\n    loadDetailBookPostRequest(state, action) {\n      state.isLoadDetailBookPostLoading = true;\n    },\n    loadDetailBookPostSuccess(state, action) {\n      state.isLoadDetailBookPostLoading = false;\n      state.isLoadDetailBookPostDone = true;\n      state.detailBookPost = action.payload.data;\n    },\n    loadDetailBookPostError(state, action) {\n      state.isLoadDetailBookPostLoading = false;\n      state.isLoadDetailBookPostError = action.payload;\n    },\n  },\n});\n\nexport const {\n  loadDetailBookPostRequest,\n  loadDetailBookPostSuccess,\n  loadDetailBookPostError,\n} = detailViewSlice.actions;\n\nexport default detailViewSlice.reducer;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSlice.ts",["300","301"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst addPostSlice = createSlice({\n  name: 'addPost',\n  initialState: {\n    isAddBookPostLoading: false,\n    isAddBookPostDone: false,\n    isAddBookPostError: null,\n  },\n  reducers: {\n    addBookPostRequest(state, action) {\n      state.isAddBookPostLoading = true;\n      state.isAddBookPostDone = false;\n    },\n    addBookPostSuccess(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = true;\n      // state.bookPost.unshift(dummyBookPost(action.payload));\n    },\n    addBookPostError(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = false;\n      state.isAddBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  addBookPostRequest,\n  addBookPostSuccess,\n  addBookPostError,\n} = addPostSlice.actions;\n\nexport default addPostSlice.reducer;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mySlaeArticle\\mySaleArticleSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mySlaeArticle\\mySaleArticleSlice.ts",["302"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSlice.ts",["303","304","305","306","307","308","309"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSlice.ts",["310"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\myPurchaseArticleSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\wishList\\wishListSlice.ts",["311"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\Notice.tsx",["312"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\modifyProfile\\ModifyProfile.tsx",["313","314","315","316","317","318","319","320"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { nicknameDuplicationAsync } from '../../api/joinApi';\r\nimport { postModifyProfileRequest } from '../login/userSlice';\r\n\r\nconst FormLayout = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 17.216px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n    & h1 {\r\n      font-size: 19.368px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  left: 1em;\r\n  width: 2em;\r\n  height: 2em;\r\n`;\r\n\r\nconst ModifyButton = styled.button`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  font-size: 3vw;\r\n  right: 1em;\r\n  padding: 0.2em 0.7em;\r\n  border: 2px solid #3162C7;\r\n  outline: none;\r\n  border-radius: 50px;\r\n  color: #3162C7;\r\n  background: none;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 12.912px;\r\n  }\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 2.5em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImgBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 11em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImg = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst ProfileImgWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: -1.5em;\r\n  width:5.5em;\r\n  height: 5.5em;\r\n`;\r\n\r\nconst ProfileImgBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  width:5.5em;\r\n  height: 5.5em;\r\n  background: #eee;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ChangeImageButton = styled.button`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 2.5em;\r\n  height: 2.5em;\r\n  right: 0;\r\n  bottom: 0;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 50%;\r\n  background: #000;\r\n  & label {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst ChangeImageButtonImg = styled.img`\r\n  width: 1.5em;\r\n  height: auto;\r\n  font-size: 3vw;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 12.912px;\r\n  }\r\n`;\r\n\r\nconst ProfileImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst InputBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90vw;\r\n  margin-bottom: 2em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 387.350px;\r\n  }\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  & label {\r\n      font-size: 3.5vw;\r\n      margin-bottom: 1em;\r\n  }\r\n\r\n  & p {\r\n      font-size: 3vw;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n      margin-bottom: 1em;\r\n  }\r\n\r\n  @media screen and (min-width: 430px) {\r\n    & label {\r\n      font-size: 15.064px;\r\n    }\r\n    & p {\r\n      font-size: 12.912px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  background:  #fffdfd;\r\n  border-radius: 8px;\r\n  box-shadow: 3px 3px 10px #cecece;\r\n  padding: 0.5em 0;\r\n  margin-bottom: 0.5em;\r\n\r\n  & input {\r\n      font-size: 4vw;\r\n      width: 18em;\r\n      padding: 0 1em;\r\n      background: none;\r\n      border: none;\r\n      outline: none;\r\n  }\r\n\r\n  & img {\r\n      width: 1.5em;\r\n      height: 1.5em;\r\n      margin-right: 1em;\r\n  }\r\n\r\n  @media screen and (min-width: 430px) {\r\n    & input {\r\n      font-size: 17.216px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RemoveBox = styled.div`\r\n    width: 90vw;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    & p {\r\n      font-size: 3.5vw;\r\n      color: gray;\r\n    }\r\n\r\n    & button {\r\n        font-size: 3.8vw;\r\n        font-weight: bold;\r\n        background: none;\r\n        border: none;\r\n        outline: none;\r\n        text-decoration: underline;\r\n    }\r\n\r\n    @media screen and (min-width: 430px) {\r\n      width: 387.35px;\r\n      & p {\r\n        font-size: 15.064px;\r\n      }\r\n      & button {\r\n        font-size: 16.35px;\r\n      }\r\n    }\r\n`;\r\n\r\nfunction ModifyProfile():JSX.Element {\r\n  const { user, isModifyProfileError } = useSelector((state: any) => state.userSlice);\r\n  const { nickname, profileImg } = user;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [modifyInputs, setModifInputs] = useState({\r\n    nickname: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    passwd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    newPasswd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    newPasswdCheck: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isModifyProfileError === '비밀번호 불일치') {\r\n      setModifInputs((input) => ({\r\n        ...input,\r\n        passwd: {\r\n          ...input.passwd,\r\n          message: '비밀번호가 일치하지 않습니다.',\r\n          state: 'fail',\r\n          color: 'red',\r\n        },\r\n      }));\r\n    } else if (isModifyProfileError !== null) {\r\n      alert('서버 통신 에러');\r\n    }\r\n  }, [isModifyProfileError]);\r\n\r\n  const onChangeInuts = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    let passwdChekInput: {\r\n      value: string,\r\n      state: string,\r\n      message: string,\r\n      color: string,\r\n    } = {\r\n      value: '',\r\n      state: '',\r\n      message: '',\r\n      color: '',\r\n    };\r\n\r\n    switch (name) {\r\n      case 'nickname':\r\n        if (value === nickname) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              value,\r\n              state: 'none',\r\n              message: '',\r\n            },\r\n          });\r\n        } else if (value.length < 4) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              value,\r\n              state: 'fail',\r\n              message: '닉네임을 4자 이상 입력해주세요.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n          });\r\n        }\r\n        break;\r\n      case 'passwd':\r\n        setModifInputs({\r\n          ...modifyInputs,\r\n          passwd: {\r\n            ...modifyInputs.passwd,\r\n            value,\r\n            state: 'check',\r\n          },\r\n        });\r\n        break;\r\n      case 'newPasswd':\r\n        if (modifyInputs.newPasswdCheck.value !== '' && modifyInputs.newPasswdCheck.value !== value) {\r\n          passwdChekInput = {\r\n            ...modifyInputs.newPasswdCheck,\r\n            state: 'fail',\r\n            message: '비밀번호가 일치하지 않습니다.',\r\n            color: 'red',\r\n          };\r\n        } else {\r\n          passwdChekInput = {\r\n            ...modifyInputs.newPasswdCheck,\r\n            state: 'check',\r\n            message: '',\r\n          };\r\n        }\r\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              ...modifyInputs.newPasswd,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        } else if (value === '') {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              ...modifyInputs.newPasswd,\r\n              value,\r\n              state: 'none',\r\n              message: '',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              value,\r\n              state: 'fail',\r\n              message: '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.',\r\n              color: 'red',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        }\r\n        break;\r\n      case 'newPasswdCheck':\r\n        if (modifyInputs.newPasswd.value === value) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswdCheck: {\r\n              ...modifyInputs.newPasswdCheck,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswdCheck: {\r\n              value,\r\n              state: 'fail',\r\n              message: '비밀번호가 일치하지 않습니다.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmitModifyProfile = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (modifyInputs.nickname.state === 'fail') {\r\n      alert('닉네임을 확인해주세요.');\r\n    } else if (modifyInputs.passwd.value === '') {\r\n      alert('비밀번호는 반드시 입력해야 합니다.');\r\n    } else if (modifyInputs.newPasswd.state === 'fail') {\r\n      alert('새비밀번호를 확인해주세요.');\r\n    } else if (modifyInputs.newPasswdCheck.state === 'fail') {\r\n      alert('비밀번호가 일치하지 않습니다.');\r\n    } else {\r\n      try {\r\n        const result = await nicknameDuplicationAsync(modifyInputs.nickname.value);\r\n        const formData = new FormData();\r\n        if (imageFileState.file !== null) {\r\n          console.log('프로필이미지 저장');\r\n          formData.append('profileImg', imageFileState.file);\r\n        }\r\n        if (modifyInputs.nickname.value !== null) {\r\n          console.log('닉네임 저장');\r\n          formData.append('nickname', modifyInputs.nickname.value);\r\n        }\r\n        if (modifyInputs.passwd.value !== null) {\r\n          console.log('패스워드 저장');\r\n          formData.append('passwd', modifyInputs.passwd.value);\r\n        }\r\n        if (modifyInputs.newPasswd.value !== null) {\r\n          formData.append('newPasswd', modifyInputs.newPasswd.value);\r\n        }\r\n        if (result) {\r\n          dispatch(postModifyProfileRequest({\r\n            modifyProfile: formData,\r\n          }));\r\n        } else {\r\n          console.log('닉네임 중복');\r\n        }\r\n      } catch {\r\n        alert('서버통신중 에러발생');\r\n      }\r\n    }\r\n  };\r\n\r\n  const [imageFileState, setImageFileState] = useState<{file: File | null, previewURL: any}>({ file: null, previewURL: null });\r\n  const profileImageView = useRef<HTMLImageElement>(null);\r\n\r\n  const onChangeProfileImage = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files !== null) {\r\n      const reader = new FileReader();\r\n      const file = e.target.files[0];\r\n      reader.onloadend = () => {\r\n        setImageFileState({\r\n          ...imageFileState,\r\n          file,\r\n          previewURL: reader.result,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (imageFileState.previewURL !== null) {\r\n      if (profileImageView.current !== null) {\r\n        profileImageView.current.src = imageFileState.previewURL;\r\n      }\r\n    }\r\n  }, [imageFileState.previewURL]);\r\n\r\n  return (\r\n    <FormLayout method=\"post\" onSubmit={onSubmitModifyProfile}>\r\n      <Header>\r\n        <BackImg src=\"/images/icons/back.png\" onClick={() => history.push('/mypage')} />\r\n        <h1>프로필 편집</h1>\r\n        <ModifyButton type=\"submit\">완료</ModifyButton>\r\n      </Header>\r\n      <ImageBox>\r\n        <BackgroundImgBox>\r\n          <BackgroundImg src=\"/images/icons/profileBack.png\" />\r\n        </BackgroundImgBox>\r\n        <ProfileImgWrapper>\r\n          <ProfileImgBox>\r\n            <ProfileImg src={profileImg} ref={profileImageView} />\r\n            <ChangeImageButton type=\"button\">\r\n              <label htmlFor=\"profileImage\" />\r\n              <input id=\"profileImage\" accept=\"image/jpg,image/png,image/jpeg\" name=\"file\" style={{ visibility: 'hidden' }} type=\"file\" onChange={onChangeProfileImage} />\r\n              <ChangeImageButtonImg src=\"/images/icons/camera_white.png\" />\r\n            </ChangeImageButton>\r\n          </ProfileImgBox>\r\n        </ProfileImgWrapper>\r\n      </ImageBox>\r\n      <InputBox>\r\n        <InputGroup>\r\n          <label htmlFor=\"nickname\">닉네임</label>\r\n          <Input>\r\n            <input type=\"text\" onChange={onChangeInuts} id=\"nickname\" name=\"nickname\" value={modifyInputs.nickname.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.nickname.color }}>{modifyInputs.nickname.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"passwd\">현재 비밀번호</label>\r\n          <Input>\r\n            <input id=\"passwd\" name=\"passwd\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.passwd.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.passwd.color }}>{modifyInputs.passwd.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"newPasswd\">새 비밀번호</label>\r\n          <Input>\r\n            <input id=\"newPasswd\" name=\"newPasswd\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.newPasswd.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.newPasswd.color }}>{modifyInputs.newPasswd.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"newPasswdCheck\">새 비밀번호 확인</label>\r\n          <Input>\r\n            <input id=\"newPasswdCheck\" name=\"newPasswdCheck\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.newPasswdCheck.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.newPasswdCheck.color }}>{modifyInputs.newPasswdCheck.message}</p>\r\n        </InputGroup>\r\n      </InputBox>\r\n      <RemoveBox>\r\n        <p>회원정보를 삭제하시겠어요?</p>\r\n        <button type=\"button\">회원 탈퇴</button>\r\n      </RemoveBox>\r\n    </FormLayout>\r\n  );\r\n}\r\n\r\nexport default ModifyProfile;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts",["321","322","323","324"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\chattingApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx",["325","326"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\mockdata.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostView.tsx",["327","328"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\ImagePreView.tsx",["329","330"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts",["331","332","333","334"],"import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { articleInterface } from '../../interfaces/PostList.interface';\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    bookPost: [],\n    hasMorePost: true,\n    filtering: { division: 'sales', category: '' },\n\n    isLoadBookPostLoading: false,\n    isLoadBookPostDone: false,\n    isLoadBookPostError: false,\n\n    isLoadScrollBookPostLoading: false,\n    isLoadScrollPostDone: false,\n    isLoadScrollPostError: null,\n\n    isDeleteBookPostLoading: false,\n    isDeleteBookPostDone: false,\n    isDeleteBookPostError: null,\n  },\n  reducers: {\n    loadBookPostRequest(state, action) {\n      state.isLoadBookPostLoading = true;\n      state.isLoadScrollBookPostLoading = false;\n      state.hasMorePost = true;\n      state.filtering.division = action.payload.filtering.division;\n      state.filtering.category = action.payload.filtering.category;\n    },\n    loadBookPostSuccess(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostDone = true;\n      state.bookPost = action.payload.data;\n    },\n    loadBookPostError(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostError = action.payload;\n    },\n    loadScrollBookPostRequest(state, action) {\n      state.isLoadScrollBookPostLoading = true;\n    },\n    loadScrollBookPostSuccess(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostDone = true;\n      state.bookPost = state.bookPost.concat(action.payload.data);\n      state.hasMorePost = action.payload.data.length === 10;\n    },\n    loadScrollBookPostError(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostError = action.payload;\n    },\n    deleteBookPostRequest(state, action) {\n      state.isDeleteBookPostLoading = true;\n    },\n    deleteBookPostSuccess(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostDone = true;\n      state.bookPost.filter((post:articleInterface) => post.articleId !== action.payload);\n    },\n    deleteBookPostError(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  loadBookPostRequest,\n  loadBookPostSuccess,\n  loadBookPostError,\n  loadScrollBookPostRequest,\n  loadScrollBookPostSuccess,\n  loadScrollBookPostError,\n  deleteBookPostRequest,\n  deleteBookPostSuccess,\n  deleteBookPostError,\n} = postSlice.actions;\n\nexport default postSlice.reducer;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\market\\Market.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts",["335"],"interface categoryInterface {\n  cid: number, oneDepth: string, twoDepth: string, threeDepth: string, fourDepth: string, fiveDepth: string,\n}\nconst CategoryFormatUtil = (category: categoryInterface) => {\n  const cate = [category.oneDepth, category.twoDepth, category.threeDepth, category.fourDepth, category.fiveDepth];\n  const newCate = [];\n  for (let i = 0; i < cate.length; i++) {\n    if (cate[i] === '') {\n      return newCate.join('>');\n    }\n    newCate.push(cate[i]);\n  }\n  console.log(newCate);\n  return newCate.join('>');\n};\n\nexport default CategoryFormatUtil;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\AddPostButton.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx",["336","337","338"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { postLoginRequest, postLoginRequestError, postLoginRequestSuccess } from './userSlice';\nimport { LOGIN_ERROR, postLoginAsync, SERVER_ERROR } from '../../api/userApi';\n\ninterface inputFormInterface {\n  email: string,\n  passwd: string\n}\n\nconst Form = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.8em;\n`;\n\nconst Input = styled.input`\n  width: 18em;\n  font-size: 4.5vw;\n  padding: 0.8em 1.3em;\n  outline: none;\n  border: 2px solid #3960a688;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px #3960a655;\n  &:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n    padding: 16px 26px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst Button = styled.button`\n  width: 18em;\n  text-align: center;\n  padding: 1em 0;\n  background: #3960a6;\n  font-weight: bold;\n  color: #FFF;\n  font-size: 4.5vw;\n  border: none;\n  border-radius: 200px;\n  outline: none;\n  margin-bottom: 1.2em;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n    padding: 20px 0;\n    margin-bottom: 24px;\n  }\n`;\n\nfunction LoginForm(): JSX.Element {\n  const [inputs, setInputs] = useState<inputFormInterface>({\n    email: '',\n    passwd: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const history = useHistory();\n\n  const onLogin = async (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      const result = await postLoginAsync({ email: inputs.email, passwd: inputs.passwd });\n      dispatch(postLoginRequestSuccess(result));\n      history.push('/home');\n    } catch (error) {\n      dispatch(postLoginRequestError(error.message));\n      if (error.message === LOGIN_ERROR) {\n        alert('로그인 정보를 확인해주세요.');\n      } else if (error.message === SERVER_ERROR) {\n        alert('서버 통신중 에러 발생');\n      }\n    }\n  };\n\n  return (\n    <Form method=\"GET\" onSubmit={onLogin}>\n      <InputBox>\n        <Input type=\"email\" name=\"email\" placeholder=\"아이디\" value={inputs.email} onChange={handleChange} required />\n        <Input type=\"password\" name=\"passwd\" placeholder=\"비밀번호\" value={inputs.passwd} onChange={handleChange} required />\n      </InputBox>\n      <Button type=\"submit\">로그인</Button>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\AddPostPage.tsx",["339","340","341","342"],"import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { DefaultRootState, useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport { addBookPostRequest } from './addPostSlice';\nimport ImagePreView from './ImagePreView';\nimport ImageFileReaderPromise from '../../utils/imageFileReader';\nimport { getAladinBook } from '../../api/postBookApi';\nimport aladinIteminterface from '../../interfaces/AladinInterface';\nimport SearchBook from './SearchBook';\n\ninterface ParamTypes {\n  division: string\n}\ninterface ImageURLInterface {\n  id: string;\n  url: string;\n  image: Blob;\n}\nconst AddPostWrapper = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  max-width: 600px;\n`;\nconst AddPostHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 0px;\n`;\nconst Logo = styled.img`\n  width: 40px;\n`;\nconst DeleteImg = styled.img`\n  width: 20px;\n  align-self: flex-start;\n`;\nconst BookWrapper = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    width: 30%;\n    max-width: 200px;\n  }\n  border: 1px solid #e8e8e8;\n  margin: 10px 0px;\n`;\nconst BookDetail = styled.div`\n  margin-left: 20px;\n`;\nconst Category = styled.div`\n  font-size: 12px;\n  margin-bottom: 20px;\n`;\nconst BookTitle = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n  font-weight: 800;\n`;\nconst BookPrice = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n`;\nconst FormWrapper = styled.form`\n`;\nconst BookDetailInputWrapper = styled.div`\n  & input {\n    margin: 20px 0;\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n  }\n  & textArea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n    height: 80px;\n    resize: none;\n    overflow: scroll;\n  }\n`;\nconst AddPostButton = styled.button`\n  width: 100%;\n  border: 0;\n  background-color: #3960a6;\n  padding: 10px;\n  margin: 20px 0px;\n  border-radius: 5px;\n  color: white;\n  font-weight: 700;\n`;\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  background-color: #e9e9e9;\n  width: 100%;\n  margin: auto;\n  & input {\n    border:0;\n    width:80%;\n    background-color: inherit;\n  }\n  & button {\n    border: 0;\n  }\n  & img {\n    width: 20px;\n  }\n`;\n\nfunction AddPostPage():JSX.Element {\n  const [searchTitle, setSearchTitle] = useState<string>('');\n  const [searchResult, setSearchResult] = useState<aladinIteminterface[]>([]);\n  const [title, setTitle] = useState<string>('');\n  const [category, setCategory] = useState<string>('');\n  const [cid, setCid] = useState<number>();\n  const [thumbnail, setThumbnail] = useState<string>('');\n  const [images, setImages] = useState<ImageURLInterface[]>([]);\n  const [realPrice, setRealPrice] = useState<number>();\n  const [price, setPrice] = useState<string>('');\n  const [content, setContent] = useState<string>('');\n  const [isOpenSearchBox, setIsOpenSearchBox] = useState<boolean>(false);\n  const history = useHistory();\n\n  const { isAddBookPostLoading, isAddBookPostDone, isAddBookPostError } = useSelector((state: any) => state.addPostSlice);\n  const dispatch = useDispatch();\n\n  const { division } = useParams<ParamTypes>();\n  const upperCaseDivision:string = division.toUpperCase();\n\n  const ImageFileReader = async (file: Blob) => {\n    try {\n      const image: string = await ImageFileReaderPromise(file);\n      if (images.length < 2) {\n        setImages(images.concat({ id: uuidv4(), url: image, image: file }));\n      } else {\n        ToastsStore.error('최대 두장의 사진만 업로드 가능합니다.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const loadSearchResultBook = async () => {\n    getAladinBook(searchTitle).then(({ data }) => {\n      const a = data.replace(/\\\\/ig, '\\\\\\\\', /;/g, '');\n      const b = a.substr(0, a.length - 1);\n      console.log(data);\n      console.log(b[3970]);\n      console.log(b[3971]);\n      console.log(b[3972]);\n\n      const parseData = JSON.parse(b);\n      console.log(parseData);\n      setSearchResult(parseData.item);\n      if (parseData.item.length === 0) {\n        ToastsStore.error('검색결과가 없습니다');\n      } else {\n        setIsOpenSearchBox(true);\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n  const handleChangeSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTitle(e.target.value);\n  };\n  const handleClickSearch = () => {\n    loadSearchResultBook();\n  };\n  const handleXButtonClick = () => {\n    history.push('/home');\n  };\n  const handleDeleteImage = useCallback((imageId: string) => {\n    const filteringImageFile = images.filter((image) => image.id !== imageId);\n    setImages([...filteringImageFile]);\n  }, [images]);\n  const handleChangePrice = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPrice(e.target.value);\n  }, []);\n  const handleChangeContent = useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setContent(e.target.value);\n  }, []);\n  const handleChangeImages = (e: any) => {\n    ImageFileReader(e.target.files[0]);\n  };\n  const handleClickItem = (item: aladinIteminterface) => {\n    setCategory(item.categoryName);\n    setTitle(item.title);\n    setCid(item.categoryId);\n    setThumbnail(item.cover);\n    setRealPrice(item.priceStandard);\n    setIsOpenSearchBox(false);\n  };\n  const handleSubmitPost = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (images.length < 2) {\n      ToastsStore.error('최소 두장의 사진이 업로드 되어야합니다');\n      return;\n    }\n    const formData = new FormData();\n    for (let i = 0; i < images.length; i++) {\n      formData.append('file', images[i].image); // 사용자가 등록한 이미지\n    }\n    formData.append('category', category); // category\n    formData.append('cid', String(cid)); // 알라딘에서 받은 정보\n    formData.append('title', title); // 알라딘에서 받은 정보\n    formData.append('image', thumbnail); // 알라딘에서 받은 정보\n    formData.append('rprice', String(realPrice)); // 알라딘에서 받은 정보\n    formData.append('content', content); // 사용자가 입력한 정보\n    formData.append('tprice', price); // 사용자가 입력한 정보\n    formData.append('division', upperCaseDivision); // 사용자가 입력한 정보\n\n    console.log(formData.keys(), formData.getAll('file'));\n\n    dispatch(addBookPostRequest({ data: formData }));\n\n    if (isAddBookPostLoading === false && isAddBookPostError !== null) {\n      ToastsStore.error('업로드에 실패했습니다.');\n    }\n  }, [category, cid, content, dispatch, images, isAddBookPostError, isAddBookPostLoading, price, realPrice, thumbnail, title, upperCaseDivision]);\n  return (\n    <>\n      <AddPostWrapper>\n        {isOpenSearchBox && <SearchBook searchResult={searchResult} onClickItem={handleClickItem} />}\n        <AddPostHeader>\n          <Logo src=\"/images/icons/logo.jpeg\" alt=\"logo\" />\n          <button type=\"button\" onClick={handleXButtonClick}>\n            <DeleteImg src=\"/images/icons/x.png\" alt=\"x_button\" />\n          </button>\n        </AddPostHeader>\n        <SearchInput>\n          <input placeholder=\"책 이름을 검색해보세요!\" onChange={handleChangeSearch} />\n          <button type=\"button\" onClick={handleClickSearch}>\n            <img src=\"/images/icons/search.png\" alt=\"search_icon\" />\n          </button>\n        </SearchInput>\n        <BookWrapper>\n          {\n          title\n            ? (\n              <>\n                <img src={thumbnail} alt=\"thumbnail\" />\n                <BookDetail>\n                  <Category>{category}</Category>\n                  <BookTitle>{title}</BookTitle>\n                  <BookPrice>{realPrice} 원</BookPrice>\n                </BookDetail>\n              </>\n            )\n            : <div>책을 검색해서 등록하세요!</div>\n        }\n        </BookWrapper>\n        <FormWrapper encType=\"multipart/form-data\" onSubmit={handleSubmitPost}>\n          <ImagePreView onChangeImage={handleChangeImages} images={images} onDelete={handleDeleteImage} />\n          <BookDetailInputWrapper>\n            <input type=\"text\" pattern=\"[0-9]+\" placeholder=\"₩ 가격입력\" onChange={handleChangePrice} value={price} />\n            <textarea onChange={handleChangeContent} value={content} placeholder=\"상품설명을 입력하세요\" />\n          </BookDetailInputWrapper>\n          <AddPostButton type=\"submit\">등록하기</AddPostButton>\n          <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n        </FormWrapper>\n      </AddPostWrapper>\n    </>\n  );\n}\n\nexport default AddPostPage;\n",["343","344","345","346","347","348"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx",["349","350","351","352","353","354"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { LOGIN_ERROR, SERVER_ERROR } from '../../api/userApi';\nimport LoginForm from './LoginForm';\nimport SocialLogin from './SocialLogin';\nimport { postLogoutRequest } from './userSlice';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Layout = styled.div`\n  width: 100%;\n  max-width: 600px;\n  min-width: 300px;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TitleBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1.7em;\n`;\n\nconst Logo = styled.img`\n  width: auto;\n  height: 18vw;\n  @media screen and (min-width: 460px) {\n    height: 82.8px;\n  }\n`;\n\nconst LinkBox = styled.div`\n  width: 19em;\n  font-size: 4vw;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2em;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n    margin-bottom: 36.8px;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  font-weight: 500;\n  text-decoration: none;\n  color: #707070;\n`;\n\nfunction Login():JSX.Element {\n  const { isLoginSucceed, isLoginError } = useSelector((state: any) => state.userSlice);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(postLogoutRequest({}));\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Layout>\n        <TitleBox>\n          <Logo src=\"/images/icons/title_logo.jpg\" />\n        </TitleBox>\n        <LoginForm />\n        <LinkBox>\n          <StyledLink to=\"/join\">회원가입</StyledLink>\n          <StyledLink to=\"/home\">비회원 둘러보기</StyledLink>\n        </LinkBox>\n        <SocialLogin />\n      </Layout>\n    </Wrapper>\n  );\n}\n\nexport default Login;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx",["355","356"],"import React, { useEffect, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport CategoryFormatUtil from '../../utils/categoryFormatUtil';\nimport countUtil from '../../utils/countDaoUtil';\nimport ProgressUtil from '../../utils/progressUtil';\nimport { deleteBookPostRequest } from '../postList/postSlice';\nimport { postAddWishListRequest, postRemoveWishListRequest } from '../login/userSlice';\nimport ImageSlide from './ImageSlide';\n\ninterface DetailPostInterface {\n  id: number;\n}\nconst ContentWrapper = styled.div`\n`;\nconst ContentTop = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border-bottom: 1px solid #e8e8e8;\n`;\nconst ContentMain = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  margin: 0 auto;\n`;\nconst ProfileWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n`;\nconst ProfileImg = styled.img`\n  width: 50px;\n  height: 50px;\n  border: 1px solid #e8e8e8;\n  border-radius: 50%;\n  padding: 2px;\n`;\nconst NickName = styled.div`\n  margin-left: 10px;\n`;\nconst State = styled.div`\n  color: #3960a6;\n  border: 1px solid #3960a6;\n  padding: 5px 10px;\n  border-radius: 20px;\n`;\nconst ContentTitle = styled.div`\n  padding: 10px 0;\n  font-size: 20px;\n  font-weight: 600;\n`;\nconst Category = styled.div`\n  font-size: 13px;\n  color: #919191;\n`;\nconst Thumbnail = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #e8e8e8;\n  color: #3960a6;\n  font-weight: 700;\n  border-radius: 5px;\n  & img {\n    width: 80px;\n    margin-right: 20px;\n  }\n`;\nconst Content = styled.div`\n  padding: 20px 0;\n`;\nconst AdditionalContent = styled.div`\n  padding: 20px 0;\n  font-size: 13px;\n`;\nconst OtherBooksButton = styled.button`\n  color: white;\n  background: #3960a6;\n  width: 100%;\n  border: 0;\n  padding: 10px;\n  font-size: 15px;\n  border-radius: 5px;\n  margin: 0 auto;\n`;\nconst ContentBottom = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  font-size: 20px;\n  border-top: 1px solid #e8e8e8;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n`;\nconst ChattingButton = styled.button`\n  color: white;\n  background: #3960a6;\n  max-width: 200px;\n  border: 0;\n  padding: 10px;\n  font-size: 15px;\n  border-radius: 5px;\n`;\nconst HeartButton = styled.button`\n  background: transparent;\n  border: 0;\n  & img {\n    width: 35px;\n  }\n`;\nconst Price = styled.div`\n  font-weight: 800;\n`;\nconst Delete = styled.div`\n  font-size: 15px;\n  padding: 20px 0;\n`;\nconst Report = styled.div`\n  font-size: 15px;\n  padding: 20px 0;\n`;\nconst UploadeTime = styled.div`\n  font-size: 13px;\n  color: #919191;\n  padding: 10px 0;\n`;\n\nfunction DetailPostContent({ id } :DetailPostInterface):JSX.Element {\n  const dispatch = useDispatch();\n  const [heart, setHeart] = useState(false);\n  const { wishList } = useSelector((state: any) => state.userSlice.user);\n  const { detailBookPost } = useSelector((state: any) => state.detailViewSlice);\n  const history = useHistory();\n  const HandleHeartButton = () => {\n    if (heart) {\n      dispatch(postRemoveWishListRequest(detailBookPost.articleId));\n    } else {\n      dispatch(postAddWishListRequest(detailBookPost.articleId));\n    }\n  };\n  const DeletePost = useCallback(() => {\n    dispatch(deleteBookPostRequest(id));\n    ToastsStore.success('삭제완료');\n    setTimeout(() => {\n      history.push('/home');\n    }, 700);\n  }, [dispatch, history, id]);\n  useEffect(() => {\n    setHeart(wishList.includes(detailBookPost.articleId));\n  }, [wishList, detailBookPost]);\n  return (\n    <>\n      <ImageSlide images={detailBookPost.image} />\n      <ContentWrapper>\n        <ContentTop>\n          <ProfileWrapper>\n            <ProfileImg src=\"/images/icons/init_profile.png\" alt=\"profile\" />\n            <NickName>닉네임</NickName>\n          </ProfileWrapper>\n          <State>{ProgressUtil(detailBookPost.progress)}</State>\n        </ContentTop>\n        <ContentMain>\n          <ContentTitle>{detailBookPost.title}</ContentTitle>\n          <Category>{CategoryFormatUtil(detailBookPost.category)}</Category>\n          <UploadeTime>9초전</UploadeTime>\n          <Thumbnail>\n            <img src={detailBookPost.thumbnail} alt=\"thumnail\" />\n            <div>원가: {detailBookPost.rprice} 원</div>\n          </Thumbnail>\n          <Content>\n            {detailBookPost.content}\n          </Content>\n          <AdditionalContent>{countUtil(detailBookPost.count)}</AdditionalContent>\n          <OtherBooksButton>판매자의 다른도서 보러가기</OtherBooksButton>\n          <Report>신고하기⚡️</Report>\n          {/* 여기서 사용자랑 이게시물 아이디랑 같으면 삭제하는걸로 로직짜야함 */}<Delete onClick={DeletePost}>삭제하기</Delete>\n        </ContentMain>\n        <ContentBottom>\n          <HeartButton onClick={HandleHeartButton}>\n            <img src={heart ? '/images/icons/heart_active.png' : '/images/icons/heart.png'} alt=\"heartButton\" />\n          </HeartButton>\n          <Price>{detailBookPost.tprice} 원</Price>\n          <NavLink to={`/chatting/${id}`}>\n            <ChattingButton>채팅하기</ChattingButton>\n          </NavLink>\n        </ContentBottom>\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n      </ContentWrapper>\n    </>\n  );\n}\n\nexport default DetailPostContent;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts",["357"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\myPurchaseArticleSlice.ts",["358"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx",["359"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Spinner from 'react-spinner-material';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport AppLayout from '../../components/AppLayout';\nimport Header from './Header';\nimport { loadBookPostRequest } from './postSlice';\nimport InfiniteScrollList from './InfiniteScrollList';\nimport AddPostButton from './AddPostButton';\n\nconst PostListWrapper = styled.div`\n`;\nfunction PostList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, filtering } = useSelector((state: any) => state.postSlice);\n  useEffect(() => {\n    dispatch(loadBookPostRequest({ filtering: { division: filtering.division, category: filtering.category } }));\n  }, [dispatch, filtering.category, filtering.division]);\n  console.log(bookPost);\n  return (\n    <AppLayout activeId={0}>\n      <PostListWrapper>\n        <Header />\n        <AddPostButton />\n        { bookPost.length !== 0 ? <InfiniteScrollList /> : <Spinner color=\"#004c9d\" size={120} visible stroke={10} radius={50} />}\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} />\n      </PostListWrapper>\n    </AppLayout>\n  );\n}\n\nexport default PostList;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\chatting\\Chatting.tsx",["360","361","362","363","364","365"],"import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Client } from '@stomp/stompjs';\n\nimport { NavLink, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport chattingConnection from '../../api/chattingApi';\n\ninterface ChattingUserInterface {\n  userNickname: string,\n}\ninterface useParamsID {\n  id: string\n}\ninterface sendDataInterface {\n  messageType: string,\n  joinId: string,\n  nickname: string,\n  content: string\n}\ninterface activeInterface {\n  active: boolean,\n}\nconst ChattingWrapper = styled.div`\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n`;\nconst ChattingMessageHeader = styled.div`\n  width: 100%;\n  max-width: 600px;\n  position: fixed;\n  top: 0;\n  \n`;\nconst HeaderTop = styled.div`\n  background-color: #3960a6;\n  color: white;\n  justify-content: space-between;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  padding: 20px;\n`;\nconst HeaderBottom = styled.div`\n  background-color: white;\n  border-bottom: 1px solid #e8e8e8;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  & img {\n    width: 60px;\n    height: 60px;\n    margin-right: 20px;\n  }\n`;\nconst HeaderBottomContent = styled.div`\n  & div {\n    padding: 10px;\n  }\n`;\nconst ChattingBottom = styled.div`\n  width: 100%;\n  max-width: 600px;\n  height: 50px;\n  position: fixed;\n  display: flex;\n  align-items: center;\n  bottom: 0;\n  background-color: #e8e8e8;\n  & img {\n    width: 40px;\n    margin-left: 5px;\n  }\n  & form {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n  }\n  & input {\n    border: 0;\n    width: 70%;\n    border-radius: 20px;\n    font-size: 15px;\n    padding: 5px;\n  }\n`;\nconst OpponentChatting = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: flex-start;\n`;\nconst MyChatting = styled.div`\n  margin: 10px;\n  align-self: flex-end;\n  display: flex;\n  & div {\n    background-color: #3960a6;\n    padding: 10px 15px;\n    font-size: 15px;\n    max-width: 200px;\n    color: white;\n    border-radius: 10px 10px 0px 10px;\n  }\n`;\nconst SubmitButton = styled.button<activeInterface>`\n  font-size: 15px;\n  background-color: ${(props) => (props.active ? '#3960a6' : '#aeaeae')};\n  border-radius: 5px;\n  color:  ${(props) => (props.active ? 'white' : '#e8e8e8')};\n  border: 0;\n  padding: 5px 20px;\n`;\n\nconst SendTime = styled.span`\n  color: #797979;\n  font-size: 10px;\n  margin: 0 5px;\n  align-self: flex-end;\n`;\n\nconst ChattingMessageWrapper = styled.div`\n  padding: 10px;\n  margin-top: 160px;\n`;\nconst ChattingMessageProfile = styled.div`\n  & img {\n    width: 30px;\n    height: 30px;\n    border: 1px solid #e8e8e8;\n    border-radius: 50%;\n    margin-right: 10px;\n  }\n`;\nconst ChattingMessageList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst ChattingMessage = styled.div`\n  background-color: #e8e8e8;\n  padding: 10px 15px;\n  font-size: 15px;\n  max-width: 200px;\n  border-radius: 10px 10px 10px 0px;\n`;\nconst client = new Client({\n  brokerURL: chattingConnection,\n  debug(str: string) {\n    console.log(str);\n  },\n  reconnectDelay: 50000,\n  heartbeatIncoming: 4000,\n  heartbeatOutgoing: 4000,\n});\n\nfunction Chatting({ userNickname }: ChattingUserInterface):JSX.Element {\n  const [message, setMessage] = useState('');\n  const [chatting, setChatting] = useState<string[]>([]);\n  const [myJoinId, setMyJoinId] = useState<string>('');\n  const { id } = useParams<useParamsID>();\n  console.log('실행');\n\n  useEffect(() => {\n    client.onConnect = function (frame) {\n      const roomIdApi = `http://local.corsmarket.ml/api/chat/room?articleId=${id}`;\n      axios.post(roomIdApi)\n        .then(({ data }) => {\n          console.log(data.data.joinId);\n          client.subscribe(`ws://local.corsmarket.ml/api/sub/chat/room/${data.data.joinId}`, (msg) => {\n            console.log('mag-------!!!!!!!!!!!!!!!!!', msg);\n            console.log('aaaa');\n            setMyJoinId(data.data.joinId);\n            if (msg.body) {\n              setChatting([...chatting, msg.body]);\n            }\n          });\n        });\n    };\n    client.onStompError = function (frame):void {\n      // console.log(`Broker reported error: ${frame.headers.message}`);\n      // console.log(`Additional details: ${frame.body}`);\n    };\n    client.activate();\n  }, [chatting, id]);\n  const onSendMessage = (e: any) => {\n    e.preventDefault();\n    const sendData: sendDataInterface = { messageType: 'TALK', joinId: 'a2a7e23b-14c1-4535-99fa-a2ed4fc85fa1', nickname: '윤슬이야', content: message };\n    console.log(sendData);\n    client.publish({\n      destination: 'ws://local.corsmarket.ml/api/pub/chat/message',\n      body: JSON.stringify(sendData),\n      headers: {},\n    });\n  };\n  const onHandleChangeMessage = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setMessage(e.target.value);\n  }, []);\n  console.log(chatting, myJoinId);\n  return (\n    <ChattingWrapper>\n      <ChattingMessageHeader>\n        <HeaderTop>\n          <NavLink to=\"/chatting\"><div>{'<'}</div></NavLink>\n          <div>Josh</div>\n        </HeaderTop>\n        <HeaderBottom>\n          <img src=\"http://image.yes24.com/momo/TopCate2917/MidCate006/291263568.jpg\" alt=\"book_img\" />\n          <HeaderBottomContent>\n            <div>영어책 읽기의 힘</div>\n            <div>13000원</div>\n          </HeaderBottomContent>\n        </HeaderBottom>\n      </ChattingMessageHeader>\n      <ChattingMessageWrapper>\n        <ChattingMessageList>\n          <OpponentChatting>\n            <ChattingMessageProfile>\n              <img src=\"/images/icons/init_profile.png\" alt=\"frofile\" />\n            </ChattingMessageProfile>\n            <ChattingMessage>안녕반가워!</ChattingMessage>\n            <SendTime>16:43</SendTime>\n          </OpponentChatting>\n          <MyChatting>\n            <SendTime>16:43</SendTime>\n            <div>안녕반가워!</div>\n          </MyChatting>\n          <MyChatting>\n            <SendTime>16:43</SendTime>\n            <div>거래하러왔니????</div>\n          </MyChatting>\n          <OpponentChatting>\n            <ChattingMessageProfile>\n              <img src=\"/images/icons/init_profile.png\" alt=\"frofile\" />\n            </ChattingMessageProfile>\n            <ChattingMessage>싸게 해줘</ChattingMessage>\n            <SendTime>16:43</SendTime>\n          </OpponentChatting>\n        </ChattingMessageList>\n      </ChattingMessageWrapper>\n      <ChattingBottom>\n        <form onSubmit={onSendMessage}>\n          <input type=\"text\" onChange={onHandleChangeMessage} placeholder=\"메세지를 입력하세요\" />\n          <SubmitButton active={message.length !== 0} disabled={message.length === 0} type=\"submit\">전송</SubmitButton>\n        </form>\n      </ChattingBottom>\n    </ChattingWrapper>\n  );\n}\nexport default Chatting;\n",["366","367","368","369","370","371"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx",["372"],"import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport CategoryMenu from './CategoryMenu';\nimport { loadBookPostRequest } from './postSlice';\n\ninterface PostTabItemInterface {\n  tab: number,\n  active: number,\n}\n\nconst HeaderWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n  max-width: 600px;\n  margin: 0 auto;\n  z-index: 50;\n`;\nconst TopWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n  padding: 10px 30px;\n`;\nconst BuggerMenu = styled.button`\n  align-self: center;\n  background-color:white;\n  border: none;\n  & img{\n    width: 30px;\n  }\n`;\nconst LogoWrapper = styled.div`\n  display: flex;  \n  align-items: center;\n  justify-content: center;\n  color: #3960a6;\n  flex-basis: 2;\n  font-size: 25px;\n  & img{\n    height: 40px;\n  }\n`;\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  background-color: #e9e9e9;\n  width: 85%;\n  margin: auto;\n  & input {\n    color: white;\n    border:0;\n    width:80%;\n    background-color: inherit;\n  }\n  & img {\n    width: 20px;\n  }\n`;\nconst PostTab = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  margin-top: 5px;\n  border: 1px solid #e9e9e9;\n`;\nconst PostTabItem = styled.li<PostTabItemInterface>`\n  padding: 10px 0;\n  width: 100%;\n  text-align: center;\n  border-bottom: ${(props) => props.tab === props.active && '3px solid #3960a6'};\n`;\n\nfunction Header(): JSX.Element {\n  const dispatch = useDispatch();\n  const [openMenu, setOpenMenu] = useState(false);\n  const [tabIndex, setTabIndex] = useState(0);\n  const { filtering } = useSelector((state: any) => state.postSlice);\n  const onOpenMenuHandler = useCallback((e : React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setOpenMenu(true);\n  }, []);\n  const onCloseMenuHandler = useCallback(() => {\n    setTabIndex(0);\n    setOpenMenu(false);\n  }, []);\n  const onClickSalePostTab = useCallback(() => {\n    setTabIndex(0);\n    dispatch(loadBookPostRequest({ filtering: { division: 'sales', category: filtering.category } }));\n  }, [dispatch, filtering.category]);\n  const onClickPurchasPostTab = useCallback(() => {\n    setTabIndex(1);\n    dispatch(loadBookPostRequest({ filtering: { division: 'purchase', category: filtering.category } }));\n  }, [dispatch, filtering.category]);\n  return (\n    <HeaderWrapper>\n      {openMenu && <CategoryMenu onMenuClose={onCloseMenuHandler} />}\n      <TopWrapper>\n        <BuggerMenu onClick={onOpenMenuHandler}>\n          <img src=\"/images/icons/category.png\" alt=\"menu_icon\" />\n        </BuggerMenu>\n        <LogoWrapper>\n          <img src=\"/images/icons/logo.jpeg\" alt=\"logo\" />\n        </LogoWrapper>\n      </TopWrapper>\n      <SearchInput>\n        <input placeholder=\"책 이름을 검색해보세요!\" />\n        <img src=\"/images/icons/search.png\" alt=\"search_icon\" />\n      </SearchInput>\n      <PostTab>\n        <PostTabItem onClick={() => onClickSalePostTab()} tab={0} active={tabIndex}>판매글</PostTabItem>\n        <PostTabItem onClick={() => onClickPurchasPostTab()} tab={1} active={tabIndex}>구매글</PostTabItem>\n      </PostTab>\n    </HeaderWrapper>\n  );\n}\n\nexport default Header;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\question\\questionSlice.ts",["373"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { questionInterface } from '../../interfaces/Question.inteface';\r\n\r\nconst initialquestionList: questionInterface[] = [];\r\n\r\nconst questionSlice = createSlice({\r\n  name: 'question',\r\n  initialState: {\r\n    questionList: initialquestionList,\r\n    totalPage: 0,\r\n    isGetQuestionLoading: false,\r\n    isGetQuestionSucceed: false,\r\n    isGetQuestionError: null,\r\n  },\r\n  reducers: {\r\n    getQuestionRequest: (state, action) => {\r\n      state.isGetQuestionLoading = true;\r\n    },\r\n    getQuestionRequestSuccess: (state, action) => {\r\n      state.isGetQuestionLoading = false;\r\n      state.isGetQuestionSucceed = true;\r\n      state.questionList = action.payload.data;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getQuestionRequestError: (state, action) => {\r\n      state.isGetQuestionLoading = false;\r\n      state.isGetQuestionError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getQuestionRequest,\r\n  getQuestionRequestSuccess,\r\n  getQuestionRequestError,\r\n} = questionSlice.actions;\r\n\r\nexport default questionSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx",["374","375","376","377","378","379","380","381","382"],"import React, { useRef, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DaumPostCode, { AddressData } from 'react-daum-postcode';\nimport { emailCertificationAsync, emailDuplicationAsync, joinRequestAsync, nicknameDuplicationAsync } from '../../api/joinApi';\n\nconst Positional = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  font-size: 4.5vw;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n  }\n`;\n\nconst Header = styled.header`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  border-bottom: 1px solid #e0e0e0;\n  padding: 0.8em 0;\n  & h1 {\n    font-size: 4.5vw;\n    font-weight: 400;\n  }\n  @media screen and (min-width: 460px) {\n    width: 460px;\n    & h1 {\n    font-size: 20px;\n  }\n  }\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 1.5em 0;\n  display: flex;\n  justify-content: center;\n  overflow: auto;\n`;\n\nconst BackLink = styled(Link)`\n  position: absolute;\n  left: 0.5em;\n`;\n\nconst BackLogo = styled.img`\n  width: 1.8em;\n  height: 1.8em;\n`;\n\nconst JoinForm = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  & > div:last-child {\n    margin-bottom: 1.5em;\n  }\n  @media screen and (min-width: 460px) {\n    width: 414px;\n  }\n  `;\n\nconst JoinInputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1em;\n  & label {\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  @media screen and (min-width: 460px) {\n    & label {\n      font-size: 16.1px;\n    }\n  }\n`;\n\nconst JoinInput = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 0.5em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 4vw;\n  background: none;\n  border: none;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst CheckLogo = styled.img`\n  width: 1.2em;\n  height: 1.2em;\n  flex-grow: 1;\n  flex-shrink: 0;\n`;\n\nconst CertificationRequest = styled.button`\n  position: absolute;\n  right: 0;\n  font-size: 3vw;\n  font-weight: bold;\n  padding: 1em 1.5em;\n  background: #265290;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 13.8px;\n  }\n`;\n\nconst CertificationBox = styled.div`\n  display: none;\n  flex-direction: column;\n  margin-top: 0.5em;\n`;\n\nconst CertificationInputBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CertificationInput = styled.input`\n  width: 10em;\n  font-size: 4vw;\n  padding: 0.5em 1em;\n  margin-right: 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\nconst CertificationButton = styled.button`\n  font-size: 4vw;\n  font-weight: bold;\n  padding: 0.5em 1em;\n  background: #265290;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst InputMessage = styled.p`\n  font-size: 2vw;\n  margin-top: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 9.2px;\n  }\n`;\n\nconst SearchModal = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  background: #5c5c5c55;\n`;\n\nconst CloseButton = styled.img`\n  position: absolute;\n  width: 1.5em;\n  height: 1.5em;\n  top: 0.4em;\n  right: 0.4em;\n  font-size: 6vw;\n  @media screen and (min-width: 460px) {\n    font-size: 27.6px;\n  }\n`;\n\nconst AddressFormBox = styled.div`\n  margin-bottom: 2em;\n  & label {\n    display: block;\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  & ${JoinInput}:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  & ${JoinInput} {\n    padding: 0.5em;\n  }\n\n  @media screen and (min-width: 460px) {\n    & label {\n      font-size: 16.1px;\n    }\n  }\n`;\n\nconst AddressSearchBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1em;\n`;\nconst AddressSearchInput = styled.input`\n  width: 10em;\n  padding: 0.6em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  margin-right: 0.5em;\n  font-size: 4vw;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\nconst AddressSearchButton = styled.button`\n  padding: 0.7em;\n  background: #265290;\n  color: #fff;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  font-size: 3.5vw;\n  @media screen and (min-width: 460px) {\n    font-size: 16.1px;\n  }\n`;\n\nconst AgreementBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90vw;\n  margin-bottom: 2.5em;\n  @media screen and (min-width: 460px) {\n    width: 414px;\n  }\n`;\nconst AllAgreeBox = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 4.5vw;\n  font-weight: bold;\n  margin-bottom: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n  }\n`;\nconst AgreeCheckBox = styled.img`\n  width: 1.5em;\n  height: 1.5em;\n  margin-right: 0.5em;\n`;\nconst AgreeText = styled.div`\n  & span {\n    color: #265290;\n  }\n`;\n\nconst SubAgreeBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-size: 4vw;\n  margin-bottom: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst AgreeDetail = styled.img`\n  width: 1em;\n  height: 1em;\n  position: absolute;\n  right: 0;\n  transform: rotate(-90deg);\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst JoinButton = styled.button`\n  width: 80vw;\n  font-size: 4.5vw;\n  padding: 0.8em 0;\n  text-align: center;\n  color: #fff;\n  background: #265290;\n  border: none;\n  outline: none;\n  margin-bottom: 1.5em;\n  @media screen and (min-width: 460px) {\n    width: 368px;\n    font-size: 20px;\n  }\n`;\n\nfunction Join():JSX.Element {\n  const initialInputs = {\n    email: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n      duplicationCheck: false,\n      code: '',\n      certificationCheck: false,\n    },\n    nickname: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwd: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwdCheck: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    address: {\n      zipcode: '',\n      baseAddress: '',\n      detailAddress: '',\n    },\n    agreement: {\n      all: false,\n      agree1: false,\n      agree2: false,\n      agree3: false,\n    },\n  };\n\n  const [showsModal, setShowsModal] = useState(false);\n  const [inputs, setInputs] = useState(initialInputs);\n  const emailCertificationBox = useRef<HTMLInputElement>(null);\n  const history = useHistory();\n\n  const {\n    email,\n    nickname,\n    passwd,\n    passwdCheck,\n    address,\n    agreement,\n  } = inputs;\n\n  const inputChange = (name: 'email' | 'nickname' | 'passwd' | 'passwdCheck', value: string, state: 'check' | 'fail' | 'none', message: string, color: 'red' | 'blue') => {\n    setInputs({\n      ...inputs,\n      [name]: {\n        ...inputs[name],\n        value,\n        state,\n        message,\n        color,\n      },\n    });\n  };\n\n  const onChangeText = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        if (/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '이메일 형식이 아닙니다.', 'red');\n        }\n        break;\n      case 'nickname':\n        if (value.length < 4) {\n          inputChange(name, value, 'fail', '닉네임을 4자 이상 입력해주세요.', 'red');\n        } else {\n          try {\n            await nicknameDuplicationAsync(value);\n            inputChange(name, value, 'check', '', 'blue');\n          } catch {\n            inputChange(name, value, 'fail', '이미 사용중인 닉네임입니다.', 'red');\n          }\n        }\n        break;\n      case 'passwd':\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.', 'red');\n        }\n        break;\n      case 'passwdCheck':\n        if (value === passwd.value) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '비밀번호가 일치하지 않습니다.', 'red');\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onClickEmailDuplication = async () => {\n    try {\n      const result = await emailDuplicationAsync(email.value);\n\n      if (result) {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            duplicationCheck: true,\n          },\n        });\n        if (emailCertificationBox.current != null) {\n          emailCertificationBox.current.style.display = 'flex';\n        }\n      } else {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '이미 사용중인 이메일입니다.',\n            color: 'red',\n            duplicationCheck: false,\n          },\n        });\n      }\n    } catch (error) {\n      alert('서버 통신중 오류가 발생하였습니다.');\n    }\n  };\n\n  const onChangeCode = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      email: {\n        ...email,\n        code: e.target.value,\n      },\n    });\n  };\n\n  const onClickEmailCertification = async () => {\n    try {\n      const result = await emailCertificationAsync(email.value, email.code);\n\n      if (result) {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '인증이 완료되었습니다.',\n            color: 'blue',\n            certificationCheck: true,\n          },\n        });\n        if (emailCertificationBox.current != null) {\n          emailCertificationBox.current.style.display = 'none';\n        }\n      } else {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '코드를 확인해주세요.',\n            color: 'red',\n            certificationCheck: false,\n          },\n        });\n      }\n    } catch {\n      alert('서버 통신중 오류가 발생하였습니다.');\n    }\n  };\n\n  const onCompleteAddressSelect = (data: AddressData) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        zipcode: data.zonecode,\n        baseAddress: data.jibunAddress,\n      },\n    });\n    setShowsModal(false);\n  };\n\n  const onChangeDetailAddress = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        detailAddress: e.target.value,\n      },\n    });\n  };\n\n  const onClickAgree = (agree: 'all' | 'agree1' | 'agree2' | 'agree3') => {\n    if (agree === 'all') {\n      setInputs({\n        ...inputs,\n        agreement: {\n          all: !agreement.all,\n          agree1: !agreement.all,\n          agree2: !agreement.all,\n          agree3: !agreement.all,\n        },\n      });\n    } else {\n      const resultArr: boolean[] = [];\n\n      Object.keys(agreement).forEach((key) => {\n        if (key !== 'all' && (key === 'agree1' || key === 'agree2' || key === 'agree3')) {\n          if (key === agree) {\n            resultArr.push(!agreement[key]);\n          } else {\n            resultArr.push(agreement[key]);\n          }\n        }\n      });\n\n      if (agree === 'agree1' || agree === 'agree2' || agree === 'agree3') {\n        setInputs({\n          ...inputs,\n          agreement: {\n            ...agreement,\n            all: resultArr.every((value) => value === true),\n            [agree]: !agreement[agree],\n          },\n        });\n      }\n    }\n  };\n\n  const onsubmitJoin = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!email.certificationCheck) {\n      alert('이메일 인증을 진행해주세요.');\n    } else if (nickname.state !== 'check') {\n      alert('닉네임이 중복되었거나 형식이 맞지 않습니다.');\n    } else if (passwd.state !== 'check') {\n      alert('비밀번호 형식이 맞지 않습니다.');\n    } else if (passwdCheck.state !== 'check') {\n      alert('비밀번호가 일치하지 않습니다.');\n    } else if (address.zipcode === '') {\n      alert('주소를 입력해주세요.');\n    } else if (!agreement.agree1 || !agreement.agree2) {\n      alert('필수 약관 항목에 동의해주세요.');\n    } else {\n      await joinRequestAsync(email.value, nickname.value, passwd.value, `${address.baseAddress} ${address.detailAddress}`);\n      alert('회원가입이 완료되었습니다.');\n      history.push('/');\n    }\n  };\n\n  return (\n    <Positional>\n      <Header>\n        <BackLink to=\"/\">\n          <BackLogo src=\"/images/icons/back.png\" />\n        </BackLink>\n        <h1>회원가입</h1>\n      </Header>\n      <Main>\n        <JoinForm method=\"post\" onSubmit={onsubmitJoin}>\n          <JoinInputBox>\n            <label htmlFor=\"email\">이메일</label>\n            <JoinInput>\n              <Input required type=\"email\" id=\"email\" name=\"email\" onChange={onChangeText} value={email.value} disabled={email.duplicationCheck} />\n              <CheckLogo src={`/images/icons/${email.state}.png`} />\n              <CertificationRequest style={{ display: email.state === 'check' && !email.certificationCheck ? 'block' : 'none' }} type=\"button\" onClick={onClickEmailDuplication}>인증요청</CertificationRequest>\n            </JoinInput>\n            <CertificationBox ref={emailCertificationBox}>\n              <CertificationInputBox>\n                <CertificationInput name=\"certification\" onChange={onChangeCode} value={email.code} />\n                <CertificationButton type=\"button\" onClick={onClickEmailCertification}>확인</CertificationButton>\n              </CertificationInputBox>\n            </CertificationBox>\n            <InputMessage style={{ color: email.color }}>{email.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"nickname\">닉네임</label>\n            <JoinInput>\n              <Input required type=\"text\" maxLength={10} id=\"nickname\" name=\"nickname\" onChange={onChangeText} value={nickname.value} />\n              <CheckLogo src={`/images/icons/${nickname.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: nickname.color }}>{nickname.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwd\">비밀번호</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwd\" name=\"passwd\" onChange={onChangeText} value={passwd.value} />\n              <CheckLogo src={`/images/icons/${passwd.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwd.color }}>{passwd.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwdCheck\">비밀번호 확인</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwdCheck\" name=\"passwdCheck\" onChange={onChangeText} value={passwdCheck.value} />\n              <CheckLogo src={`/images/icons/${passwdCheck.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwdCheck.color }}>{passwdCheck.message}</InputMessage>\n          </JoinInputBox>\n          <AddressFormBox>\n            <label>주소</label>\n            <AddressSearchBox>\n              <AddressSearchInput disabled value={address.zipcode} />\n              <AddressSearchButton type=\"button\" onClick={() => setShowsModal(true)}>우편번호 검색</AddressSearchButton>\n            </AddressSearchBox>\n            <JoinInput>\n              <Input type=\"text\" disabled placeholder=\"상세 주소\" value={address.baseAddress} />\n            </JoinInput>\n            <JoinInput>\n              <Input type=\"text\" placeholder=\"나머지 주소\" onChange={onChangeDetailAddress} value={address.detailAddress} />\n            </JoinInput>\n          </AddressFormBox>\n          <AgreementBox>\n            <AllAgreeBox onClick={() => onClickAgree('all')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.all ? 'check' : 'check_default'}.png`} />\n              <AgreeText>전체 약관에 동의합니다.</AgreeText>\n            </AllAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree1')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree1 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>서비스 이용약관 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree2')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree2 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>개인정보 처리방침 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree3')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree3 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>이벤트 마케팅 수신 동의 <span>(선택)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n          </AgreementBox>\n          <ButtonWrapper>\n            <JoinButton type=\"submit\">회원가입</JoinButton>\n          </ButtonWrapper>\n        </JoinForm>\n      </Main>\n      <SearchModal style={{ display: showsModal ? 'flex' : 'none' }}>\n        <CloseButton src=\"/images/icons/x.png\" onClick={() => setShowsModal(false)} />\n        <DaumPostCode onComplete={onCompleteAddressSelect} />\n      </SearchModal>\n    </Positional>\n  );\n}\n\nexport default Join;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts",["383"],"import axios, { AxiosResponse } from 'axios';\nimport { Console } from 'console';\nimport { AddBookPostInterface } from '../interfaces/PostList.interface';\n\nexport function getAladinBook(title: string):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/ttb/api/ItemSearch.aspx?ttbkey=ttbehaakdl1816001&QueryType=Title&Query=${title}&output=js`);\n}\n// 일반사용자 판매/구매글 추가\nexport function addBookPostAPI(data: AddBookPostInterface):Promise<AxiosResponse> {\n  console.log(data);\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  };\n  return axios.post('http://local.corsmarket.ml/api/article', data, config);\n}\nexport function deleteBookPostAPI(id: number):Promise<AxiosResponse> {\n  return axios.delete(`http://local.corsmarket.ml/api/article/${id}`);\n}\n// 일반사용자 판매/구매글 리스트 불러오기\nexport function getBookPostAPI(filtering:{ division:string, category:string }, id?: number):Promise<AxiosResponse> {\n  console.log(filtering);\n  return axios.get(`http://local.corsmarket.ml/api/articles/${filtering.division}`, {\n    params: {\n      category: filtering.category, lastId: id,\n    },\n  });\n}\n// 일반사용자 판매/구매글 상세페이지 불러오기\nexport function getBookPostDetailViewAPI(postId: number):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/api/article/${postId}`);\n}\n// 마켓리스트 불러오기\nexport function getMarketListAPI():Promise<AxiosResponse> {\n  return axios.get('http://local.corsmarket.ml/api/market');\n}\nexport function deletePostAPI(id: number):Promise<AxiosResponse> {\n  return axios.get('http://local.corsmarket.ml/api/market/delete',\n    { params: { articleId: id } });\n}\n// 마켓글 불러오기\nexport function getMarketBookAPI(marketId: number):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/api/market/${marketId}`);\n}\n// 해당 마켓에 판매글 추가\nexport function addMarketBookPostAPI(marketId: number):Promise<AxiosResponse> {\n  return axios.post(`http://local.corsmarket.ml/api/market/${marketId}`);\n}\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mypage\\MyPage.tsx",["384"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\interfaces\\mockdata.ts",["385","386"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\question\\question.tsx",["387"],{"ruleId":"388","severity":1,"message":"389","line":3,"column":10,"nodeType":"390","messageId":"391","endLine":3,"endColumn":30},{"ruleId":"388","severity":1,"message":"392","line":4,"column":10,"nodeType":"390","messageId":"391","endLine":4,"endColumn":27},{"ruleId":"388","severity":1,"message":"393","line":5,"column":10,"nodeType":"390","messageId":"391","endLine":5,"endColumn":24},{"ruleId":"388","severity":1,"message":"394","line":5,"column":61,"nodeType":"390","messageId":"391","endLine":5,"endColumn":85},{"ruleId":"395","severity":1,"message":"396","line":213,"column":76,"nodeType":"397","messageId":"398","endLine":213,"endColumn":79,"suggestions":"399"},{"ruleId":"400","severity":1,"message":"401","line":250,"column":7,"nodeType":"402","messageId":"403","endLine":250,"endColumn":53},{"ruleId":"400","severity":1,"message":"401","line":253,"column":7,"nodeType":"402","messageId":"403","endLine":253,"endColumn":28},{"ruleId":"404","replacedBy":"405"},{"ruleId":"406","replacedBy":"407"},{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","replacedBy":"413"},{"ruleId":"414","replacedBy":"415"},{"ruleId":"388","severity":1,"message":"416","line":10,"column":12,"nodeType":"390","messageId":"391","endLine":10,"endColumn":15},{"ruleId":"388","severity":1,"message":"417","line":10,"column":33,"nodeType":"390","messageId":"391","endLine":10,"endColumn":38},{"ruleId":"388","severity":1,"message":"416","line":20,"column":12,"nodeType":"390","messageId":"391","endLine":20,"endColumn":15},{"ruleId":"388","severity":1,"message":"417","line":20,"column":33,"nodeType":"390","messageId":"391","endLine":20,"endColumn":38},{"ruleId":"404","replacedBy":"418"},{"ruleId":"406","replacedBy":"419"},{"ruleId":"408","replacedBy":"420"},{"ruleId":"410","replacedBy":"421"},{"ruleId":"412","replacedBy":"422"},{"ruleId":"414","replacedBy":"423"},{"ruleId":"404","replacedBy":"424"},{"ruleId":"406","replacedBy":"425"},{"ruleId":"408","replacedBy":"426"},{"ruleId":"410","replacedBy":"427"},{"ruleId":"412","replacedBy":"428"},{"ruleId":"414","replacedBy":"429"},{"ruleId":"430","severity":1,"message":"431","line":1,"column":26,"nodeType":"432","messageId":"433","endLine":1,"endColumn":42},{"ruleId":"395","severity":1,"message":"396","line":11,"column":11,"nodeType":"397","messageId":"398","endLine":11,"endColumn":14,"suggestions":"434"},{"ruleId":"395","severity":1,"message":"396","line":54,"column":86,"nodeType":"397","messageId":"398","endLine":54,"endColumn":89,"suggestions":"435"},{"ruleId":"404","replacedBy":"436"},{"ruleId":"406","replacedBy":"437"},{"ruleId":"408","replacedBy":"438"},{"ruleId":"410","replacedBy":"439"},{"ruleId":"412","replacedBy":"440"},{"ruleId":"414","replacedBy":"441"},{"ruleId":"388","severity":1,"message":"442","line":12,"column":38,"nodeType":"390","messageId":"391","endLine":12,"endColumn":44},{"ruleId":"388","severity":1,"message":"442","line":11,"column":31,"nodeType":"390","messageId":"391","endLine":11,"endColumn":37},{"ruleId":"388","severity":1,"message":"442","line":15,"column":31,"nodeType":"390","messageId":"391","endLine":15,"endColumn":37},{"ruleId":"388","severity":1,"message":"442","line":13,"column":38,"nodeType":"390","messageId":"391","endLine":13,"endColumn":44},{"ruleId":"388","severity":1,"message":"442","line":38,"column":31,"nodeType":"390","messageId":"391","endLine":38,"endColumn":37},{"ruleId":"388","severity":1,"message":"442","line":41,"column":37,"nodeType":"390","messageId":"391","endLine":41,"endColumn":43},{"ruleId":"388","severity":1,"message":"442","line":54,"column":32,"nodeType":"390","messageId":"391","endLine":54,"endColumn":38},{"ruleId":"388","severity":1,"message":"442","line":57,"column":39,"nodeType":"390","messageId":"391","endLine":57,"endColumn":45},{"ruleId":"388","severity":1,"message":"442","line":66,"column":39,"nodeType":"390","messageId":"391","endLine":66,"endColumn":45},{"ruleId":"388","severity":1,"message":"442","line":78,"column":37,"nodeType":"390","messageId":"391","endLine":78,"endColumn":43},{"ruleId":"388","severity":1,"message":"442","line":90,"column":40,"nodeType":"390","messageId":"391","endLine":90,"endColumn":46},{"ruleId":"388","severity":1,"message":"442","line":16,"column":31,"nodeType":"390","messageId":"391","endLine":16,"endColumn":37},{"ruleId":"388","severity":1,"message":"442","line":13,"column":33,"nodeType":"390","messageId":"391","endLine":13,"endColumn":39},{"ruleId":"395","severity":1,"message":"396","line":168,"column":57,"nodeType":"397","messageId":"398","endLine":168,"endColumn":60,"suggestions":"443"},{"ruleId":"395","severity":1,"message":"396","line":248,"column":62,"nodeType":"397","messageId":"398","endLine":248,"endColumn":65,"suggestions":"444"},{"ruleId":"400","severity":1,"message":"401","line":292,"column":7,"nodeType":"402","messageId":"403","endLine":292,"endColumn":24},{"ruleId":"400","severity":1,"message":"401","line":436,"column":7,"nodeType":"402","messageId":"403","endLine":436,"endColumn":28},{"ruleId":"400","severity":1,"message":"401","line":438,"column":7,"nodeType":"402","messageId":"403","endLine":438,"endColumn":35},{"ruleId":"400","severity":1,"message":"401","line":440,"column":7,"nodeType":"402","messageId":"403","endLine":440,"endColumn":30},{"ruleId":"400","severity":1,"message":"401","line":442,"column":7,"nodeType":"402","messageId":"403","endLine":442,"endColumn":32},{"ruleId":"400","severity":1,"message":"401","line":470,"column":9,"nodeType":"402","messageId":"403","endLine":470,"endColumn":28},{"ruleId":"395","severity":1,"message":"396","line":475,"column":88,"nodeType":"397","messageId":"398","endLine":475,"endColumn":91,"suggestions":"445"},{"ruleId":"400","severity":1,"message":"401","line":36,"column":7,"nodeType":"402","messageId":"403","endLine":36,"endColumn":27},{"ruleId":"388","severity":1,"message":"446","line":46,"column":12,"nodeType":"390","messageId":"391","endLine":46,"endColumn":18},{"ruleId":"388","severity":1,"message":"417","line":61,"column":13,"nodeType":"390","messageId":"391","endLine":61,"endColumn":18},{"ruleId":"388","severity":1,"message":"416","line":72,"column":12,"nodeType":"390","messageId":"391","endLine":72,"endColumn":15},{"ruleId":"388","severity":1,"message":"447","line":4,"column":8,"nodeType":"390","messageId":"391","endLine":4,"endColumn":16},{"ruleId":"388","severity":1,"message":"448","line":5,"column":8,"nodeType":"390","messageId":"391","endLine":5,"endColumn":14},{"ruleId":"388","severity":1,"message":"449","line":28,"column":27,"nodeType":"390","messageId":"391","endLine":28,"endColumn":34},{"ruleId":"395","severity":1,"message":"396","line":30,"column":50,"nodeType":"397","messageId":"398","endLine":30,"endColumn":53,"suggestions":"450"},{"ruleId":"388","severity":1,"message":"451","line":1,"column":38,"nodeType":"390","messageId":"391","endLine":1,"endColumn":46},{"ruleId":"395","severity":1,"message":"396","line":11,"column":22,"nodeType":"397","messageId":"398","endLine":11,"endColumn":25,"suggestions":"452"},{"ruleId":"388","severity":1,"message":"453","line":1,"column":10,"nodeType":"390","messageId":"391","endLine":1,"endColumn":24},{"ruleId":"388","severity":1,"message":"454","line":1,"column":39,"nodeType":"390","messageId":"391","endLine":1,"endColumn":52},{"ruleId":"388","severity":1,"message":"442","line":40,"column":38,"nodeType":"390","messageId":"391","endLine":40,"endColumn":44},{"ruleId":"388","severity":1,"message":"442","line":53,"column":34,"nodeType":"390","messageId":"391","endLine":53,"endColumn":40},{"ruleId":"430","severity":1,"message":"431","line":4,"column":28,"nodeType":"432","messageId":"433","endLine":4,"endColumn":60},{"ruleId":"388","severity":1,"message":"455","line":5,"column":10,"nodeType":"390","messageId":"391","endLine":5,"endColumn":26},{"ruleId":"400","severity":1,"message":"401","line":91,"column":9,"nodeType":"402","messageId":"403","endLine":91,"endColumn":33},{"ruleId":"400","severity":1,"message":"401","line":93,"column":9,"nodeType":"402","messageId":"403","endLine":93,"endColumn":30},{"ruleId":"388","severity":1,"message":"456","line":3,"column":10,"nodeType":"390","messageId":"391","endLine":3,"endColumn":26},{"ruleId":"388","severity":1,"message":"457","line":129,"column":33,"nodeType":"390","messageId":"391","endLine":129,"endColumn":50},{"ruleId":"395","severity":1,"message":"396","line":129,"column":95,"nodeType":"397","messageId":"398","endLine":129,"endColumn":98,"suggestions":"458"},{"ruleId":"395","severity":1,"message":"396","line":187,"column":34,"nodeType":"397","messageId":"398","endLine":187,"endColumn":37,"suggestions":"459"},{"ruleId":"404","replacedBy":"460"},{"ruleId":"406","replacedBy":"461"},{"ruleId":"408","replacedBy":"462"},{"ruleId":"410","replacedBy":"463"},{"ruleId":"412","replacedBy":"464"},{"ruleId":"414","replacedBy":"465"},{"ruleId":"388","severity":1,"message":"466","line":5,"column":10,"nodeType":"390","messageId":"391","endLine":5,"endColumn":21},{"ruleId":"388","severity":1,"message":"467","line":5,"column":23,"nodeType":"390","messageId":"391","endLine":5,"endColumn":35},{"ruleId":"388","severity":1,"message":"468","line":62,"column":11,"nodeType":"390","messageId":"391","endLine":62,"endColumn":25},{"ruleId":"388","severity":1,"message":"469","line":62,"column":27,"nodeType":"390","messageId":"391","endLine":62,"endColumn":39},{"ruleId":"395","severity":1,"message":"396","line":62,"column":64,"nodeType":"397","messageId":"398","endLine":62,"endColumn":67,"suggestions":"470"},{"ruleId":"388","severity":1,"message":"471","line":64,"column":9,"nodeType":"390","messageId":"391","endLine":64,"endColumn":16},{"ruleId":"395","severity":1,"message":"396","line":142,"column":44,"nodeType":"397","messageId":"398","endLine":142,"endColumn":47,"suggestions":"472"},{"ruleId":"395","severity":1,"message":"396","line":143,"column":50,"nodeType":"397","messageId":"398","endLine":143,"endColumn":53,"suggestions":"473"},{"ruleId":"430","severity":1,"message":"431","line":3,"column":25,"nodeType":"432","messageId":"433","endLine":3,"endColumn":57},{"ruleId":"388","severity":1,"message":"442","line":13,"column":42,"nodeType":"390","messageId":"391","endLine":13,"endColumn":48},{"ruleId":"395","severity":1,"message":"396","line":16,"column":55,"nodeType":"397","messageId":"398","endLine":16,"endColumn":58,"suggestions":"474"},{"ruleId":"388","severity":1,"message":"475","line":158,"column":21,"nodeType":"390","messageId":"391","endLine":158,"endColumn":33},{"ruleId":"476","severity":1,"message":"477","line":166,"column":24,"nodeType":"478","messageId":"479","endLine":166,"endColumn":33},{"ruleId":"388","severity":1,"message":"480","line":166,"column":34,"nodeType":"390","messageId":"391","endLine":166,"endColumn":39},{"ruleId":"476","severity":1,"message":"477","line":181,"column":27,"nodeType":"478","messageId":"479","endLine":181,"endColumn":36},{"ruleId":"388","severity":1,"message":"480","line":181,"column":37,"nodeType":"390","messageId":"391","endLine":181,"endColumn":42},{"ruleId":"395","severity":1,"message":"396","line":187,"column":29,"nodeType":"397","messageId":"398","endLine":187,"endColumn":32,"suggestions":"481"},{"ruleId":"404","replacedBy":"482"},{"ruleId":"406","replacedBy":"483"},{"ruleId":"408","replacedBy":"484"},{"ruleId":"410","replacedBy":"485"},{"ruleId":"412","replacedBy":"486"},{"ruleId":"414","replacedBy":"487"},{"ruleId":"395","severity":1,"message":"396","line":85,"column":45,"nodeType":"397","messageId":"398","endLine":85,"endColumn":48,"suggestions":"488"},{"ruleId":"388","severity":1,"message":"442","line":16,"column":33,"nodeType":"390","messageId":"391","endLine":16,"endColumn":39},{"ruleId":"400","severity":1,"message":"401","line":463,"column":7,"nodeType":"402","messageId":"403","endLine":463,"endColumn":35},{"ruleId":"400","severity":1,"message":"401","line":506,"column":7,"nodeType":"402","messageId":"403","endLine":506,"endColumn":35},{"ruleId":"400","severity":1,"message":"401","line":573,"column":7,"nodeType":"402","messageId":"403","endLine":573,"endColumn":31},{"ruleId":"400","severity":1,"message":"401","line":575,"column":7,"nodeType":"402","messageId":"403","endLine":575,"endColumn":40},{"ruleId":"400","severity":1,"message":"401","line":577,"column":7,"nodeType":"402","messageId":"403","endLine":577,"endColumn":33},{"ruleId":"400","severity":1,"message":"401","line":579,"column":7,"nodeType":"402","messageId":"403","endLine":579,"endColumn":32},{"ruleId":"400","severity":1,"message":"401","line":581,"column":7,"nodeType":"402","messageId":"403","endLine":581,"endColumn":27},{"ruleId":"400","severity":1,"message":"401","line":583,"column":7,"nodeType":"402","messageId":"403","endLine":583,"endColumn":33},{"ruleId":"400","severity":1,"message":"401","line":586,"column":7,"nodeType":"402","messageId":"403","endLine":586,"endColumn":30},{"ruleId":"388","severity":1,"message":"489","line":2,"column":10,"nodeType":"390","messageId":"391","endLine":2,"endColumn":17},{"ruleId":"395","severity":1,"message":"396","line":176,"column":40,"nodeType":"397","messageId":"398","endLine":176,"endColumn":43,"suggestions":"490"},{"ruleId":"430","severity":1,"message":"431","line":5,"column":33,"nodeType":"432","messageId":"433","endLine":5,"endColumn":64},{"ruleId":"430","severity":1,"message":"431","line":58,"column":34,"nodeType":"432","messageId":"433","endLine":58,"endColumn":57},{"ruleId":"395","severity":1,"message":"396","line":167,"column":59,"nodeType":"397","messageId":"398","endLine":167,"endColumn":62,"suggestions":"491"},"@typescript-eslint/no-unused-vars","'AddBookPostInterface' is defined but never used.","Identifier","unusedVar","'generateDummyPost' is defined but never used.","'addBookPostAPI' is defined but never used.","'getBookPostDetailViewAPI' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["492","493"],"no-alert","Unexpected alert.","CallExpression","unexpected","lines-around-directive",["494"],"no-spaced-func",["495"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'res' is defined but never used.","'error' is defined but never used.",["494"],["495"],[],[],[],[],["494"],["495"],[],[],[],[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["496","497"],["498","499"],["494"],["495"],[],[],[],[],"'action' is defined but never used.",["500","501"],["502","503"],["504","505"],"'result' is defined but never used.","'PostList' is defined but never used.","'MyPage' is defined but never used.","'history' is defined but never used.",["506","507"],"'useState' is defined but never used.",["508","509"],"'createSelector' is defined but never used.","'PayloadAction' is defined but never used.","'postLoginRequest' is defined but never used.","'DefaultRootState' is defined but never used.","'isAddBookPostDone' is assigned a value but never used.",["510","511"],["512","513"],["494"],["495"],[],[],[],[],"'LOGIN_ERROR' is defined but never used.","'SERVER_ERROR' is defined but never used.","'isLoginSucceed' is assigned a value but never used.","'isLoginError' is assigned a value but never used.",["514","515"],"'history' is assigned a value but never used.",["516","517"],["518","519"],["520","521"],"'userNickname' is defined but never used.","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","'frame' is defined but never used.",["522","523"],["494"],["495"],[],[],[],[],["524","525"],"'Console' is defined but never used.",["526","527"],["528","529"],{"messageId":"530","fix":"531","desc":"532"},{"messageId":"533","fix":"534","desc":"535"},"padding-line-between-statements","func-call-spacing",{"messageId":"530","fix":"536","desc":"532"},{"messageId":"533","fix":"537","desc":"535"},{"messageId":"530","fix":"538","desc":"532"},{"messageId":"533","fix":"539","desc":"535"},{"messageId":"530","fix":"540","desc":"532"},{"messageId":"533","fix":"541","desc":"535"},{"messageId":"530","fix":"542","desc":"532"},{"messageId":"533","fix":"543","desc":"535"},{"messageId":"530","fix":"544","desc":"532"},{"messageId":"533","fix":"545","desc":"535"},{"messageId":"530","fix":"546","desc":"532"},{"messageId":"533","fix":"547","desc":"535"},{"messageId":"530","fix":"548","desc":"532"},{"messageId":"533","fix":"549","desc":"535"},{"messageId":"530","fix":"550","desc":"532"},{"messageId":"533","fix":"551","desc":"535"},{"messageId":"530","fix":"552","desc":"532"},{"messageId":"533","fix":"553","desc":"535"},{"messageId":"530","fix":"554","desc":"532"},{"messageId":"533","fix":"555","desc":"535"},{"messageId":"530","fix":"556","desc":"532"},{"messageId":"533","fix":"557","desc":"535"},{"messageId":"530","fix":"558","desc":"532"},{"messageId":"533","fix":"559","desc":"535"},{"messageId":"530","fix":"560","desc":"532"},{"messageId":"533","fix":"561","desc":"535"},{"messageId":"530","fix":"562","desc":"532"},{"messageId":"533","fix":"563","desc":"535"},{"messageId":"530","fix":"564","desc":"532"},{"messageId":"533","fix":"565","desc":"535"},{"messageId":"530","fix":"566","desc":"532"},{"messageId":"533","fix":"567","desc":"535"},{"messageId":"530","fix":"568","desc":"532"},{"messageId":"533","fix":"569","desc":"535"},"suggestUnknown",{"range":"570","text":"571"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"570","text":"572"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"573","text":"571"},{"range":"573","text":"572"},{"range":"574","text":"571"},{"range":"574","text":"572"},{"range":"575","text":"571"},{"range":"575","text":"572"},{"range":"576","text":"571"},{"range":"576","text":"572"},{"range":"577","text":"571"},{"range":"577","text":"572"},{"range":"578","text":"571"},{"range":"578","text":"572"},{"range":"579","text":"571"},{"range":"579","text":"572"},{"range":"580","text":"571"},{"range":"580","text":"572"},{"range":"581","text":"571"},{"range":"581","text":"572"},{"range":"582","text":"571"},{"range":"582","text":"572"},{"range":"583","text":"571"},{"range":"583","text":"572"},{"range":"584","text":"571"},{"range":"584","text":"572"},{"range":"585","text":"571"},{"range":"585","text":"572"},{"range":"586","text":"571"},{"range":"586","text":"572"},{"range":"587","text":"571"},{"range":"587","text":"572"},{"range":"588","text":"571"},{"range":"588","text":"572"},{"range":"589","text":"571"},{"range":"589","text":"572"},[4240,4243],"unknown","never",[397,400],[1282,1285],[3294,3297],[4769,4772],[11026,11029],[816,819],[235,238],[3260,3263],[5162,5165],[1368,1371],[3182,3185],[3262,3265],[667,670],[4332,4335],[1839,1842],[3399,3402],[3301,3304]]