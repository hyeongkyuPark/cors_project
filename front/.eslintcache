[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSaga.ts":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSaga.ts":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\historyUtil.ts":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostContent.tsx":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\QuestionDetail.tsx":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\MyPage.tsx":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSlice.ts":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\PostActionButton.tsx":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSlice.ts":"12","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts":"13","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\Loading.tsx":"14","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImagesZoom.tsx":"15","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signUp\\Join.tsx":"16","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts":"17","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostButton.tsx":"18","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\CategoryMenu.tsx":"19","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts":"20","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\ChattingList.tsx":"21","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\Review.tsx":"22","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSaga.ts":"23","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSlice.ts":"24","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\marketApi.ts":"25","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\mockdata.ts":"26","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts":"27","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts":"28","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImageSlide.tsx":"29","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSaga.ts":"30","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostView.tsx":"31","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostPage.tsx":"32","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\WishList.tsx":"33","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myMarket\\AddMyMarket.tsx":"34","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSaga.ts":"35","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\questionApi.ts":"36","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\SearchBook.tsx":"37","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\modals\\AskModal.tsx":"38","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\Market.tsx":"39","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\modifyProfile\\ModifyProfile.tsx":"40","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts":"41","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\LoginForm.tsx":"42","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\ImagePreView.tsx":"43","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx":"44","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\MyPurchaseArticle.tsx":"45","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSlice.ts":"46","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSlice.ts":"47","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSaga.ts":"48","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\SocialLogin.tsx":"49","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts":"50","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\Editor.tsx":"51","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts":"52","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\Login.tsx":"53","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\MySaleArticle.tsx":"54","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\modals\\PostDeleteModal.tsx":"55","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx":"56","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\Header.tsx":"57","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\marketSlice.ts":"58","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\AddQuestion.tsx":"59","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSlice.ts":"60","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts":"61","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NodataPage.tsx":"62","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\modifyPost\\ModifyPost.tsx":"63","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts":"64","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\marketSaga.ts":"65","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\signIn\\LoginForm.tsx":"66","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\signIn\\AdminSignIn.tsx":"67","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\home\\AdminHome.tsx":"68","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSlice.ts":"69","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSaga.ts":"70","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\notice\\AdminNotice.tsx":"71","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\notice\\NoticeDetail.tsx":"72","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\adminSlice.ts":"73","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\adminSaga.ts":"74","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\Notice.tsx":"75","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSlice.ts":"76","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\InfiniteScrollList.tsx":"77","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\question.tsx":"78","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\timeForToday.ts":"79","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NotFound.tsx":"80","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\ChattingSub.tsx":"81","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishsApi.ts":"82","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts":"83","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSlice.ts":"84","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSaga.ts":"85","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts":"86"},{"size":1573,"mtime":1614678490536,"results":"87","hashOfConfig":"88"},{"size":3234,"mtime":1614219824185,"results":"89","hashOfConfig":"88"},{"size":856,"mtime":1613897048141,"results":"90","hashOfConfig":"88"},{"size":271,"mtime":1613897076483,"results":"91","hashOfConfig":"88"},{"size":6042,"mtime":1614466459092,"results":"92","hashOfConfig":"88"},{"size":511,"mtime":1614674779637,"results":"93","hashOfConfig":"88"},{"size":5781,"mtime":1614228106617,"results":"94","hashOfConfig":"88"},{"size":9380,"mtime":1614655773476,"results":"95","hashOfConfig":"88"},{"size":3904,"mtime":1614219824193,"results":"96","hashOfConfig":"88"},{"size":1330,"mtime":1614219824181,"results":"97","hashOfConfig":"88"},{"size":594,"mtime":1614674814058,"results":"98","hashOfConfig":"88"},{"size":923,"mtime":1613897076472,"results":"99","hashOfConfig":"88"},{"size":191,"mtime":1613542151677,"results":"100","hashOfConfig":"88"},{"size":652,"mtime":1613897076454,"results":"101","hashOfConfig":"88"},{"size":1565,"mtime":1613897076474,"results":"102","hashOfConfig":"88"},{"size":19029,"mtime":1614655773474,"results":"103","hashOfConfig":"88"},{"size":2498,"mtime":1614655773451,"results":"104","hashOfConfig":"88"},{"size":1486,"mtime":1614466459090,"results":"105","hashOfConfig":"88"},{"size":3640,"mtime":1613897860272,"results":"106","hashOfConfig":"88"},{"size":440,"mtime":1611271238964,"results":"107","hashOfConfig":"88"},{"size":2206,"mtime":1613897076458,"results":"108","hashOfConfig":"88"},{"size":3263,"mtime":1613897048147,"results":"109","hashOfConfig":"88"},{"size":1040,"mtime":1613897048134,"results":"110","hashOfConfig":"88"},{"size":1097,"mtime":1613897048136,"results":"111","hashOfConfig":"88"},{"size":1214,"mtime":1614615342555,"results":"112","hashOfConfig":"88"},{"size":1218,"mtime":1613897048146,"results":"113","hashOfConfig":"88"},{"size":1508,"mtime":1613542151465,"results":"114","hashOfConfig":"88"},{"size":343,"mtime":1613272432332,"results":"115","hashOfConfig":"88"},{"size":1414,"mtime":1613897076473,"results":"116","hashOfConfig":"88"},{"size":565,"mtime":1613913478043,"results":"117","hashOfConfig":"88"},{"size":1422,"mtime":1614466459091,"results":"118","hashOfConfig":"88"},{"size":8507,"mtime":1614466459093,"results":"119","hashOfConfig":"88"},{"size":8190,"mtime":1613897048149,"results":"120","hashOfConfig":"88"},{"size":9163,"mtime":1614655773480,"results":"121","hashOfConfig":"88"},{"size":1495,"mtime":1613976606213,"results":"122","hashOfConfig":"88"},{"size":2053,"mtime":1613976559095,"results":"123","hashOfConfig":"88"},{"size":1253,"mtime":1614219824145,"results":"124","hashOfConfig":"88"},{"size":1776,"mtime":1614219824141,"results":"125","hashOfConfig":"88"},{"size":2584,"mtime":1614219824153,"results":"126","hashOfConfig":"88"},{"size":15152,"mtime":1614655773471,"results":"127","hashOfConfig":"88"},{"size":569,"mtime":1613272432329,"results":"128","hashOfConfig":"88"},{"size":3011,"mtime":1614215856769,"results":"129","hashOfConfig":"88"},{"size":1697,"mtime":1614219824145,"results":"130","hashOfConfig":"88"},{"size":3748,"mtime":1614660411732,"results":"131","hashOfConfig":"88"},{"size":7940,"mtime":1613897048131,"results":"132","hashOfConfig":"88"},{"size":1003,"mtime":1613897048153,"results":"133","hashOfConfig":"88"},{"size":1173,"mtime":1613897048134,"results":"134","hashOfConfig":"88"},{"size":950,"mtime":1613897048152,"results":"135","hashOfConfig":"88"},{"size":1083,"mtime":1613993515095,"results":"136","hashOfConfig":"88"},{"size":1364,"mtime":1613542151453,"results":"137","hashOfConfig":"88"},{"size":1972,"mtime":1614219824145,"results":"138","hashOfConfig":"88"},{"size":358,"mtime":1613272432328,"results":"139","hashOfConfig":"88"},{"size":1957,"mtime":1614232708788,"results":"140","hashOfConfig":"88"},{"size":7911,"mtime":1613897048135,"results":"141","hashOfConfig":"88"},{"size":571,"mtime":1614219824141,"results":"142","hashOfConfig":"88"},{"size":2240,"mtime":1614237645416,"results":"143","hashOfConfig":"88"},{"size":4154,"mtime":1614219824189,"results":"144","hashOfConfig":"88"},{"size":4244,"mtime":1614655773467,"results":"145","hashOfConfig":"88"},{"size":5613,"mtime":1614215856763,"results":"146","hashOfConfig":"88"},{"size":1379,"mtime":1613897048142,"results":"147","hashOfConfig":"88"},{"size":441,"mtime":1613897048100,"results":"148","hashOfConfig":"88"},{"size":347,"mtime":1613897076455,"results":"149","hashOfConfig":"88"},{"size":5739,"mtime":1614466459094,"results":"150","hashOfConfig":"88"},{"size":512,"mtime":1613542151477,"results":"151","hashOfConfig":"88"},{"size":2993,"mtime":1614655773463,"results":"152","hashOfConfig":"88"},{"size":2234,"mtime":1614655773469,"results":"153","hashOfConfig":"88"},{"size":1404,"mtime":1614655773461,"results":"154","hashOfConfig":"88"},{"size":1832,"mtime":1614608189191,"results":"155","hashOfConfig":"88"},{"size":4188,"mtime":1614655773481,"results":"156","hashOfConfig":"88"},{"size":814,"mtime":1614219824177,"results":"157","hashOfConfig":"88"},{"size":4396,"mtime":1614678143041,"results":"158","hashOfConfig":"88"},{"size":7008,"mtime":1614678628106,"results":"159","hashOfConfig":"88"},{"size":2619,"mtime":1614678033701,"results":"160","hashOfConfig":"88"},{"size":1299,"mtime":1614676512674,"results":"161","hashOfConfig":"88"},{"size":5775,"mtime":1613897048138,"results":"162","hashOfConfig":"88"},{"size":2335,"mtime":1613982495589,"results":"163","hashOfConfig":"88"},{"size":3018,"mtime":1613897076476,"results":"164","hashOfConfig":"88"},{"size":6508,"mtime":1614065773896,"results":"165","hashOfConfig":"88"},{"size":657,"mtime":1614219824209,"results":"166","hashOfConfig":"88"},{"size":171,"mtime":1613542151489,"results":"167","hashOfConfig":"88"},{"size":416,"mtime":1614466459083,"results":"168","hashOfConfig":"88"},{"size":483,"mtime":1613542151477,"results":"169","hashOfConfig":"88"},{"size":241,"mtime":1613542151673,"results":"170","hashOfConfig":"88"},{"size":511,"mtime":1613975138422,"results":"171","hashOfConfig":"88"},{"size":4579,"mtime":1614655773479,"results":"172","hashOfConfig":"88"},{"size":2262,"mtime":1614466459081,"results":"173","hashOfConfig":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sthwp6",{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"187"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"187"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"181"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"211"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"211"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"181"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"187"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"207"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"221"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"181"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"207"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"178"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"207"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"207"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"211"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"181"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"211"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSaga.ts",[],["383","384","385","386","387","388"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSaga.ts",[],["389","390","391","392","393","394"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\historyUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostContent.tsx",["395","396"],"import React, { useEffect, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\nimport countUtil from '../../../utils/countDaoUtil';\nimport ProgressUtil from '../../../utils/progressUtil';\nimport { deleteBookPostRequest } from '../postSlice';\nimport { postAddWishListRequest, postRemoveWishListRequest } from '../../signIn/userSlice';\nimport ImageSlide from './ImageSlide';\nimport timeForToday from '../../../utils/timeForToday';\nimport PostActionButton from './PostActionButton';\nimport { loadDetailBookPostRequest } from './detailViewSlice';\n\ninterface DetailPostInterface {\n  id: number;\n}\nconst ContentWrapper = styled.div`\n`;\nconst ContentTop = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border-bottom: 1px solid #e8e8e8;\n`;\nconst ContentMain = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  margin: 0 auto;\n`;\nconst ProfileWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n`;\nconst ProfileImg = styled.img`\n  width: 50px;\n  height: 50px;\n  border: 1px solid #e8e8e8;\n  border-radius: 50%;\n  padding: 2px;\n`;\nconst NickName = styled.div`\n  margin-left: 10px;\n`;\nconst State = styled.div`\n  color: #3960a6;\n  border: 1px solid #3960a6;\n  padding: 5px 10px;\n  border-radius: 20px;\n`;\nconst ContentTitle = styled.div`\n  padding: 10px 0;\n  font-size: 20px;\n  font-weight: 600;\n`;\nconst Category = styled.div`\n  font-size: 13px;\n  color: #919191;\n`;\nconst Thumbnail = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #e8e8e8;\n  color: #3960a6;\n  font-weight: 700;\n  border-radius: 5px;\n  & img {\n    width: 80px;\n    margin-right: 20px;\n  }\n`;\nconst Content = styled.div`\n  padding: 20px 0;\n`;\nconst AdditionalContent = styled.div`\n  padding: 20px 0;\n  font-size: 13px;\n`;\nconst OtherBooksButton = styled.button`\n  color: white;\n  background: #3960a6;\n  width: 100%;\n  border: 0;\n  padding: 10px;\n  font-size: 15px;\n  border-radius: 5px;\n  margin: 0 auto;\n`;\nconst ContentBottom = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  font-size: 20px;\n  border-top: 1px solid #e8e8e8;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n`;\nconst ChattingButton = styled.button`\n  color: white;\n  background: #3960a6;\n  max-width: 200px;\n  border: 0;\n  padding: 10px;\n  font-size: 15px;\n  border-radius: 5px;\n`;\nconst HeartButton = styled.button`\n  background: transparent;\n  border: 0;\n  & img {\n    width: 35px;\n  }\n`;\nconst Price = styled.div`\n  font-weight: 800;\n`;\nconst Report = styled.div`\n  font-size: 15px;\n  padding: 20px 0;\n`;\nconst UploadeTime = styled.div`\n  font-size: 13px;\n  color: #919191;\n  padding: 10px 0;\n`;\n\nfunction DetailPostContent({ id } :DetailPostInterface):JSX.Element {\n  const dispatch = useDispatch();\n  const [heart, setHeart] = useState(false);\n  const { wishList, email } = useSelector((state: any) => state.userSlice.user);\n  const { detailBookPost } = useSelector((state: any) => state.detailViewSlice);\n  const isMe = detailBookPost.member.email === email;\n  const history = useHistory();\n  const HandleHeartButton = () => {\n    if (heart) {\n      dispatch(postRemoveWishListRequest(detailBookPost.articleId));\n    } else {\n      dispatch(postAddWishListRequest(detailBookPost.articleId));\n    }\n  };\n\n  const deletePost = useCallback(() => {\n    dispatch(deleteBookPostRequest(id));\n    setTimeout(() => {\n      history.push('/home');\n      ToastsStore.success('삭제가 완료되었습니다.');\n    }, 1000);\n  }, [dispatch, history, id]);\n  const editPost = useCallback(() => {\n    dispatch(loadDetailBookPostRequest(id));\n    history.push(`/modifyPost/${id}`);\n  }, [dispatch, history, id]);\n\n  useEffect(() => {\n    setHeart(wishList.includes(detailBookPost.articleId));\n  }, [wishList, detailBookPost]);\n\n  return (\n    <>\n      <ImageSlide images={detailBookPost.image} />\n      <ContentWrapper>\n        <ContentTop>\n          <ProfileWrapper>\n            <ProfileImg src=\"/images/icons/init_profile.png\" alt=\"profile\" />\n            <NickName>{detailBookPost.member.nickname}</NickName>\n          </ProfileWrapper>\n          <State>{ProgressUtil(detailBookPost.progress)}</State>\n        </ContentTop>\n        <ContentMain>\n          <ContentTitle>{detailBookPost.title}</ContentTitle>\n          <Category>{CategoryFormatUtil(detailBookPost.category)}</Category>\n          <UploadeTime>{timeForToday(detailBookPost.writeDate)}</UploadeTime>\n          <Thumbnail>\n            <img src={detailBookPost.thumbnail} alt=\"thumnail\" />\n            <div>원가: {detailBookPost.rprice} 원</div>\n          </Thumbnail>\n          <Content>\n            {detailBookPost.content}\n          </Content>\n          <AdditionalContent>{countUtil(detailBookPost.count)}</AdditionalContent>\n          <OtherBooksButton>판매자의 다른도서 보러가기</OtherBooksButton>\n          {!isMe && <Report>신고하기⚡️</Report>}\n          {isMe && <PostActionButton onEdit={editPost} onRemove={deletePost} />}\n        </ContentMain>\n        <ContentBottom>\n          <HeartButton onClick={HandleHeartButton}>\n            <img src={heart ? '/images/icons/heart_active.png' : '/images/icons/heart.png'} alt=\"heartButton\" />\n          </HeartButton>\n          <Price>{detailBookPost.tprice} 원</Price>\n          <NavLink to={`/chatting/${id}`}>\n            {!isMe && <ChattingButton>채팅하기</ChattingButton>}\n          </NavLink>\n        </ContentBottom>\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n      </ContentWrapper>\n    </>\n  );\n}\n\nexport default DetailPostContent;\n",["397","398","399","400","401","402"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts",[],["403","404","405","406","407","408"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\QuestionDetail.tsx",["409"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { commentInterface } from '../../../interfaces/Question.inteface';\r\nimport { getQuestionDetailRequest } from './questionSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n  line-height: 1.3em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  margin-bottom: 1.5em;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  justify-content: center;\r\n  padding: 0 1em;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst TitleArea = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1.5em 1em;\r\n  border: 1px solid #ccc;\r\n  margin-bottom: 0.5em;\r\n  & h2 {\r\n    text-align: left;\r\n  }\r\n  & p {\r\n    color: #666666;\r\n    font-size: 3.5vw;\r\n    flex-shrink: 0;\r\n    margin-left: 1em;\r\n  }\r\n  & p.commentOk {\r\n    color: #3162C7;\r\n  }\r\n\r\n  @media screen and (min-width: 455px) {\r\n    & p {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContentArea = styled.div`\r\n  width: 100%;\r\n  height: 60vh;\r\n  min-height: 300px;\r\n  overflow: auto;\r\n  padding: 1em;\r\n  border: 1px solid #ccc;\r\n  font-size: 3.8vw;\r\n  & p.content_title {\r\n    color: #3162C7;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & pre {\r\n    margin-bottom: 1em;\r\n  }\r\n  & li {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0.7em 0;\r\n  }\r\n  & li:not(:last-child) {\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 17.2976px;\r\n  }\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CommentWriter = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  & * {\r\n    font-size: 3vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & * {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction QuestionDetail():JSX.Element {\r\n  const { detailId, questionDetail, isGetQuestionDetailError, comments } = useSelector((state: any) => state.myPageSlice.questionSlice);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(getQuestionDetailRequest(detailId));\r\n  }, [dispatch, detailId]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <BackLink to=\"/question\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>문의사항 상세</h1>\r\n      </Header>\r\n      {\r\n        isGetQuestionDetailError !== null\r\n          ? (\r\n            <>\r\n              <EmptyArticle>\r\n                <h2>접근 권한이 없거나 잘못된 접근입니다.</h2>\r\n                <button type=\"button\" onClick={() => history.push('/mypage')}>마이페이지로 가기</button>\r\n              </EmptyArticle>\r\n            </>\r\n          )\r\n          : (\r\n            <Content>\r\n              <TitleArea>\r\n                <h2>{questionDetail.title}</h2>\r\n                {\r\n                  questionDetail.comments.length === 0\r\n                    ? (\r\n                      <p>[답변대기중]</p>\r\n                    )\r\n                    : (\r\n                      <p className=\"commentOk\">[답변완료]</p>\r\n                    )\r\n                }\r\n              </TitleArea>\r\n              <ContentArea>\r\n                <p className=\"content_title\">[문의내용]</p>\r\n                <pre>{questionDetail.content}</pre>\r\n                <p className=\"content_title\">[답변내용]</p>\r\n                {\r\n                  questionDetail.comments.length === 0\r\n                    ? (\r\n                      <p>답변 대기중입니다. 신속히 답변 드리겠습니다.</p>\r\n                    )\r\n                    : (\r\n                      <ul>\r\n                        {\r\n                          comments.map((item: commentInterface) => (\r\n                            <li>\r\n                              <CommentWriter>\r\n                                <h2>작성자 : {item.nickname}</h2>\r\n                                <p>작성일 : {item.writeDate}</p>\r\n                              </CommentWriter>\r\n                              <p>{item.content}</p>\r\n                            </li>\r\n                          ))\r\n                        }\r\n                      </ul>\r\n                    )\r\n                }\r\n              </ContentArea>\r\n            </Content>\r\n          )\r\n      }\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QuestionDetail;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\MyPage.tsx",["410"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSlice.ts",["411","412","413","414","415"],"import { createSlice } from '@reduxjs/toolkit';\nimport { articleInterface } from '../../interfaces/PostList.interface';\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    bookPost: [],\n    originalPost: null,\n    hasMorePost: true,\n    filtering: { division: 'sales', category: '', title: '' },\n\n    isLoadBookPostLoading: false,\n    isLoadBookPostDone: false,\n    isLoadBookPostError: false,\n\n    isLoadScrollBookPostLoading: false,\n    isLoadScrollPostDone: false,\n    isLoadScrollPostError: null,\n\n    isAddBookPostLoading: false,\n    isAddBookPostDone: false,\n    isAddBookPostError: null,\n\n    isModifyBookPostLoading: false,\n    isModifyBookPostDone: false,\n    isModifyBookPostError: null,\n\n    isDeleteBookPostLoading: false,\n    isDeleteBookPostDone: false,\n    isDeleteBookPostError: null,\n  },\n  reducers: {\n    loadBookPostRequest(state, action) {\n      state.isLoadBookPostLoading = true;\n      state.isLoadScrollBookPostLoading = false;\n      state.hasMorePost = true;\n      state.filtering.division = action.payload.filtering.division;\n      state.filtering.category = action.payload.filtering.category;\n      state.filtering.title = action.payload.filtering.title;\n    },\n    loadBookPostSuccess(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostDone = true;\n      state.bookPost = action.payload.data;\n    },\n    loadBookPostError(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostError = action.payload;\n    },\n    loadScrollBookPostRequest(state, action) {\n      state.isLoadScrollBookPostLoading = true;\n    },\n    loadScrollBookPostSuccess(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostDone = true;\n      state.bookPost = state.bookPost.concat(action.payload.data);\n      state.hasMorePost = action.payload.data.length === 10;\n    },\n    loadScrollBookPostError(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostError = action.payload;\n    },\n    addBookPostRequest(state, action) {\n      state.isAddBookPostLoading = true;\n      state.isAddBookPostDone = false;\n    },\n    addBookPostSuccess(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = true;\n      // state.bookPost = action.payload.data.concat(state.bookPost);\n    },\n    addBookPostError(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = false;\n      state.isAddBookPostError = action.payload.error;\n    },\n    modifyBookPostRequest(state, action) {\n      state.isModifyBookPostLoading = true;\n    },\n    modifyBookPostSuccess(state, action) {\n      state.isModifyBookPostLoading = false;\n      state.isModifyBookPostDone = true;\n      state.originalPost = action.payload.data;\n    },\n    modifyBookPostError(state, action) {\n      state.isModifyBookPostLoading = false;\n      state.isModifyBookPostError = action.payload.error;\n    },\n    deleteBookPostRequest(state, action) {\n      state.isDeleteBookPostLoading = true;\n    },\n    deleteBookPostSuccess(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostDone = true;\n      state.bookPost.filter((post:articleInterface) => post.articleId !== action.payload);\n    },\n    deleteBookPostError(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  loadBookPostRequest,\n  loadBookPostSuccess,\n  loadBookPostError,\n\n  loadScrollBookPostRequest,\n  loadScrollBookPostSuccess,\n  loadScrollBookPostError,\n\n  addBookPostRequest,\n  addBookPostSuccess,\n  addBookPostError,\n\n  modifyBookPostRequest,\n  modifyBookPostSuccess,\n  modifyBookPostError,\n\n  deleteBookPostRequest,\n  deleteBookPostSuccess,\n  deleteBookPostError,\n} = postSlice.actions;\n\nexport default postSlice.reducer;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\PostActionButton.tsx",[],["416","417","418","419","420","421"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSlice.ts",["422"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst detailViewSlice = createSlice({\n  name: 'detailView',\n  initialState: {\n    detailBookPost: null,\n    isLoadDetailBookPostLoading: false,\n    isLoadDetailBookPostDone: false,\n    isLoadDetailBookPostError: null,\n  },\n  reducers: {\n    loadDetailBookPostRequest(state, action) {\n      state.isLoadDetailBookPostLoading = true;\n    },\n    loadDetailBookPostSuccess(state, action) {\n      state.isLoadDetailBookPostLoading = false;\n      state.isLoadDetailBookPostDone = true;\n      state.detailBookPost = action.payload.data;\n    },\n    loadDetailBookPostError(state, action) {\n      state.isLoadDetailBookPostLoading = false;\n      state.isLoadDetailBookPostError = action.payload;\n    },\n  },\n});\n\nexport const {\n  loadDetailBookPostRequest,\n  loadDetailBookPostSuccess,\n  loadDetailBookPostError,\n} = detailViewSlice.actions;\n\nexport default detailViewSlice.reducer;\n",["423","424","425","426","427","428"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts",["429"],"const numberArrayUtill = (num: number) => {\r\n  const result = [];\r\n\r\n  for (let i = 1; i <= num; i++) {\r\n    result.push(i);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport default numberArrayUtill;\r\n",["430","431","432","433","434","435"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\Loading.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImagesZoom.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signUp\\Join.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts",["436","437","438","439"],"import axios, { AxiosResponse } from 'axios';\nimport { Base64 } from 'js-base64';\nimport { memberInterface, modifyProfileInterface } from '../interfaces/UserInterface';\n\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const SERVER_ERROR = 'SERVER_ERROR';\n\nexport function postLoginAsync(user: { email: string, passwd: string }): Promise<memberInterface> | Promise<AxiosResponse> {\n  return axios({\n    method: 'post',\n    url: '/api/login',\n    params: {\n      email: user.email,\n      passwd: user.passwd,\n    },\n  }).then((result) => {\n    console.log(result);\n    const { nickname, profile_img: profileImg, latitude, longitude, role, articlelist, wishlist, mymarketlist } = result.headers;\n\n    const loginUser: memberInterface = {\n      email: user.email,\n      nickname: Base64.decode(nickname),\n      profileImg,\n      latitude,\n      longitude,\n      role,\n      articles: articlelist === undefined ? [] : JSON.parse(articlelist),\n      wishList: wishlist === undefined ? [] : JSON.parse(wishlist),\n      myMarketList: mymarketlist === undefined ? [] : JSON.parse(mymarketlist),\n    };\n    return loginUser;\n  }).catch((error) => {\n    if (error.response.status === 400) {\n      throw new Error(LOGIN_ERROR);\n    } else if (error.response.status === 500) {\n      throw new Error(SERVER_ERROR);\n    } else {\n      alert('서버에러 관리자 호출');\n    }\n    return error;\n  });\n}\n\nexport function socialLoginAsync(social: string): Promise<boolean> {\n  return axios({\n    method: 'post',\n    url: `/api/oauth2/authorization/${social}`,\n  }).then((result) => true).catch((error) => {\n    if (error.response.status !== 400) {\n      throw new Error('서버 통신 에러');\n    }\n    return false;\n  });\n}\n\nexport function logoutAsync(): Promise<boolean> {\n  return axios({\n    method: 'post',\n    url: '/api/logout',\n  }).then((result) => {\n    console.log(result);\n    return true;\n  }).catch((error) => false);\n}\n\nexport function modifyProfileAsync(modifyProfile: FormData): Promise<AxiosResponse> {\n  return axios({\n    method: 'put',\n    url: '/api/change/profile',\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    data: modifyProfile,\n  }).then((res) => {\n    console.log(res);\n    const { nickname, profile_img } = res.data.data;\n    return { state: true, nickname: Base64.decode(nickname), profileImg: profile_img };\n  }).catch((error) => {\n    if (error.response.status !== 400) {\n      throw new Error('서버통신에러');\n    }\n    return error;\n  });\n}\n",["440","441","442","443","444","445"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostButton.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\CategoryMenu.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts",["446"],"import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",["447","448","449","450","451","452"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\ChattingList.tsx",[],["453","454","455","456","457","458"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\Review.tsx",[],["459","460","461","462","463","464"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSlice.ts",["465"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst mySaleArticleSlice = createSlice({\r\n  name: 'myArticle',\r\n  initialState: {\r\n    mySaleArticle: [],\r\n    totalPage: 0,\r\n    isGetMySaleArticlesLoading: false, // 내 판매글 가져오기\r\n    isGetMySaleArticlesSuccess: false,\r\n    isGetMySaleArticlesError: null,\r\n  },\r\n  reducers: {\r\n    getMySaleArticleRequest: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = true;\r\n    },\r\n    getMySaleArticleRequestSuccess: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesSuccess = true;\r\n      state.mySaleArticle = action.payload.myAricleList;\r\n      state.totalPage = action.payload.pageTotal;\r\n    },\r\n    getMySaleArticleRequestError: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getMySaleArticleRequest,\r\n  getMySaleArticleRequestSuccess,\r\n  getMySaleArticleRequestError,\r\n} = mySaleArticleSlice.actions;\r\n\r\nexport default mySaleArticleSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\marketApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\mockdata.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts",[],["466","467","468","469","470","471"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImageSlide.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostView.tsx",["472","473","474"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostPage.tsx",["475","476","477"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\WishList.tsx",["478","479","480"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getWishListRequest } from './wishListSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MyWishsItems = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MyWishsItem = styled.div`\r\n  \r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImgBox = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 9em;\r\n  height: 10em;\r\n  margin-right: 1.5em;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: auto;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 2.5vw;\r\n    font-weight: bold;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 2.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 11.38px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 11.38px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 18.208px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction WishList():JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { wishList, totalPage, isGetWishListsError } = useSelector((state: any) => state.myPageSlice.myWishListSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getWishListRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  useEffect(() => {\r\n    if (isGetWishListsError === 'NON_LOGIN') {\r\n      alert('로그인이 필요한 서비스입니다. 로그인 후 더 많은 혜택을 받으세요.');\r\n      history.push('/');\r\n    } else if (isGetWishListsError === 'SERVER_ERROR') {\r\n      alert('서버 통신중 오류 발생');\r\n    }\r\n  }, [isGetWishListsError, history]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>찜목록</h1>\r\n        </Header>\r\n        {\r\n          !totalPage\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>찜한 책이 없습니다.</h2>\r\n                  <p>관심있는 상품을 찜해보아요.</p>\r\n                  <button type=\"button\" onClick={() => history.push('/home')}>판매책 보러가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MyWishsItems>\r\n                  {\r\n                    wishList.map((item: myArticleInterface) => (\r\n                      <MyWishsItem key={item.articleId}>\r\n                        <ItemLink to={`/post/${item.articleId}`}>\r\n                          <ItemImgBox>\r\n                            <ItemImage src={item.thumbnail} />\r\n                          </ItemImgBox>\r\n                          <ItemInfo>\r\n                            <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                            <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                            <h2 className=\"my_title\">{item.title}</h2>\r\n                            <p className=\"my_price\">{item.tprice} 원</p>\r\n                          </ItemInfo>\r\n                        </ItemLink>\r\n                      </MyWishsItem>\r\n                    ))\r\n                  }\r\n                </MyWishsItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/wishs?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/wishs?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/wishs?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            )\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WishList;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myMarket\\AddMyMarket.tsx",["481","482","483","484","485"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\questionApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\SearchBook.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\modals\\AskModal.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\Market.tsx",["486"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\modifyProfile\\ModifyProfile.tsx",["487","488","489"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from 'react-toasts';\r\nimport styled from 'styled-components';\r\nimport { nicknameDuplicationAsync } from '../../../api/joinApi';\r\nimport { postModifyProfileRequest } from '../../signIn/userSlice';\r\n\r\nconst FormLayout = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 17.216px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n    & h1 {\r\n      font-size: 19.368px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  left: 1em;\r\n  width: 2em;\r\n  height: 2em;\r\n`;\r\n\r\nconst ModifyButton = styled.button`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  font-size: 3vw;\r\n  right: 1em;\r\n  padding: 0.2em 0.7em;\r\n  border: 2px solid #3162C7;\r\n  outline: none;\r\n  border-radius: 50px;\r\n  color: #3162C7;\r\n  background: none;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 12.912px;\r\n  }\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 2.5em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImgBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 11em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImg = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst ProfileImgWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: -1.5em;\r\n  width:5.5em;\r\n  height: 5.5em;\r\n`;\r\n\r\nconst ProfileImgBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  width:5.5em;\r\n  height: 5.5em;\r\n  background: #eee;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ChangeImageButton = styled.button`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 2.5em;\r\n  height: 2.5em;\r\n  right: 0;\r\n  bottom: 0;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 50%;\r\n  background: #000;\r\n  & label {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst ChangeImageButtonImg = styled.img`\r\n  width: 1.5em;\r\n  height: auto;\r\n  font-size: 3vw;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 12.912px;\r\n  }\r\n`;\r\n\r\nconst ProfileImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst InputBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90vw;\r\n  margin-bottom: 2em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 387.350px;\r\n  }\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  & label {\r\n      font-size: 3.5vw;\r\n      margin-bottom: 1em;\r\n  }\r\n\r\n  & p {\r\n      font-size: 3vw;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n      margin-bottom: 1em;\r\n  }\r\n\r\n  @media screen and (min-width: 430px) {\r\n    & label {\r\n      font-size: 15.064px;\r\n    }\r\n    & p {\r\n      font-size: 12.912px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  background:  #fffdfd;\r\n  border-radius: 8px;\r\n  box-shadow: 3px 3px 10px #cecece;\r\n  padding: 0.5em 0;\r\n  margin-bottom: 0.5em;\r\n\r\n  & input {\r\n      font-size: 4vw;\r\n      width: 18em;\r\n      padding: 0 1em;\r\n      background: none;\r\n      border: none;\r\n      outline: none;\r\n  }\r\n\r\n  & img {\r\n      width: 1.5em;\r\n      height: 1.5em;\r\n      margin-right: 1em;\r\n  }\r\n\r\n  @media screen and (min-width: 430px) {\r\n    & input {\r\n      font-size: 17.216px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RemoveBox = styled.div`\r\n    width: 90vw;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    & p {\r\n      font-size: 3.5vw;\r\n      color: gray;\r\n    }\r\n\r\n    & button {\r\n        font-size: 3.8vw;\r\n        font-weight: bold;\r\n        background: none;\r\n        border: none;\r\n        outline: none;\r\n        text-decoration: underline;\r\n    }\r\n\r\n    @media screen and (min-width: 430px) {\r\n      width: 387.35px;\r\n      & p {\r\n        font-size: 15.064px;\r\n      }\r\n      & button {\r\n        font-size: 16.35px;\r\n      }\r\n    }\r\n`;\r\n\r\nfunction ModifyProfile():JSX.Element {\r\n  const { user, isModifyProfileError } = useSelector((state: any) => state.userSlice);\r\n  const { nickname, profileImg } = user;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [modifyInputs, setModifInputs] = useState({\r\n    nickname: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    passwd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    newPasswd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    newPasswdCheck: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n  });\r\n\r\n  const onChangeInuts = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    let passwdChekInput: {\r\n      value: string,\r\n      state: string,\r\n      message: string,\r\n      color: string,\r\n    } = {\r\n      value: '',\r\n      state: '',\r\n      message: '',\r\n      color: '',\r\n    };\r\n\r\n    switch (name) {\r\n      case 'nickname':\r\n        if (value === nickname) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              value,\r\n              state: 'none',\r\n              message: '',\r\n            },\r\n          });\r\n        } else if (value.length < 4) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              value,\r\n              state: 'fail',\r\n              message: '닉네임을 4자 이상 입력해주세요.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n          });\r\n        }\r\n        break;\r\n      case 'passwd':\r\n        setModifInputs({\r\n          ...modifyInputs,\r\n          passwd: {\r\n            ...modifyInputs.passwd,\r\n            value,\r\n            state: 'check',\r\n          },\r\n        });\r\n        break;\r\n      case 'newPasswd':\r\n        if (modifyInputs.newPasswdCheck.value !== '' && modifyInputs.newPasswdCheck.value !== value) {\r\n          passwdChekInput = {\r\n            ...modifyInputs.newPasswdCheck,\r\n            state: 'fail',\r\n            message: '비밀번호가 일치하지 않습니다.',\r\n            color: 'red',\r\n          };\r\n        } else {\r\n          passwdChekInput = {\r\n            ...modifyInputs.newPasswdCheck,\r\n            state: 'check',\r\n            message: '',\r\n          };\r\n        }\r\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              ...modifyInputs.newPasswd,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        } else if (value === '') {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              ...modifyInputs.newPasswd,\r\n              value,\r\n              state: 'none',\r\n              message: '',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              value,\r\n              state: 'fail',\r\n              message: '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.',\r\n              color: 'red',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        }\r\n        break;\r\n      case 'newPasswdCheck':\r\n        if (modifyInputs.newPasswd.value === value) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswdCheck: {\r\n              ...modifyInputs.newPasswdCheck,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswdCheck: {\r\n              value,\r\n              state: 'fail',\r\n              message: '비밀번호가 일치하지 않습니다.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmitModifyProfile = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (modifyInputs.nickname.state === 'fail') {\r\n      ToastsStore.error('닉네임을 확인해주세요.');\r\n    } else if (modifyInputs.passwd.value === '') {\r\n      ToastsStore.error('비밀번호는 반드시 입력해야 합니다.');\r\n    } else if (modifyInputs.newPasswd.state === 'fail') {\r\n      ToastsStore.error('새비밀번호를 확인해주세요.');\r\n    } else if (modifyInputs.newPasswdCheck.state === 'fail') {\r\n      ToastsStore.error('비밀번호가 일치하지 않습니다.');\r\n    } else {\r\n      try {\r\n        const result = await nicknameDuplicationAsync(modifyInputs.nickname.value);\r\n        const formData = new FormData();\r\n        if (imageFileState.file !== null) {\r\n          console.log('프로필이미지 저장');\r\n          formData.append('profile_img', imageFileState.file);\r\n        }\r\n        if (modifyInputs.nickname.value !== '') {\r\n          console.log('닉네임 저장');\r\n          formData.append('nickname', modifyInputs.nickname.value);\r\n        }\r\n        if (modifyInputs.passwd.value !== '') {\r\n          console.log('패스워드 저장');\r\n          formData.append('passwd', modifyInputs.passwd.value);\r\n        }\r\n        if (modifyInputs.newPasswd.value !== '') {\r\n          formData.append('newPasswd', modifyInputs.newPasswd.value);\r\n        }\r\n        if (result) {\r\n          dispatch(postModifyProfileRequest({\r\n            modifyProfile: formData,\r\n          }));\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              state: 'fail',\r\n              message: '이미 사용중인 닉네임입니다.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const [imageFileState, setImageFileState] = useState<{file: File | null, previewURL: any}>({ file: null, previewURL: null });\r\n  const profileImageView = useRef<HTMLImageElement>(null);\r\n\r\n  const onChangeProfileImage = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files !== null) {\r\n      const reader = new FileReader();\r\n      const file = e.target.files[0];\r\n      reader.onloadend = () => {\r\n        setImageFileState({\r\n          ...imageFileState,\r\n          file,\r\n          previewURL: reader.result,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (imageFileState.previewURL !== null) {\r\n      if (profileImageView.current !== null) {\r\n        profileImageView.current.src = imageFileState.previewURL;\r\n      }\r\n    }\r\n  }, [imageFileState.previewURL]);\r\n\r\n  return (\r\n    <FormLayout method=\"post\" onSubmit={onSubmitModifyProfile}>\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n      <Header>\r\n        <BackImg src=\"/images/icons/back.png\" onClick={() => history.push('/mypage')} />\r\n        <h1>프로필 편집</h1>\r\n        <ModifyButton type=\"submit\">완료</ModifyButton>\r\n      </Header>\r\n      <ImageBox>\r\n        <BackgroundImgBox>\r\n          <BackgroundImg src=\"/images/icons/profileBack.png\" />\r\n        </BackgroundImgBox>\r\n        <ProfileImgWrapper>\r\n          <ProfileImgBox>\r\n            <ProfileImg src={profileImg} ref={profileImageView} />\r\n            <ChangeImageButton type=\"button\">\r\n              <label htmlFor=\"profileImage\" />\r\n              <input id=\"profileImage\" accept=\"image/jpg,image/png,image/jpeg\" name=\"file\" style={{ visibility: 'hidden' }} type=\"file\" onChange={onChangeProfileImage} />\r\n              <ChangeImageButtonImg src=\"/images/icons/camera_white.png\" />\r\n            </ChangeImageButton>\r\n          </ProfileImgBox>\r\n        </ProfileImgWrapper>\r\n      </ImageBox>\r\n      <InputBox>\r\n        <InputGroup>\r\n          <label htmlFor=\"nickname\">닉네임</label>\r\n          <Input>\r\n            <input type=\"text\" onChange={onChangeInuts} id=\"nickname\" name=\"nickname\" value={modifyInputs.nickname.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.nickname.color }}>{modifyInputs.nickname.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"passwd\">현재 비밀번호</label>\r\n          <Input>\r\n            <input id=\"passwd\" name=\"passwd\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.passwd.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.passwd.color }}>{modifyInputs.passwd.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"newPasswd\">새 비밀번호</label>\r\n          <Input>\r\n            <input id=\"newPasswd\" name=\"newPasswd\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.newPasswd.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.newPasswd.color }}>{modifyInputs.newPasswd.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"newPasswdCheck\">새 비밀번호 확인</label>\r\n          <Input>\r\n            <input id=\"newPasswdCheck\" name=\"newPasswdCheck\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.newPasswdCheck.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.newPasswdCheck.color }}>{modifyInputs.newPasswdCheck.message}</p>\r\n        </InputGroup>\r\n      </InputBox>\r\n      <RemoveBox>\r\n        <p>회원정보를 삭제하시겠어요?</p>\r\n        <button type=\"button\">회원 탈퇴</button>\r\n      </RemoveBox>\r\n    </FormLayout>\r\n  );\r\n}\r\n\r\nexport default ModifyProfile;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts",["490"],"interface categoryInterface {\n  cid: number, oneDepth: string, twoDepth: string, threeDepth: string, fourDepth: string, fiveDepth: string,\n}\nconst CategoryFormatUtil = (category: categoryInterface) => {\n  const cate = [category.oneDepth, category.twoDepth, category.threeDepth, category.fourDepth, category.fiveDepth];\n  const newCate = [];\n  for (let i = 0; i < cate.length; i++) {\n    if (cate[i] === '') {\n      return newCate.join('>');\n    }\n    newCate.push(cate[i]);\n  }\n  console.log(newCate);\n  return newCate.join('>');\n};\n\nexport default CategoryFormatUtil;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\LoginForm.tsx",["491"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from 'react-toasts';\nimport { postLoginRequest, postLoginRequestError, postLoginRequestSuccess } from './userSlice';\nimport { LOGIN_ERROR, postLoginAsync, SERVER_ERROR } from '../../api/userApi';\n\ninterface inputFormInterface {\n  email: string,\n  passwd: string\n}\n\nconst Form = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.8em;\n`;\n\nconst Input = styled.input`\n  width: 18em;\n  font-size: 4.5vw;\n  padding: 0.8em 1.3em;\n  outline: none;\n  border: 2px solid #3960a688;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px #3960a655;\n  &:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n    padding: 16px 26px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst Button = styled.button`\n  width: 18em;\n  text-align: center;\n  padding: 1em 0;\n  background: #3960a6;\n  font-weight: bold;\n  color: #FFF;\n  font-size: 4.5vw;\n  border: none;\n  border-radius: 200px;\n  outline: none;\n  margin-bottom: 1.2em;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n    padding: 20px 0;\n    margin-bottom: 24px;\n  }\n`;\n\nfunction LoginForm(): JSX.Element {\n  const [inputs, setInputs] = useState<inputFormInterface>({\n    email: '',\n    passwd: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const history = useHistory();\n\n  const onLogin = async (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      const result = await postLoginAsync({ email: inputs.email, passwd: inputs.passwd });\n      console.log(result, 'asdasdsad');\n      dispatch(postLoginRequestSuccess(result));\n      history.push('/home');\n    } catch (error) {\n      dispatch(postLoginRequestError(error.message));\n      if (error.message === LOGIN_ERROR) {\n        ToastsStore.error('로그인 정보를 확인해주세요.');\n      } else if (error.message === SERVER_ERROR) {\n        ToastsStore.error('서버 통신중 에러 발생');\n      }\n    }\n  };\n\n  return (\n    <Form method=\"GET\" onSubmit={onLogin}>\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n      <InputBox>\n        <Input type=\"email\" name=\"email\" placeholder=\"아이디\" value={inputs.email} onChange={handleChange} required />\n        <Input type=\"password\" name=\"passwd\" placeholder=\"비밀번호\" value={inputs.passwd} onChange={handleChange} required />\n      </InputBox>\n      <Button type=\"submit\">로그인</Button>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n",["492","493","494","495","496","497"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\ImagePreView.tsx",["498","499"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx",["500","501","502"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\MyPurchaseArticle.tsx",["503"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getMyPurchaseArticleRequest } from './myPurchaseArticleSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MyPurchaseItems = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MyPurchaseItem = styled.div`\r\n  \r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImgBox = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 9em;\r\n  height: 10em;\r\n  margin-right: 1.5em;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: auto;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 2.5vw;\r\n    font-weight: bold;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 2.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 11.38px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 11.38px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 18.208px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction MyPurchaseArticle():JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { myPurchaseArticle, totalPage } = useSelector((state: any) => state.myPageSlice.myPurchaseArticleSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getMyPurchaseArticleRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>구매목록</h1>\r\n        </Header>\r\n        {\r\n          !totalPage\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>등록한 구매글이 없습니다.</h2>\r\n                  <p>다른 유저들의 책을 구매해보아요.</p>\r\n                  <button type=\"button\" onClick={() => history.push('/addPost/purchase')}>책 구매하러 가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MyPurchaseItems>\r\n                  {\r\n                    myPurchaseArticle.map((item: myArticleInterface) => (\r\n                      <MyPurchaseItem key={item.articleId}>\r\n                        <ItemLink to={`/post/${item.articleId}`}>\r\n                          <ItemImgBox>\r\n                            <ItemImage src={item.thumbnail} />\r\n                          </ItemImgBox>\r\n                          <ItemInfo>\r\n                            <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                            <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                            <h2 className=\"my_title\">{item.title}</h2>\r\n                            <p className=\"my_price\">{item.tprice} 원</p>\r\n                          </ItemInfo>\r\n                        </ItemLink>\r\n                      </MyPurchaseItem>\r\n                    ))\r\n                  }\r\n                </MyPurchaseItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/Purchase?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/Purchase?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/Purchase?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            )\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPurchaseArticle;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSlice.ts",["504"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst wishListSlice = createSlice({\r\n  name: 'myArticle',\r\n  initialState: {\r\n    wishList: [],\r\n    totalPage: 0,\r\n    isGetWishListsLoading: false, // 내 판매글 가져오기\r\n    isGetWishListsSuccess: false,\r\n    isGetWishListsError: null,\r\n  },\r\n  reducers: {\r\n    getWishListRequest: (state, action) => {\r\n      state.isGetWishListsLoading = true;\r\n    },\r\n    getWishListRequestSuccess: (state, action) => {\r\n      state.isGetWishListsLoading = false;\r\n      state.isGetWishListsSuccess = true;\r\n      state.wishList = action.payload.myArticleList;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getWishListRequestError: (state, action) => {\r\n      state.isGetWishListsLoading = false;\r\n      state.isGetWishListsError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getWishListRequest,\r\n  getWishListRequestSuccess,\r\n  getWishListRequestError,\r\n} = wishListSlice.actions;\r\n\r\nexport default wishListSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSlice.ts",["505"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst myPurchaseArticleSlice = createSlice({\r\n  name: 'myArticle',\r\n  initialState: {\r\n    myPurchaseArticle: [],\r\n    totalPage: 0,\r\n    isGetMyPurchaseArticlesLoading: false, // 내 판매글 가져오기\r\n    isGetMyPurchaseArticlesSuccess: false,\r\n    isGetMyPurchaseArticlesError: null,\r\n  },\r\n  reducers: {\r\n    getMyPurchaseArticleRequest: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = true;\r\n    },\r\n    getMyPurchaseArticleRequestSuccess: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = false;\r\n      state.isGetMyPurchaseArticlesSuccess = true;\r\n      state.myPurchaseArticle = action.payload.myAricleList;\r\n      state.totalPage = action.payload.pageTotal;\r\n    },\r\n    getMyPurchaseArticleRequestError: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = false;\r\n      state.isGetMyPurchaseArticlesError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getMyPurchaseArticleRequest,\r\n  getMyPurchaseArticleRequestSuccess,\r\n  getMyPurchaseArticleRequestError,\r\n} = myPurchaseArticleSlice.actions;\r\n\r\nexport default myPurchaseArticleSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\SocialLogin.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts",["506","507","508"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\Editor.tsx",["509","510"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport ImagePreView from './ImagePreView';\n\ninterface ImageURLInterface {\n  id: string;\n  url: string;\n  image: Blob;\n}\ninterface EditorForm {\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void,\n  onChangePrice: (e: React.ChangeEvent<HTMLInputElement>) => void,\n  onChangeContent: (e: React.ChangeEvent<HTMLTextAreaElement>) => void,\n  onChangeImage: (e: any) => void,\n  onDeleteImage: (imageId: string) => void,\n  price: string,\n  content: string,\n  images: ImageURLInterface[],\n  isLoading: boolean,\n}\nconst FormWrapper = styled.form`\n`;\nconst BookDetailInputWrapper = styled.div`\n  & input {\n    margin: 20px 0;\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n  }\n  & textArea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n    height: 80px;\n    resize: none;\n    overflow: scroll;\n  }\n`;\nconst AddPostButton = styled.button`\n  width: 100%;\n  border: 0;\n  background-color: #3960a6;\n  padding: 10px;\n  margin: 20px 0px;\n  border-radius: 5px;\n  color: white;\n  font-weight: 700;\n`;\n\nfunction Editor({ onSubmit, onChangePrice, onChangeContent, onChangeImage, onDeleteImage, price, content, images, isLoading }: EditorForm): JSX.Element {\n  return (\n    <FormWrapper encType=\"multipart/form-data\" onSubmit={onSubmit}>\n      <ImagePreView onChangeImage={onChangeImage} images={images} onDelete={onDeleteImage} />\n      <BookDetailInputWrapper>\n        <input type=\"text\" pattern=\"[0-9]+\" placeholder=\"₩ 가격입력\" onChange={onChangePrice} value={price} />\n        <textarea onChange={onChangeContent} value={content} placeholder=\"상품설명을 입력하세요\" />\n      </BookDetailInputWrapper>\n      <AddPostButton type=\"submit\" disabled={isLoading}>\n        {isLoading ? <span>등록중입니다</span> : <span>등록하기</span>}\n      </AddPostButton>\n    </FormWrapper>\n  );\n}\n\nexport default Editor;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\Login.tsx",["511","512","513","514"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\MySaleArticle.tsx",["515","516"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getMySaleArticleRequest } from './mySaleArticleSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MySaleItems = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MySaleItem = styled.div`\r\n  \r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImgBox = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 9em;\r\n  height: 10em;\r\n  margin-right: 1.5em;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: auto;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 2.5vw;\r\n    font-weight: bold;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 2.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 11.38px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 11.38px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 18.208px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction MySaleArticle():JSX.Element | null {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { mySaleArticle, totalPage, isGetMyPurchaseArticlesLoading } = useSelector((state: any) => state.myPageSlice.mySaleArticleSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getMySaleArticleRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>판매목록</h1>\r\n        </Header>\r\n        {\r\n          (!totalPage\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>등록한 판매글이 없습니다.</h2>\r\n                  <p>다 보신 책들을 나누어 보아요.</p>\r\n                  <button type=\"button\" onClick={() => history.push('/addPost/purchase')}>책 판매하러 가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MySaleItems>\r\n                  {\r\n                    mySaleArticle.map((item: myArticleInterface) => (\r\n                      <MySaleItem key={item.articleId}>\r\n                        <ItemLink to={`/post/${item.articleId}`}>\r\n                          <ItemImgBox>\r\n                            <ItemImage src={item.thumbnail} />\r\n                          </ItemImgBox>\r\n                          <ItemInfo>\r\n                            <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                            <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                            <h2 className=\"my_title\">{item.title}</h2>\r\n                            <p className=\"my_price\">{item.tprice} 원</p>\r\n                          </ItemInfo>\r\n                        </ItemLink>\r\n                      </MySaleItem>\r\n                    ))\r\n                  }\r\n                </MySaleItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/sales?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/sales?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/sales?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            ))\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MySaleArticle;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\modals\\PostDeleteModal.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\Header.tsx",["517"],"import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport CategoryMenu from './CategoryMenu';\nimport { loadBookPostRequest } from '../postSlice';\n\ninterface PostTabItemInterface {\n  tab: number,\n  active: number,\n}\n\nconst HeaderWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n  max-width: 600px;\n  margin: 0 auto;\n  z-index: 50;\n`;\nconst TopWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n  padding: 10px 30px;\n`;\nconst BuggerMenu = styled.button`\n  align-self: center;\n  background-color:white;\n  border: none;\n  & img{\n    width: 30px;\n  }\n`;\nconst LogoWrapper = styled.div`\n  display: flex;  \n  align-items: center;\n  justify-content: center;\n  color: #3960a6;\n  flex-basis: 2;\n  font-size: 25px;\n  & img{\n    height: 40px;\n  }\n`;\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  background-color: #e9e9e9;\n  width: 85%;\n  margin: auto;\n  & input {\n    border:0;\n    width:80%;\n    background-color: inherit;\n  }\n  & img {\n    width: 20px;\n  }\n`;\nconst PostTab = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  margin-top: 5px;\n  border: 1px solid #e9e9e9;\n`;\nconst PostTabItem = styled.li<PostTabItemInterface>`\n  padding: 10px 0;\n  width: 100%;\n  text-align: center;\n  border-bottom: ${(props) => props.tab === props.active && '3px solid #3960a6'};\n`;\n\nfunction Header(): JSX.Element {\n  const dispatch = useDispatch();\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [openMenu, setOpenMenu] = useState(false);\n  const [tabIndex, setTabIndex] = useState(0);\n  const { filtering } = useSelector((state: any) => state.postSlice);\n  const onOpenMenuHandler = useCallback((e : React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setOpenMenu(true);\n  }, []);\n  const onCloseMenuHandler = useCallback(() => {\n    setTabIndex(0);\n    setOpenMenu(false);\n  }, []);\n  const onClickSalePostTab = useCallback(() => {\n    setTabIndex(0);\n    dispatch(loadBookPostRequest({\n      filtering: {\n        division: 'sales',\n        category: filtering.category,\n        title: filtering.title,\n      },\n    }));\n  }, [dispatch, filtering.category, filtering.title]);\n\n  const onClickPurchasPostTab = useCallback(() => {\n    setTabIndex(1);\n    dispatch(loadBookPostRequest({\n      filtering: {\n        division: 'purchase',\n        category: filtering.category,\n        title: filtering.title,\n      },\n    }));\n  }, [dispatch, filtering.category, filtering.title]);\n\n  const onChangeSearchInput = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchKeyword(e.target.value);\n  }, []);\n\n  const onClickSearchButton = useCallback(() => {\n    dispatch(loadBookPostRequest({\n      filtering: {\n        division: filtering.division,\n        category: '',\n        title: searchKeyword,\n      },\n    }));\n  }, [dispatch, filtering.division, searchKeyword]);\n\n  return (\n    <HeaderWrapper>\n      {openMenu && <CategoryMenu onMenuClose={onCloseMenuHandler} />}\n      <TopWrapper>\n        <BuggerMenu onClick={onOpenMenuHandler}>\n          <img src=\"/images/icons/category.png\" alt=\"menu_icon\" />\n        </BuggerMenu>\n        <LogoWrapper>\n          <img src=\"/images/icons/logo.jpeg\" alt=\"logo\" />\n        </LogoWrapper>\n      </TopWrapper>\n      <SearchInput>\n        <input placeholder=\"책 이름을 검색해보세요!\" onChange={onChangeSearchInput} value={searchKeyword} />\n        <button type=\"button\" onClick={onClickSearchButton}>\n          <img src=\"/images/icons/search.png\" alt=\"search_icon\" />\n        </button>\n      </SearchInput>\n      <PostTab>\n        <PostTabItem onClick={() => onClickSalePostTab()} tab={0} active={tabIndex}>판매글</PostTabItem>\n        <PostTabItem onClick={() => onClickPurchasPostTab()} tab={1} active={tabIndex}>구매글</PostTabItem>\n      </PostTab>\n    </HeaderWrapper>\n  );\n}\n\nexport default Header;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\marketSlice.ts",["518","519","520","521","522","523","524"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\AddQuestion.tsx",["525"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\r\nimport styled from 'styled-components';\r\nimport { addQuestionRequestAsync } from '../../../api/questionApi';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  margin-bottom: 1.5em;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  padding: 0 1em;\r\n  & input {\r\n    font-size: 4.5vw;\r\n    margin-bottom: 1.5em;\r\n    padding: 0.5em;\r\n    border: 1px solid #d4d4d4;\r\n    border-radius: 10px;\r\n  }\r\n  & textarea {\r\n    font-size: 4.5vw;\r\n    padding: 1em;\r\n    height: 15em;\r\n    resize: none;\r\n    border: 1px solid #d4d4d4;\r\n    border-radius: 10px;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & input {\r\n      font-size: 20.484px;\r\n    }\r\n    & textarea {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWrap = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n  padding: 2em 1em;\r\n  & button {\r\n      color: #fff;\r\n      border: 1px solid #eee;\r\n      border-radius: 10px;\r\n      background: none;\r\n      font-size: 3.5vw;\r\n      padding: 0.5em 1em;\r\n      margin-left: 1em;\r\n  }\r\n  & button.reset {\r\n    background: #bbbbbb;\r\n  }\r\n  & button.save {\r\n    background: #3960a6;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & button {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContentHeader = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5em;\r\n`;\r\nconst HeaderTextArea = styled.div`\r\n  word-break: keep-all;\r\n  & h2 {\r\n    font-weight: bold;\r\n    line-height: 1.3em;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p {\r\n    color: #5f5f5f;\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\nconst HeaderImgArea = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & img {\r\n    width: 5em;\r\n    height: 5em;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nfunction AddQuestion():JSX.Element {\r\n  const history = useHistory();\r\n  const [questionInputs, setQuestionInputs] = useState({\r\n    title: '',\r\n    content: '',\r\n  });\r\n\r\n  const onChangeInputs = (e: React.ChangeEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setQuestionInputs({\r\n      ...questionInputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onClickReset = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setQuestionInputs({\r\n      title: '',\r\n      content: '',\r\n    });\r\n  };\r\n\r\n  const onSubmitSaveInputs = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (questionInputs.title === '') {\r\n      ToastsStore.error('제목을 입력해주세요.');\r\n    } else if (questionInputs.content === '') {\r\n      ToastsStore.error('내용을 입력해주세요.');\r\n    } else {\r\n      const result = await addQuestionRequestAsync(questionInputs);\r\n      console.log(result);\r\n      if (result.status === 200) {\r\n        ToastsStore.success('문의사항 등록이 완료되었습니다.');\r\n        history.push('/question');\r\n      } else {\r\n        ToastsStore.error('문의사항 등록중 오류가 발생하였습니다.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout onSubmit={onSubmitSaveInputs}>\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n      <Header>\r\n        <BackLink to=\"/question\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>문의사항 작성</h1>\r\n      </Header>\r\n      <Content>\r\n        <ContentHeader>\r\n          <HeaderTextArea>\r\n            <h2>\r\n              코스마켓 이용 중에 생긴<br />\r\n              불편한 점이나 문의사항을<br />\r\n              보내주세요.\r\n            </h2>\r\n            <p>\r\n              확인 후 답변드리겠습니다.\r\n            </p>\r\n          </HeaderTextArea>\r\n          <HeaderImgArea>\r\n            <img src=\"/images/icons/report_img.png\" alt=\"\" />\r\n          </HeaderImgArea>\r\n        </ContentHeader>\r\n        <input onChange={onChangeInputs} id=\"title\" name=\"title\" value={questionInputs.title} type=\"text\" placeholder=\"제목을 입력해주세요.\" />\r\n        <textarea onChange={onChangeInputs} id=\"content\" name=\"content\" value={questionInputs.content} placeholder=\"내용을 입력해주세요.\" />\r\n      </Content>\r\n      <ButtonWrap>\r\n        <button onClick={onClickReset} className=\"reset\" type=\"button\">reset</button>\r\n        <button className=\"save\" type=\"submit\">save</button>\r\n      </ButtonWrap>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddQuestion;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSlice.ts",["526"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { noticeInterface } from '../../../interfaces/NoticeInterface';\r\n\r\nconst initialNoticeList: noticeInterface[] = [];\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    noticeList: initialNoticeList,\r\n    totalPage: 0,\r\n    isGetNoticeLoading: false, // 로그인\r\n    isGetNoticeSucceed: false,\r\n    isGetNoticeError: null,\r\n  },\r\n  reducers: {\r\n    getNoticeRequest: (state, action) => {\r\n      state.isGetNoticeLoading = true;\r\n    },\r\n    getNoticeRequestSuccess: (state, action) => {\r\n      state.isGetNoticeLoading = false;\r\n      state.isGetNoticeSucceed = true;\r\n      state.noticeList = action.payload.data;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getNoticeRequestError: (state, action) => {\r\n      state.isGetNoticeLoading = false;\r\n      state.isGetNoticeError = action.payload;\r\n    },\r\n    toggleActiveNotice: (state, action) => {\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        noticeList: state.noticeList.map((item) => (item.noticeId === action.payload ? { ...item, active: !item.active } : item)),\r\n      };\r\n      console.log();\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getNoticeRequest,\r\n  getNoticeRequestSuccess,\r\n  getNoticeRequestError,\r\n  toggleActiveNotice,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NodataPage.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\modifyPost\\ModifyPost.tsx",["527","528","529","530"],"import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport { modifyBookPostRequest } from '../postSlice';\nimport Editor from '../../../components/write/Editor';\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\nimport ImageFileReaderPromise from '../../../utils/imageFileReader';\n\ninterface ParamTypes {\n  id: string\n}\ninterface ImageURLInterface {\n  id: string;\n  url: string;\n  image: Blob;\n}\nconst AddPostWrapper = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  max-width: 600px;\n`;\nconst AddPostHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 0px;\n  & button {\n    background-color: white;\n    border: 0;\n  }\n`;\nconst Logo = styled.img`\n  width: 40px;\n`;\nconst BookWrapper = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    width: 30%;\n    max-width: 200px;\n  }\n  border: 1px solid #e8e8e8;\n  margin: 10px 0px;\n`;\nconst DeleteImg = styled.img`\n  width: 20px;\n  align-self: flex-start;\n`;\nconst BookDetail = styled.div`\n  margin-left: 20px;\n`;\nconst Category = styled.div`\n  font-size: 12px;\n  margin-bottom: 20px;\n`;\nconst BookTitle = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n  font-weight: 800;\n`;\nconst BookPrice = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n`;\nfunction ModifyPost():JSX.Element {\n  const { detailBookPost } = useSelector((state: any) => state.detailViewSlice);\n\n  const [images, setImages] = useState<ImageURLInterface[]>([]);\n  const [price, setPrice] = useState<string>('');\n  const [content, setContent] = useState<string>('');\n  // const { isModifyBookPostLoading } = useSelector((state: any) => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const ImageFileReader = async (file: Blob) => {\n    try {\n      const image: string = await ImageFileReaderPromise(file);\n      if (images.length < 2) {\n        setImages(images.concat({ id: uuidv4(), url: image, image: file }));\n      } else {\n        ToastsStore.error('최대 두장의 사진만 업로드 가능합니다.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleXButtonClick = () => {\n    history.push('/home');\n  };\n  const handleDeleteImage = useCallback((imageId: string) => {\n    const filteringImageFile = images.filter((image) => image.id !== imageId);\n    setImages([...filteringImageFile]);\n  }, [images]);\n  const handleChangePrice = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPrice(e.target.value);\n  }, []);\n  const handleChangeContent = useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setContent(e.target.value);\n  }, []);\n  const handleChangeImages = (e: any) => {\n    ImageFileReader(e.target.files[0]);\n  };\n  const handleSubmitPost = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData();\n    if (images.length < 2) {\n      ToastsStore.error('최소 두장의 사진이 업로드 되어야합니다');\n      return;\n    }\n    for (let i = 0; i < images.length; i++) {\n      formData.append('file', images[i].image); // 사용자가 등록한 이미지\n    }\n    formData.append('category', CategoryFormatUtil(detailBookPost.category)); // category\n    formData.append('cid', String(detailBookPost.category.cid)); // 알라딘에서 받은 정보\n    formData.append('title', detailBookPost.title); // 알라딘에서 받은 정보\n    formData.append('image', detailBookPost.thumbnail); // 알라딘에서 받은 정보\n    formData.append('rprice', detailBookPost.rprice); // 알라딘에서 받은 정보\n    formData.append('content', content); // 사용자가 입력한 정보\n    formData.append('tprice', price); // 사용자가 입력한 정보\n    formData.append('division', detailBookPost.division); // 사용자가 입력한 정보\n    dispatch(modifyBookPostRequest({ id: detailBookPost.articleId, data: formData }));\n  }, [content, detailBookPost.articleId, detailBookPost.category, detailBookPost.division, detailBookPost.rprice, detailBookPost.thumbnail, detailBookPost.title, dispatch, images, price]);\n  useEffect(() => {\n    setImages(detailBookPost.image);\n    setPrice(detailBookPost.tprice);\n    setContent(detailBookPost.content);\n  }, [detailBookPost.content, detailBookPost.image, detailBookPost.tprice]);\n  return (\n    <AddPostWrapper>\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n      <AddPostHeader>\n        <Logo src=\"/images/icons/logo.jpeg\" alt=\"logo\" />\n        <button type=\"button\" onClick={handleXButtonClick}>\n          <DeleteImg src=\"/images/icons/x.png\" alt=\"x_button\" />\n        </button>\n      </AddPostHeader>\n      <BookWrapper>\n        <img src={detailBookPost.thumbnail} alt=\"thumbnail\" />\n        <BookDetail>\n          <Category>{CategoryFormatUtil(detailBookPost.category)}</Category>\n          <BookTitle>{detailBookPost.title}</BookTitle>\n          <BookPrice>{detailBookPost.rprice} 원</BookPrice>\n        </BookDetail>\n      </BookWrapper>\n      <Editor\n        onSubmit={handleSubmitPost}\n        onChangePrice={handleChangePrice}\n        onChangeContent={handleChangeContent}\n        onChangeImage={handleChangeImages}\n        onDeleteImage={handleDeleteImage}\n        isLoading={false} // 수정필요함\n        content={content}\n        price={price}\n        images={images}\n      />\n    </AddPostWrapper>\n  );\n}\nexport default ModifyPost;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\marketSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\signIn\\LoginForm.tsx",["531","532"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\signIn\\AdminSignIn.tsx",["533","534"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\home\\AdminHome.tsx",["535","536","537","538"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSlice.ts",["539","540","541","542","543","544","545"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSaga.ts",["546"],"import { PayloadAction } from '@reduxjs/toolkit';\nimport { all, takeLatest, put, fork, call } from 'redux-saga/effects';\nimport { loadDetailBookPostRequest, loadDetailBookPostSuccess, loadDetailBookPostError } from './detailViewSlice';\n\nimport { getBookPostDetailViewAPI, modifyBookPostAPI } from '../../../api/postBookApi';\n\nfunction* loadDetailBookPost(action: PayloadAction<number>) {\n  try {\n    const result = yield call(getBookPostDetailViewAPI, action.payload);\n    yield put(loadDetailBookPostSuccess(result.data));\n  } catch (error) {\n    yield put(loadDetailBookPostError({ error }));\n  }\n}\nfunction* watchloadDetailBookPost() {\n  yield takeLatest(loadDetailBookPostRequest, loadDetailBookPost);\n}\n\nexport default function* postSaga():Generator {\n  yield all([\n    fork(watchloadDetailBookPost),\n  ]);\n}\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\notice\\AdminNotice.tsx",["547"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\notice\\NoticeDetail.tsx",["548","549","550","551"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Layout = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #ccc;\r\n  padding: 1em 0;\r\n  & h1 {\r\n    font-size: 6vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n    font-size: 27.312px;\r\n  }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: auto;\r\n  & ul {\r\n    width: 100%;\r\n  }\r\n  & li {\r\n    width: 100%;\r\n    padding: 1em;\r\n    border-top: 1px solid #ccc;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  & li h2 {\r\n    font-size: 3.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & li p {\r\n    font-size: 3vw;\r\n  }\r\n  & li:not(:last-child) {\r\n    margin-bottom: 1em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & li h2 {\r\n      font-size: 15.932px;\r\n    }\r\n    & li p {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TitleArea = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5em 1em;\r\n  border-bottom: 1px solid #ccc;\r\n  & h2, & input {\r\n    font-size: 3.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p {\r\n    font-size: 3vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h2, & input {\r\n      font-size: 15.932px;\r\n    }\r\n    & p {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.div`\r\n  padding: 1em;\r\n  height: 100%;\r\n  & pre, & textarea {\r\n      width: 100%;\r\n      height: 100%;\r\n      padding: 1em;\r\n      border: 1px solid #ccc;\r\n      overflow: auto;\r\n      word-break: keep-all;\r\n      white-space: pre-wrap;\r\n      font-size: 3.5vw;\r\n  }\r\n  & textarea {\r\n    resize: none;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & pre, & textarea {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonBox = styled.div`\r\n  width: 100%;\r\n  padding: 1em;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  & button {\r\n    cursor: pointer;\r\n    padding: 0.5em 1em;\r\n    font-size: 3.5vw;\r\n    color: #fff;\r\n    border: 1px solid #a3c3ff;\r\n    border-radius: 5px;\r\n    &.delete {\r\n      background: #395fa655;\r\n    }\r\n    &.modify {\r\n      background: #fff;\r\n      color: #3960a6;\r\n      margin-right: 1em;\r\n    }\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & button {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DeleteModal = styled.div`\r\n  position: absolute;\r\n  width: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1.5em 0;\r\n  background: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  & p {\r\n    font-size: 4.5vw;\r\n    padding: 0.5em 0;\r\n  }\r\n  & button {\r\n    cursor: pointer;\r\n    padding: 0.5em 1em;\r\n    font-size: 3.5vw;\r\n    color: #fff;\r\n    border: 1px solid #a3c3ff;\r\n    border-radius: 5px;\r\n    &.delete {\r\n      background: #395fa655;\r\n    }\r\n    &.modify {\r\n      background: #fff;\r\n      color: #3960a6;\r\n      margin-right: 1em;\r\n    }\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p {\r\n      font-size: 20.484px;\r\n    }\r\n    & button {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalButtonBox = styled.div``;\r\n\r\nfunction AdminNoticeDetail():JSX.Element {\r\n  const history = useHistory();\r\n  const { id: idParam } = useParams<{ id: string }>();\r\n  const [isModify, setIsModify] = useState(false);\r\n  const [isModalVisable, setIsModalVisable] = useState(false);\r\n  const { title, content, noticeId } = useSelector((state) => state.adminSlice.noticeDetail);\r\n  const [inputs, setInputs] = useState({\r\n    title,\r\n    content,\r\n  });\r\n\r\n  const onchangeInputs = (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onClickModifyMode = () => {\r\n    if (isModify) {\r\n      setInputs({\r\n        title,\r\n        content,\r\n      });\r\n    }\r\n\r\n    setIsModify(!isModify);\r\n  };\r\n\r\n  const onClickModify = () => {\r\n    console.log(`${idParam}번 수정하기`);\r\n  };\r\n\r\n  const onClickDelete = () => {\r\n    console.log(`${idParam}번 삭제하기`);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <BackLink to=\"/admin/notice\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>공지사항 관리</h1>\r\n      </Header>\r\n      <Content>\r\n        {\r\n          isModify\r\n            ? (\r\n              <>\r\n                <TitleArea>\r\n                  <input onChange={onchangeInputs} type=\"text\" name=\"title\" value={inputs.title} />\r\n                  <p>2021.03.02</p>\r\n                </TitleArea>\r\n                <TextArea>\r\n                  <textarea onChange={onchangeInputs} name=\"content\" value={inputs.content} />\r\n                </TextArea>\r\n                <ButtonBox>\r\n                  <button onClick={onClickModifyMode} className=\"modify\" type=\"button\">취소</button>\r\n                  <button onClick={onClickModify} className=\"delete\" type=\"button\">수정하기</button>\r\n                </ButtonBox>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <TitleArea>\r\n                  <h2>{title}.</h2>\r\n                  <p>2021.03.02</p>\r\n                </TitleArea>\r\n                <TextArea>\r\n                  <pre>\r\n                    {content}\r\n                  </pre>\r\n                </TextArea>\r\n                <ButtonBox>\r\n                  <button onClick={onClickModifyMode} className=\"modify\" type=\"button\">수정</button>\r\n                  <button onClick={() => setIsModalVisable(true)} className=\"delete\" type=\"button\">삭제</button>\r\n                </ButtonBox>\r\n              </>\r\n            )\r\n        }\r\n      </Content>\r\n      {\r\n        isModalVisable\r\n          ? (\r\n            <DeleteModal>\r\n              <p>정말 삭제하시겠습니까?</p>\r\n              <ModalButtonBox>\r\n                <button onClick={() => setIsModalVisable(false)} className=\"modify\" type=\"button\">취소</button>\r\n                <button onClick={onClickDelete} className=\"delete\" type=\"button\">삭제</button>\r\n              </ModalButtonBox>\r\n            </DeleteModal>\r\n          )\r\n          : null\r\n      }\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AdminNoticeDetail;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\adminSlice.ts",["552","553","554"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\adminSaga.ts",["555","556"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\Notice.tsx",["557"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { noticeInterface } from '../../../interfaces/NoticeInterface';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getNoticeRequest, toggleActiveNotice } from './noticeSlice';\r\n\r\nconst Layout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  margin-bottom: 1.5em;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n    font-size: 20.484px;\r\n  }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst NoticeList = styled.ul`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst NoticeItem = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 1px solid #e0e0e0;\r\n`;\r\n\r\nconst NoticeTitleBox = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5em 1.5em;\r\n`;\r\n\r\nconst NoticeText = styled.div`\r\n  & h2 {\r\n    font-size: 3.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p {\r\n    font-size: 3vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 15.932px;\r\n    }\r\n    & p {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DetailButton = styled.button`\r\n  cursor: pointer;\r\n  font-size: 3vw;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  & img {\r\n      width: 1em;\r\n      height: 1em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 13.656px;\r\n  }\r\n`;\r\n\r\nconst NoticeDetail = styled.div`\r\n  padding: 0 1.6em;\r\n  overflow: hidden;\r\n  transition: 0.5s;\r\n  font-size: 0.8em;\r\n`;\r\n\r\nconst PaginationBox = styled.div`\r\n  display: flex;\r\n  padding: 1.5em 0;\r\n  & img {\r\n    cursor: pointer;\r\n    width: 1em;\r\n    height: 1em;\r\n  }\r\n`;\r\n\r\nconst PrevPage = styled.img``;\r\n\r\nconst PageNumbers = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst PageNumber = styled.div`\r\n`;\r\n\r\nconst PageLink = styled(Link)`\r\n  padding: 0 0.5em;\r\n`;\r\n\r\nconst NextPage = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Notice():JSX.Element {\r\n  const [page, setPage] = useState<number>(0);\r\n  const dispatch = useDispatch();\r\n  const { noticeList, totalPage } = useSelector((state: any) => state.myPageSlice.noticeSlice);\r\n\r\n  useEffect(() => {\r\n    dispatch(getNoticeRequest(page));\r\n  }, [page, dispatch]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <BackLink to=\"/mypage\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>공지사항</h1>\r\n      </Header>\r\n      {\r\n        !totalPage\r\n          ? (\r\n            <>\r\n              <EmptyArticle>\r\n                <h2>등록된 공지사항이 없습니다.</h2>\r\n              </EmptyArticle>\r\n            </>\r\n          )\r\n          : (\r\n            <NoticeList>\r\n              {\r\n                noticeList.map((notice: noticeInterface) => (\r\n                  <NoticeItem key={notice.noticeId}>\r\n                    <NoticeTitleBox>\r\n                      <NoticeText>\r\n                        <h2>{notice.title}</h2>\r\n                        <p>{notice.writeDate}</p>\r\n                      </NoticeText>\r\n                      <DetailButton onClick={() => dispatch(toggleActiveNotice(notice.noticeId))}>\r\n                        <img src=\"/images/icons/back.png\" alt=\"\" style={{ transform: notice.active ? 'rotate(90deg)' : 'rotate(-90deg)' }} />\r\n                      </DetailButton>\r\n                    </NoticeTitleBox>\r\n                    <NoticeDetail style={{ height: notice.active ? 'auto' : '0', padding: notice.active ? '1em 1.5em' : '0 1.5em' }}>\r\n                      <p>\r\n                        {notice.content}\r\n                      </p>\r\n                    </NoticeDetail>\r\n                  </NoticeItem>\r\n                ))\r\n              }\r\n            </NoticeList>\r\n          )\r\n      }\r\n      <PaginationBox>\r\n        <PrevPage src=\"/images/icons/back.png\" />\r\n        <PageNumbers>\r\n          {\r\n            !totalPage\r\n              ? (\r\n                <PageNumber>\r\n                  <PageLink to=\"/notice\">1</PageLink>\r\n                </PageNumber>\r\n              )\r\n              : (\r\n                <>\r\n                  {\r\n                    numberArrayUtill(totalPage).map((i) => (\r\n                      <PageNumber>\r\n                        <PageLink onClick={() => setPage(i - 1)} to={`/notice?page=${i - 1}`}>{i}</PageLink>\r\n                      </PageNumber>\r\n                    ))\r\n                  }\r\n                </>\r\n              )\r\n          }\r\n        </PageNumbers>\r\n        <NextPage src=\"/images/icons/back.png\" />\r\n      </PaginationBox>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Notice;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSlice.ts",["558","559"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\InfiniteScrollList.tsx",["560","561"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\question.tsx",["562"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\timeForToday.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NotFound.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\ChattingSub.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishsApi.ts",["563","564","565","566"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSlice.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSaga.ts",["567"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts",[],{"ruleId":"568","replacedBy":"569"},{"ruleId":"570","replacedBy":"571"},{"ruleId":"572","replacedBy":"573"},{"ruleId":"574","replacedBy":"575"},{"ruleId":"576","replacedBy":"577"},{"ruleId":"578","replacedBy":"579"},{"ruleId":"568","replacedBy":"580"},{"ruleId":"570","replacedBy":"581"},{"ruleId":"572","replacedBy":"582"},{"ruleId":"574","replacedBy":"583"},{"ruleId":"576","replacedBy":"584"},{"ruleId":"578","replacedBy":"585"},{"ruleId":"586","severity":1,"message":"587","line":141,"column":51,"nodeType":"588","messageId":"589","endLine":141,"endColumn":54,"suggestions":"590"},{"ruleId":"586","severity":1,"message":"587","line":142,"column":50,"nodeType":"588","messageId":"589","endLine":142,"endColumn":53,"suggestions":"591"},{"ruleId":"568","replacedBy":"592"},{"ruleId":"570","replacedBy":"593"},{"ruleId":"572","replacedBy":"594"},{"ruleId":"574","replacedBy":"595"},{"ruleId":"576","replacedBy":"596"},{"ruleId":"578","replacedBy":"597"},{"ruleId":"568","replacedBy":"598"},{"ruleId":"570","replacedBy":"599"},{"ruleId":"572","replacedBy":"600"},{"ruleId":"574","replacedBy":"601"},{"ruleId":"576","replacedBy":"602"},{"ruleId":"578","replacedBy":"603"},{"ruleId":"586","severity":1,"message":"587","line":167,"column":96,"nodeType":"588","messageId":"589","endLine":167,"endColumn":99,"suggestions":"604"},{"ruleId":"586","severity":1,"message":"587","line":237,"column":56,"nodeType":"588","messageId":"589","endLine":237,"endColumn":59,"suggestions":"605"},{"ruleId":"606","severity":1,"message":"607","line":50,"column":38,"nodeType":"608","messageId":"609","endLine":50,"endColumn":44},{"ruleId":"606","severity":1,"message":"607","line":63,"column":31,"nodeType":"608","messageId":"609","endLine":63,"endColumn":37},{"ruleId":"606","severity":1,"message":"607","line":67,"column":31,"nodeType":"608","messageId":"609","endLine":67,"endColumn":37},{"ruleId":"606","severity":1,"message":"607","line":77,"column":34,"nodeType":"608","messageId":"609","endLine":77,"endColumn":40},{"ruleId":"606","severity":1,"message":"607","line":89,"column":34,"nodeType":"608","messageId":"609","endLine":89,"endColumn":40},{"ruleId":"568","replacedBy":"610"},{"ruleId":"570","replacedBy":"611"},{"ruleId":"572","replacedBy":"612"},{"ruleId":"574","replacedBy":"613"},{"ruleId":"576","replacedBy":"614"},{"ruleId":"578","replacedBy":"615"},{"ruleId":"606","severity":1,"message":"607","line":12,"column":38,"nodeType":"608","messageId":"609","endLine":12,"endColumn":44},{"ruleId":"568","replacedBy":"616"},{"ruleId":"570","replacedBy":"617"},{"ruleId":"572","replacedBy":"618"},{"ruleId":"574","replacedBy":"619"},{"ruleId":"576","replacedBy":"620"},{"ruleId":"578","replacedBy":"621"},{"ruleId":"622","severity":1,"message":"623","line":1,"column":26,"nodeType":"624","messageId":"625","endLine":1,"endColumn":42},{"ruleId":"568","replacedBy":"626"},{"ruleId":"570","replacedBy":"627"},{"ruleId":"572","replacedBy":"628"},{"ruleId":"574","replacedBy":"629"},{"ruleId":"576","replacedBy":"630"},{"ruleId":"578","replacedBy":"631"},{"ruleId":"606","severity":1,"message":"632","line":3,"column":27,"nodeType":"608","messageId":"609","endLine":3,"endColumn":49},{"ruleId":"633","severity":1,"message":"634","line":38,"column":7,"nodeType":"635","messageId":"636","endLine":38,"endColumn":27},{"ruleId":"606","severity":1,"message":"637","line":48,"column":12,"nodeType":"608","messageId":"609","endLine":48,"endColumn":18},{"ruleId":"606","severity":1,"message":"638","line":63,"column":13,"nodeType":"608","messageId":"609","endLine":63,"endColumn":18},{"ruleId":"568","replacedBy":"639"},{"ruleId":"570","replacedBy":"640"},{"ruleId":"572","replacedBy":"641"},{"ruleId":"574","replacedBy":"642"},{"ruleId":"576","replacedBy":"643"},{"ruleId":"578","replacedBy":"644"},{"ruleId":"622","severity":1,"message":"623","line":3,"column":25,"nodeType":"624","messageId":"625","endLine":3,"endColumn":57},{"ruleId":"568","replacedBy":"645"},{"ruleId":"570","replacedBy":"646"},{"ruleId":"572","replacedBy":"647"},{"ruleId":"574","replacedBy":"648"},{"ruleId":"576","replacedBy":"649"},{"ruleId":"578","replacedBy":"650"},{"ruleId":"568","replacedBy":"651"},{"ruleId":"570","replacedBy":"652"},{"ruleId":"572","replacedBy":"653"},{"ruleId":"574","replacedBy":"654"},{"ruleId":"576","replacedBy":"655"},{"ruleId":"578","replacedBy":"656"},{"ruleId":"568","replacedBy":"657"},{"ruleId":"570","replacedBy":"658"},{"ruleId":"572","replacedBy":"659"},{"ruleId":"574","replacedBy":"660"},{"ruleId":"576","replacedBy":"661"},{"ruleId":"578","replacedBy":"662"},{"ruleId":"606","severity":1,"message":"607","line":13,"column":38,"nodeType":"608","messageId":"609","endLine":13,"endColumn":44},{"ruleId":"568","replacedBy":"663"},{"ruleId":"570","replacedBy":"664"},{"ruleId":"572","replacedBy":"665"},{"ruleId":"574","replacedBy":"666"},{"ruleId":"576","replacedBy":"667"},{"ruleId":"578","replacedBy":"668"},{"ruleId":"606","severity":1,"message":"669","line":3,"column":16,"nodeType":"608","messageId":"609","endLine":3,"endColumn":35},{"ruleId":"606","severity":1,"message":"670","line":3,"column":37,"nodeType":"608","messageId":"609","endLine":3,"endColumn":47},{"ruleId":"586","severity":1,"message":"587","line":31,"column":50,"nodeType":"588","messageId":"589","endLine":31,"endColumn":53,"suggestions":"671"},{"ruleId":"606","severity":1,"message":"672","line":107,"column":11,"nodeType":"608","messageId":"609","endLine":107,"endColumn":31},{"ruleId":"586","severity":1,"message":"587","line":107,"column":56,"nodeType":"588","messageId":"589","endLine":107,"endColumn":59,"suggestions":"673"},{"ruleId":"586","severity":1,"message":"587","line":162,"column":34,"nodeType":"588","messageId":"589","endLine":162,"endColumn":37,"suggestions":"674"},{"ruleId":"586","severity":1,"message":"587","line":213,"column":76,"nodeType":"588","messageId":"589","endLine":213,"endColumn":79,"suggestions":"675"},{"ruleId":"633","severity":1,"message":"634","line":250,"column":7,"nodeType":"635","messageId":"636","endLine":250,"endColumn":53},{"ruleId":"633","severity":1,"message":"634","line":253,"column":7,"nodeType":"635","messageId":"636","endLine":253,"endColumn":28},{"ruleId":"606","severity":1,"message":"676","line":6,"column":32,"nodeType":"608","messageId":"609","endLine":6,"endColumn":48},{"ruleId":"586","severity":1,"message":"587","line":248,"column":42,"nodeType":"588","messageId":"589","endLine":248,"endColumn":45,"suggestions":"677"},{"ruleId":"633","severity":1,"message":"634","line":302,"column":7,"nodeType":"635","messageId":"636","endLine":302,"endColumn":29},{"ruleId":"633","severity":1,"message":"634","line":304,"column":7,"nodeType":"635","messageId":"636","endLine":304,"endColumn":29},{"ruleId":"633","severity":1,"message":"634","line":306,"column":7,"nodeType":"635","messageId":"636","endLine":306,"endColumn":27},{"ruleId":"586","severity":1,"message":"587","line":68,"column":46,"nodeType":"588","messageId":"589","endLine":68,"endColumn":49,"suggestions":"678"},{"ruleId":"606","severity":1,"message":"679","line":249,"column":17,"nodeType":"608","messageId":"609","endLine":249,"endColumn":37},{"ruleId":"586","severity":1,"message":"587","line":249,"column":62,"nodeType":"588","messageId":"589","endLine":249,"endColumn":65,"suggestions":"680"},{"ruleId":"586","severity":1,"message":"587","line":468,"column":88,"nodeType":"588","messageId":"589","endLine":468,"endColumn":91,"suggestions":"681"},{"ruleId":"622","severity":1,"message":"623","line":4,"column":28,"nodeType":"624","messageId":"625","endLine":4,"endColumn":60},{"ruleId":"606","severity":1,"message":"682","line":6,"column":10,"nodeType":"608","messageId":"609","endLine":6,"endColumn":26},{"ruleId":"568","replacedBy":"683"},{"ruleId":"570","replacedBy":"684"},{"ruleId":"572","replacedBy":"685"},{"ruleId":"574","replacedBy":"686"},{"ruleId":"576","replacedBy":"687"},{"ruleId":"578","replacedBy":"688"},{"ruleId":"606","severity":1,"message":"689","line":1,"column":38,"nodeType":"608","messageId":"609","endLine":1,"endColumn":46},{"ruleId":"586","severity":1,"message":"587","line":11,"column":22,"nodeType":"588","messageId":"589","endLine":11,"endColumn":25,"suggestions":"690"},{"ruleId":"606","severity":1,"message":"691","line":2,"column":10,"nodeType":"608","messageId":"609","endLine":2,"endColumn":20},{"ruleId":"606","severity":1,"message":"692","line":8,"column":8,"nodeType":"608","messageId":"609","endLine":8,"endColumn":20},{"ruleId":"606","severity":1,"message":"693","line":9,"column":8,"nodeType":"608","messageId":"609","endLine":9,"endColumn":16},{"ruleId":"586","severity":1,"message":"587","line":213,"column":64,"nodeType":"588","messageId":"589","endLine":213,"endColumn":67,"suggestions":"694"},{"ruleId":"606","severity":1,"message":"607","line":13,"column":33,"nodeType":"608","messageId":"609","endLine":13,"endColumn":39},{"ruleId":"606","severity":1,"message":"607","line":13,"column":42,"nodeType":"608","messageId":"609","endLine":13,"endColumn":48},{"ruleId":"606","severity":1,"message":"695","line":8,"column":12,"nodeType":"608","messageId":"609","endLine":8,"endColumn":15},{"ruleId":"606","severity":1,"message":"695","line":22,"column":12,"nodeType":"608","messageId":"609","endLine":22,"endColumn":15},{"ruleId":"606","severity":1,"message":"695","line":36,"column":12,"nodeType":"608","messageId":"609","endLine":36,"endColumn":15},{"ruleId":"606","severity":1,"message":"696","line":3,"column":10,"nodeType":"608","messageId":"609","endLine":3,"endColumn":21},{"ruleId":"586","severity":1,"message":"587","line":15,"column":22,"nodeType":"588","messageId":"589","endLine":15,"endColumn":25,"suggestions":"697"},{"ruleId":"606","severity":1,"message":"698","line":1,"column":17,"nodeType":"608","messageId":"609","endLine":1,"endColumn":26},{"ruleId":"606","severity":1,"message":"699","line":2,"column":10,"nodeType":"608","messageId":"609","endLine":2,"endColumn":21},{"ruleId":"606","severity":1,"message":"700","line":3,"column":8,"nodeType":"608","messageId":"609","endLine":3,"endColumn":14},{"ruleId":"606","severity":1,"message":"701","line":8,"column":10,"nodeType":"608","messageId":"609","endLine":8,"endColumn":27},{"ruleId":"606","severity":1,"message":"702","line":213,"column":37,"nodeType":"608","messageId":"609","endLine":213,"endColumn":67},{"ruleId":"586","severity":1,"message":"587","line":213,"column":92,"nodeType":"588","messageId":"589","endLine":213,"endColumn":95,"suggestions":"703"},{"ruleId":"586","severity":1,"message":"587","line":85,"column":45,"nodeType":"588","messageId":"589","endLine":85,"endColumn":48,"suggestions":"704"},{"ruleId":"606","severity":1,"message":"607","line":51,"column":35,"nodeType":"608","messageId":"609","endLine":51,"endColumn":41},{"ruleId":"606","severity":1,"message":"607","line":66,"column":33,"nodeType":"608","messageId":"609","endLine":66,"endColumn":39},{"ruleId":"606","severity":1,"message":"607","line":81,"column":33,"nodeType":"608","messageId":"609","endLine":81,"endColumn":39},{"ruleId":"606","severity":1,"message":"607","line":85,"column":33,"nodeType":"608","messageId":"609","endLine":85,"endColumn":39},{"ruleId":"606","severity":1,"message":"607","line":96,"column":29,"nodeType":"608","messageId":"609","endLine":96,"endColumn":35},{"ruleId":"606","severity":1,"message":"607","line":100,"column":29,"nodeType":"608","messageId":"609","endLine":100,"endColumn":35},{"ruleId":"606","severity":1,"message":"607","line":110,"column":36,"nodeType":"608","messageId":"609","endLine":110,"endColumn":42},{"ruleId":"606","severity":1,"message":"705","line":161,"column":25,"nodeType":"608","messageId":"609","endLine":161,"endColumn":75},{"ruleId":"606","severity":1,"message":"607","line":16,"column":31,"nodeType":"608","messageId":"609","endLine":16,"endColumn":37},{"ruleId":"606","severity":1,"message":"706","line":4,"column":22,"nodeType":"608","messageId":"609","endLine":4,"endColumn":31},{"ruleId":"606","severity":1,"message":"707","line":12,"column":11,"nodeType":"608","messageId":"609","endLine":12,"endColumn":21},{"ruleId":"586","severity":1,"message":"587","line":69,"column":50,"nodeType":"588","messageId":"589","endLine":69,"endColumn":53,"suggestions":"708"},{"ruleId":"586","severity":1,"message":"587","line":103,"column":34,"nodeType":"588","messageId":"589","endLine":103,"endColumn":37,"suggestions":"709"},{"ruleId":"606","severity":1,"message":"699","line":3,"column":10,"nodeType":"608","messageId":"609","endLine":3,"endColumn":21},{"ruleId":"606","severity":1,"message":"670","line":4,"column":10,"nodeType":"608","messageId":"609","endLine":4,"endColumn":20},{"ruleId":"606","severity":1,"message":"689","line":1,"column":28,"nodeType":"608","messageId":"609","endLine":1,"endColumn":36},{"ruleId":"606","severity":1,"message":"710","line":3,"column":10,"nodeType":"608","messageId":"609","endLine":3,"endColumn":14},{"ruleId":"606","severity":1,"message":"698","line":1,"column":17,"nodeType":"608","messageId":"609","endLine":1,"endColumn":26},{"ruleId":"606","severity":1,"message":"689","line":1,"column":28,"nodeType":"608","messageId":"609","endLine":1,"endColumn":36},{"ruleId":"606","severity":1,"message":"699","line":2,"column":10,"nodeType":"608","messageId":"609","endLine":2,"endColumn":21},{"ruleId":"606","severity":1,"message":"696","line":2,"column":23,"nodeType":"608","messageId":"609","endLine":2,"endColumn":34},{"ruleId":"606","severity":1,"message":"607","line":39,"column":31,"nodeType":"608","messageId":"609","endLine":39,"endColumn":37},{"ruleId":"606","severity":1,"message":"607","line":42,"column":37,"nodeType":"608","messageId":"609","endLine":42,"endColumn":43},{"ruleId":"606","severity":1,"message":"607","line":55,"column":32,"nodeType":"608","messageId":"609","endLine":55,"endColumn":38},{"ruleId":"606","severity":1,"message":"607","line":58,"column":39,"nodeType":"608","messageId":"609","endLine":58,"endColumn":45},{"ruleId":"606","severity":1,"message":"607","line":68,"column":39,"nodeType":"608","messageId":"609","endLine":68,"endColumn":45},{"ruleId":"606","severity":1,"message":"607","line":81,"column":37,"nodeType":"608","messageId":"609","endLine":81,"endColumn":43},{"ruleId":"606","severity":1,"message":"607","line":93,"column":40,"nodeType":"608","messageId":"609","endLine":93,"endColumn":46},{"ruleId":"606","severity":1,"message":"711","line":5,"column":36,"nodeType":"608","messageId":"609","endLine":5,"endColumn":53},{"ruleId":"606","severity":1,"message":"712","line":125,"column":9,"nodeType":"608","messageId":"609","endLine":125,"endColumn":16},{"ruleId":"606","severity":1,"message":"698","line":1,"column":17,"nodeType":"608","messageId":"609","endLine":1,"endColumn":26},{"ruleId":"606","severity":1,"message":"699","line":2,"column":10,"nodeType":"608","messageId":"609","endLine":2,"endColumn":21},{"ruleId":"606","severity":1,"message":"712","line":206,"column":9,"nodeType":"608","messageId":"609","endLine":206,"endColumn":16},{"ruleId":"606","severity":1,"message":"713","line":210,"column":27,"nodeType":"608","messageId":"609","endLine":210,"endColumn":35},{"ruleId":"606","severity":1,"message":"607","line":32,"column":32,"nodeType":"608","messageId":"609","endLine":32,"endColumn":38},{"ruleId":"606","severity":1,"message":"607","line":37,"column":39,"nodeType":"608","messageId":"609","endLine":37,"endColumn":45},{"ruleId":"606","severity":1,"message":"607","line":47,"column":31,"nodeType":"608","messageId":"609","endLine":47,"endColumn":37},{"ruleId":"606","severity":1,"message":"714","line":2,"column":15,"nodeType":"608","messageId":"609","endLine":2,"endColumn":19},{"ruleId":"606","severity":1,"message":"715","line":6,"column":3,"nodeType":"608","messageId":"609","endLine":6,"endColumn":27},{"ruleId":"586","severity":1,"message":"587","line":168,"column":57,"nodeType":"588","messageId":"589","endLine":168,"endColumn":60,"suggestions":"716"},{"ruleId":"606","severity":1,"message":"607","line":28,"column":33,"nodeType":"608","messageId":"609","endLine":28,"endColumn":39},{"ruleId":"606","severity":1,"message":"607","line":46,"column":39,"nodeType":"608","messageId":"609","endLine":46,"endColumn":45},{"ruleId":"586","severity":1,"message":"587","line":12,"column":11,"nodeType":"588","messageId":"589","endLine":12,"endColumn":14,"suggestions":"717"},{"ruleId":"586","severity":1,"message":"587","line":54,"column":86,"nodeType":"588","messageId":"589","endLine":54,"endColumn":89,"suggestions":"718"},{"ruleId":"586","severity":1,"message":"587","line":201,"column":59,"nodeType":"588","messageId":"589","endLine":201,"endColumn":62,"suggestions":"719"},{"ruleId":"606","severity":1,"message":"695","line":10,"column":12,"nodeType":"608","messageId":"609","endLine":10,"endColumn":15},{"ruleId":"606","severity":1,"message":"638","line":10,"column":33,"nodeType":"608","messageId":"609","endLine":10,"endColumn":38},{"ruleId":"606","severity":1,"message":"695","line":20,"column":12,"nodeType":"608","messageId":"609","endLine":20,"endColumn":15},{"ruleId":"606","severity":1,"message":"638","line":20,"column":33,"nodeType":"608","messageId":"609","endLine":20,"endColumn":38},{"ruleId":"606","severity":1,"message":"632","line":26,"column":10,"nodeType":"608","messageId":"609","endLine":26,"endColumn":32},"lines-around-directive",["720"],"no-spaced-func",["721"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["720"],["721"],[],[],[],[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["722","723"],["724","725"],["720"],["721"],[],[],[],[],["720"],["721"],[],[],[],[],["726","727"],["728","729"],"@typescript-eslint/no-unused-vars","'action' is defined but never used.","Identifier","unusedVar",["720"],["721"],[],[],[],[],["720"],["721"],[],[],[],[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["720"],["721"],[],[],[],[],"'modifyProfileInterface' is defined but never used.","no-alert","Unexpected alert.","CallExpression","unexpected","'result' is defined but never used.","'error' is defined but never used.",["720"],["721"],[],[],[],[],["720"],["721"],[],[],[],[],["720"],["721"],[],[],[],[],["720"],["721"],[],[],[],[],["720"],["721"],[],[],[],[],"'RouteComponentProps' is defined but never used.","'useHistory' is defined but never used.",["730","731"],"'isAddBookPostLoading' is assigned a value but never used.",["732","733"],["734","735"],["736","737"],"'addMarketRequest' is defined but never used.",["738","739"],["740","741"],"'isModifyProfileError' is assigned a value but never used.",["742","743"],["744","745"],"'postLoginRequest' is defined but never used.",["720"],["721"],[],[],[],[],"'useState' is defined but never used.",["746","747"],"'HashRouter' is defined but never used.","'ChattingList' is defined but never used.","'Chatting' is defined but never used.",["748","749"],"'res' is defined but never used.","'useSelector' is defined but never used.",["750","751"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'cookie' is defined but never used.","'postLogoutRequest' is defined but never used.","'isGetMyPurchaseArticlesLoading' is assigned a value but never used.",["752","753"],["754","755"],"'e' is defined but never used.","'useParams' is defined but never used.","'ParamTypes' is defined but never used.",["756","757"],["758","759"],"'Link' is defined but never used.","'modifyBookPostAPI' is defined but never used.","'history' is assigned a value but never used.","'noticeId' is assigned a value but never used.","'call' is defined but never used.","'adminLoginRequestSuccess' is defined but never used.",["760","761"],["762","763"],["764","765"],["766","767"],"padding-line-between-statements","func-call-spacing",{"messageId":"768","fix":"769","desc":"770"},{"messageId":"771","fix":"772","desc":"773"},{"messageId":"768","fix":"774","desc":"770"},{"messageId":"771","fix":"775","desc":"773"},{"messageId":"768","fix":"776","desc":"770"},{"messageId":"771","fix":"777","desc":"773"},{"messageId":"768","fix":"778","desc":"770"},{"messageId":"771","fix":"779","desc":"773"},{"messageId":"768","fix":"780","desc":"770"},{"messageId":"771","fix":"781","desc":"773"},{"messageId":"768","fix":"782","desc":"770"},{"messageId":"771","fix":"783","desc":"773"},{"messageId":"768","fix":"784","desc":"770"},{"messageId":"771","fix":"785","desc":"773"},{"messageId":"768","fix":"786","desc":"770"},{"messageId":"771","fix":"787","desc":"773"},{"messageId":"768","fix":"788","desc":"770"},{"messageId":"771","fix":"789","desc":"773"},{"messageId":"768","fix":"790","desc":"770"},{"messageId":"771","fix":"791","desc":"773"},{"messageId":"768","fix":"792","desc":"770"},{"messageId":"771","fix":"793","desc":"773"},{"messageId":"768","fix":"794","desc":"770"},{"messageId":"771","fix":"795","desc":"773"},{"messageId":"768","fix":"796","desc":"770"},{"messageId":"771","fix":"797","desc":"773"},{"messageId":"768","fix":"798","desc":"770"},{"messageId":"771","fix":"799","desc":"773"},{"messageId":"768","fix":"800","desc":"770"},{"messageId":"771","fix":"801","desc":"773"},{"messageId":"768","fix":"802","desc":"770"},{"messageId":"771","fix":"803","desc":"773"},{"messageId":"768","fix":"804","desc":"770"},{"messageId":"771","fix":"805","desc":"773"},{"messageId":"768","fix":"806","desc":"770"},{"messageId":"771","fix":"807","desc":"773"},{"messageId":"768","fix":"808","desc":"770"},{"messageId":"771","fix":"809","desc":"773"},{"messageId":"768","fix":"810","desc":"770"},{"messageId":"771","fix":"811","desc":"773"},{"messageId":"768","fix":"812","desc":"770"},{"messageId":"771","fix":"813","desc":"773"},{"messageId":"768","fix":"814","desc":"770"},{"messageId":"771","fix":"815","desc":"773"},{"messageId":"768","fix":"816","desc":"770"},{"messageId":"771","fix":"817","desc":"773"},"suggestUnknown",{"range":"818","text":"819"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"818","text":"820"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"821","text":"819"},{"range":"821","text":"820"},{"range":"822","text":"819"},{"range":"822","text":"820"},{"range":"823","text":"819"},{"range":"823","text":"820"},{"range":"824","text":"819"},{"range":"824","text":"820"},{"range":"825","text":"819"},{"range":"825","text":"820"},{"range":"826","text":"819"},{"range":"826","text":"820"},{"range":"827","text":"819"},{"range":"827","text":"820"},{"range":"828","text":"819"},{"range":"828","text":"820"},{"range":"829","text":"819"},{"range":"829","text":"820"},{"range":"830","text":"819"},{"range":"830","text":"820"},{"range":"831","text":"819"},{"range":"831","text":"820"},{"range":"832","text":"819"},{"range":"832","text":"820"},{"range":"833","text":"819"},{"range":"833","text":"820"},{"range":"834","text":"819"},{"range":"834","text":"820"},{"range":"835","text":"819"},{"range":"835","text":"820"},{"range":"836","text":"819"},{"range":"836","text":"820"},{"range":"837","text":"819"},{"range":"837","text":"820"},{"range":"838","text":"819"},{"range":"838","text":"820"},{"range":"839","text":"819"},{"range":"839","text":"820"},{"range":"840","text":"819"},{"range":"840","text":"820"},{"range":"841","text":"819"},{"range":"841","text":"820"},{"range":"842","text":"819"},{"range":"842","text":"820"},[3295,3298],"unknown","never",[3375,3378],[3347,3350],[4681,4684],[797,800],[2868,2871],[4830,4833],[4249,4252],[4963,4966],[1516,1519],[4863,4866],[10992,10995],[235,238],[4270,4273],[472,475],[4285,4288],[1880,1883],[1657,1660],[2936,2939],[3300,3303],[458,461],[1322,1325],[3988,3991]]