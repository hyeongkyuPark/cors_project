[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSaga.ts":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSaga.ts":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\historyUtil.ts":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostContent.tsx":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\QuestionDetail.tsx":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\MyPage.tsx":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSlice.ts":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\PostActionButton.tsx":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSlice.ts":"12","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts":"13","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\Loading.tsx":"14","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImagesZoom.tsx":"15","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signUp\\Join.tsx":"16","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts":"17","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostButton.tsx":"18","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\CategoryMenu.tsx":"19","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts":"20","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\ChattingList.tsx":"21","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\Review.tsx":"22","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSaga.ts":"23","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSlice.ts":"24","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\marketApi.ts":"25","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\mockdata.ts":"26","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts":"27","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts":"28","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImageSlide.tsx":"29","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSaga.ts":"30","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostView.tsx":"31","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostPage.tsx":"32","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\WishList.tsx":"33","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myMarket\\AddMyMarket.tsx":"34","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSaga.ts":"35","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\questionApi.ts":"36","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\SearchBook.tsx":"37","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\modals\\AskModal.tsx":"38","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\Market.tsx":"39","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\modifyProfile\\ModifyProfile.tsx":"40","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts":"41","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\LoginForm.tsx":"42","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\ImagePreView.tsx":"43","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx":"44","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\MyPurchaseArticle.tsx":"45","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSlice.ts":"46","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSlice.ts":"47","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSaga.ts":"48","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\SocialLogin.tsx":"49","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts":"50","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\Editor.tsx":"51","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts":"52","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\Login.tsx":"53","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\MySaleArticle.tsx":"54","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\modals\\PostDeleteModal.tsx":"55","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx":"56","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\Header.tsx":"57","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\marketSlice.ts":"58","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\AddQuestion.tsx":"59","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSlice.ts":"60","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts":"61","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NodataPage.tsx":"62","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\modifyPost\\ModifyPost.tsx":"63","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts":"64","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\marketSaga.ts":"65","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\signIn\\LoginForm.tsx":"66","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\signIn\\AdminSignIn.tsx":"67","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\home\\AdminHome.tsx":"68","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSlice.ts":"69","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSaga.ts":"70","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\notice\\AdminNotice.tsx":"71","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\notice\\NoticeDetail.tsx":"72","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\adminSlice.ts":"73","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\adminSaga.ts":"74","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\Notice.tsx":"75","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSlice.ts":"76","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\InfiniteScrollList.tsx":"77","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\question.tsx":"78","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\timeForToday.ts":"79","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NotFound.tsx":"80","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\ChattingSub.tsx":"81","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishsApi.ts":"82","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts":"83","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSlice.ts":"84","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSaga.ts":"85","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts":"86","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\MarketDetail.tsx":"87","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\imageFileReader.ts":"88","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\PostList.tsx":"89","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSaga.ts":"90"},{"size":1573,"mtime":1614678490536,"results":"91","hashOfConfig":"92"},{"size":3234,"mtime":1614219824185,"results":"93","hashOfConfig":"92"},{"size":856,"mtime":1613897048141,"results":"94","hashOfConfig":"92"},{"size":271,"mtime":1613897076483,"results":"95","hashOfConfig":"92"},{"size":6042,"mtime":1614466459092,"results":"96","hashOfConfig":"92"},{"size":511,"mtime":1614674779637,"results":"97","hashOfConfig":"92"},{"size":5781,"mtime":1614228106617,"results":"98","hashOfConfig":"92"},{"size":9380,"mtime":1614655773476,"results":"99","hashOfConfig":"92"},{"size":3904,"mtime":1614219824193,"results":"100","hashOfConfig":"92"},{"size":1330,"mtime":1614219824181,"results":"101","hashOfConfig":"92"},{"size":594,"mtime":1614674814058,"results":"102","hashOfConfig":"92"},{"size":923,"mtime":1613897076472,"results":"103","hashOfConfig":"92"},{"size":191,"mtime":1613542151677,"results":"104","hashOfConfig":"92"},{"size":652,"mtime":1613897076454,"results":"105","hashOfConfig":"92"},{"size":1565,"mtime":1613897076474,"results":"106","hashOfConfig":"92"},{"size":19029,"mtime":1614655773474,"results":"107","hashOfConfig":"92"},{"size":2498,"mtime":1614655773451,"results":"108","hashOfConfig":"92"},{"size":1486,"mtime":1614466459090,"results":"109","hashOfConfig":"92"},{"size":3640,"mtime":1613897860272,"results":"110","hashOfConfig":"92"},{"size":440,"mtime":1611271238964,"results":"111","hashOfConfig":"92"},{"size":2206,"mtime":1613897076458,"results":"112","hashOfConfig":"92"},{"size":3263,"mtime":1613897048147,"results":"113","hashOfConfig":"92"},{"size":1040,"mtime":1613897048134,"results":"114","hashOfConfig":"92"},{"size":1097,"mtime":1613897048136,"results":"115","hashOfConfig":"92"},{"size":1214,"mtime":1614615342555,"results":"116","hashOfConfig":"92"},{"size":1218,"mtime":1613897048146,"results":"117","hashOfConfig":"92"},{"size":1733,"mtime":1614681421305,"results":"118","hashOfConfig":"92"},{"size":343,"mtime":1613272432332,"results":"119","hashOfConfig":"92"},{"size":1414,"mtime":1613897076473,"results":"120","hashOfConfig":"92"},{"size":565,"mtime":1613913478043,"results":"121","hashOfConfig":"92"},{"size":1422,"mtime":1614466459091,"results":"122","hashOfConfig":"92"},{"size":8507,"mtime":1614466459093,"results":"123","hashOfConfig":"92"},{"size":8190,"mtime":1613897048149,"results":"124","hashOfConfig":"92"},{"size":9163,"mtime":1614655773480,"results":"125","hashOfConfig":"92"},{"size":1495,"mtime":1613976606213,"results":"126","hashOfConfig":"92"},{"size":2053,"mtime":1613976559095,"results":"127","hashOfConfig":"92"},{"size":1253,"mtime":1614219824145,"results":"128","hashOfConfig":"92"},{"size":1776,"mtime":1614219824141,"results":"129","hashOfConfig":"92"},{"size":2798,"mtime":1614466459084,"results":"130","hashOfConfig":"92"},{"size":15152,"mtime":1614655773471,"results":"131","hashOfConfig":"92"},{"size":569,"mtime":1613272432329,"results":"132","hashOfConfig":"92"},{"size":3011,"mtime":1614215856769,"results":"133","hashOfConfig":"92"},{"size":1697,"mtime":1614219824145,"results":"134","hashOfConfig":"92"},{"size":3748,"mtime":1614660411732,"results":"135","hashOfConfig":"92"},{"size":7940,"mtime":1613897048131,"results":"136","hashOfConfig":"92"},{"size":1003,"mtime":1613897048153,"results":"137","hashOfConfig":"92"},{"size":1173,"mtime":1613897048134,"results":"138","hashOfConfig":"92"},{"size":950,"mtime":1613897048152,"results":"139","hashOfConfig":"92"},{"size":1083,"mtime":1613993515095,"results":"140","hashOfConfig":"92"},{"size":1364,"mtime":1613542151453,"results":"141","hashOfConfig":"92"},{"size":1972,"mtime":1614219824145,"results":"142","hashOfConfig":"92"},{"size":358,"mtime":1613272432328,"results":"143","hashOfConfig":"92"},{"size":1936,"mtime":1614560363113,"results":"144","hashOfConfig":"92"},{"size":7911,"mtime":1613897048135,"results":"145","hashOfConfig":"92"},{"size":571,"mtime":1614219824141,"results":"146","hashOfConfig":"92"},{"size":2240,"mtime":1614237645416,"results":"147","hashOfConfig":"92"},{"size":4154,"mtime":1614219824189,"results":"148","hashOfConfig":"92"},{"size":4244,"mtime":1614655773467,"results":"149","hashOfConfig":"92"},{"size":5613,"mtime":1614215856763,"results":"150","hashOfConfig":"92"},{"size":1379,"mtime":1613897048142,"results":"151","hashOfConfig":"92"},{"size":441,"mtime":1613897048100,"results":"152","hashOfConfig":"92"},{"size":347,"mtime":1613897076455,"results":"153","hashOfConfig":"92"},{"size":5739,"mtime":1614466459094,"results":"154","hashOfConfig":"92"},{"size":512,"mtime":1613542151477,"results":"155","hashOfConfig":"92"},{"size":2993,"mtime":1614655773463,"results":"156","hashOfConfig":"92"},{"size":2234,"mtime":1614655773469,"results":"157","hashOfConfig":"92"},{"size":1404,"mtime":1614655773461,"results":"158","hashOfConfig":"92"},{"size":1832,"mtime":1614608189191,"results":"159","hashOfConfig":"92"},{"size":4188,"mtime":1614655773481,"results":"160","hashOfConfig":"92"},{"size":814,"mtime":1614219824177,"results":"161","hashOfConfig":"92"},{"size":4592,"mtime":1614680070469,"results":"162","hashOfConfig":"92"},{"size":8520,"mtime":1614681496999,"results":"163","hashOfConfig":"92"},{"size":2619,"mtime":1614678033701,"results":"164","hashOfConfig":"92"},{"size":1299,"mtime":1614676512674,"results":"165","hashOfConfig":"92"},{"size":5775,"mtime":1613897048138,"results":"166","hashOfConfig":"92"},{"size":2335,"mtime":1613982495589,"results":"167","hashOfConfig":"92"},{"size":3018,"mtime":1613897076476,"results":"168","hashOfConfig":"92"},{"size":6508,"mtime":1614065773896,"results":"169","hashOfConfig":"92"},{"size":657,"mtime":1614219824209,"results":"170","hashOfConfig":"92"},{"size":171,"mtime":1613542151489,"results":"171","hashOfConfig":"92"},{"size":416,"mtime":1614466459083,"results":"172","hashOfConfig":"92"},{"size":483,"mtime":1613542151477,"results":"173","hashOfConfig":"92"},{"size":241,"mtime":1613542151673,"results":"174","hashOfConfig":"92"},{"size":511,"mtime":1613975138422,"results":"175","hashOfConfig":"92"},{"size":4579,"mtime":1614655773479,"results":"176","hashOfConfig":"92"},{"size":2262,"mtime":1614466459081,"results":"177","hashOfConfig":"92"},{"size":3466,"mtime":1614466459085,"results":"178","hashOfConfig":"92"},{"size":346,"mtime":1613542151673,"results":"179","hashOfConfig":"92"},{"size":1575,"mtime":1614219824189,"results":"180","hashOfConfig":"92"},{"size":1051,"mtime":1613897048130,"results":"181","hashOfConfig":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"sthwp6",{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"189"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"184"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"184"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"189"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"189"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"238"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"184"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"226"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"238"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"226"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"196"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"189"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"196"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"208"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"238"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"196"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"238"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"333"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"184"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"238"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"306"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"226"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"184"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"262"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"184"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"184"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"226"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"189"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"189"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"196"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"184"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"238"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"238"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx",[],["417","418","419","420","421","422"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSaga.ts",[],["423","424","425","426","427","428"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\historyUtil.ts",[],["429","430","431","432","433","434"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostContent.tsx",["435","436"],"import React, { useEffect, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\nimport countUtil from '../../../utils/countDaoUtil';\nimport ProgressUtil from '../../../utils/progressUtil';\nimport { deleteBookPostRequest } from '../postSlice';\nimport { postAddWishListRequest, postRemoveWishListRequest } from '../../signIn/userSlice';\nimport ImageSlide from './ImageSlide';\nimport timeForToday from '../../../utils/timeForToday';\nimport PostActionButton from './PostActionButton';\nimport { loadDetailBookPostRequest } from './detailViewSlice';\n\ninterface DetailPostInterface {\n  id: number;\n}\nconst ContentWrapper = styled.div`\n`;\nconst ContentTop = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border-bottom: 1px solid #e8e8e8;\n`;\nconst ContentMain = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  margin: 0 auto;\n`;\nconst ProfileWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n`;\nconst ProfileImg = styled.img`\n  width: 50px;\n  height: 50px;\n  border: 1px solid #e8e8e8;\n  border-radius: 50%;\n  padding: 2px;\n`;\nconst NickName = styled.div`\n  margin-left: 10px;\n`;\nconst State = styled.div`\n  color: #3960a6;\n  border: 1px solid #3960a6;\n  padding: 5px 10px;\n  border-radius: 20px;\n`;\nconst ContentTitle = styled.div`\n  padding: 10px 0;\n  font-size: 20px;\n  font-weight: 600;\n`;\nconst Category = styled.div`\n  font-size: 13px;\n  color: #919191;\n`;\nconst Thumbnail = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #e8e8e8;\n  color: #3960a6;\n  font-weight: 700;\n  border-radius: 5px;\n  & img {\n    width: 80px;\n    margin-right: 20px;\n  }\n`;\nconst Content = styled.div`\n  padding: 20px 0;\n`;\nconst AdditionalContent = styled.div`\n  padding: 20px 0;\n  font-size: 13px;\n`;\nconst OtherBooksButton = styled.button`\n  color: white;\n  background: #3960a6;\n  width: 100%;\n  border: 0;\n  padding: 10px;\n  font-size: 15px;\n  border-radius: 5px;\n  margin: 0 auto;\n`;\nconst ContentBottom = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  font-size: 20px;\n  border-top: 1px solid #e8e8e8;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n`;\nconst ChattingButton = styled.button`\n  color: white;\n  background: #3960a6;\n  max-width: 200px;\n  border: 0;\n  padding: 10px;\n  font-size: 15px;\n  border-radius: 5px;\n`;\nconst HeartButton = styled.button`\n  background: transparent;\n  border: 0;\n  & img {\n    width: 35px;\n  }\n`;\nconst Price = styled.div`\n  font-weight: 800;\n`;\nconst Report = styled.div`\n  font-size: 15px;\n  padding: 20px 0;\n`;\nconst UploadeTime = styled.div`\n  font-size: 13px;\n  color: #919191;\n  padding: 10px 0;\n`;\n\nfunction DetailPostContent({ id } :DetailPostInterface):JSX.Element {\n  const dispatch = useDispatch();\n  const [heart, setHeart] = useState(false);\n  const { wishList, email } = useSelector((state: any) => state.userSlice.user);\n  const { detailBookPost } = useSelector((state: any) => state.detailViewSlice);\n  const isMe = detailBookPost.member.email === email;\n  const history = useHistory();\n  const HandleHeartButton = () => {\n    if (heart) {\n      dispatch(postRemoveWishListRequest(detailBookPost.articleId));\n    } else {\n      dispatch(postAddWishListRequest(detailBookPost.articleId));\n    }\n  };\n\n  const deletePost = useCallback(() => {\n    dispatch(deleteBookPostRequest(id));\n    setTimeout(() => {\n      history.push('/home');\n      ToastsStore.success('삭제가 완료되었습니다.');\n    }, 1000);\n  }, [dispatch, history, id]);\n  const editPost = useCallback(() => {\n    dispatch(loadDetailBookPostRequest(id));\n    history.push(`/modifyPost/${id}`);\n  }, [dispatch, history, id]);\n\n  useEffect(() => {\n    setHeart(wishList.includes(detailBookPost.articleId));\n  }, [wishList, detailBookPost]);\n\n  return (\n    <>\n      <ImageSlide images={detailBookPost.image} />\n      <ContentWrapper>\n        <ContentTop>\n          <ProfileWrapper>\n            <ProfileImg src=\"/images/icons/init_profile.png\" alt=\"profile\" />\n            <NickName>{detailBookPost.member.nickname}</NickName>\n          </ProfileWrapper>\n          <State>{ProgressUtil(detailBookPost.progress)}</State>\n        </ContentTop>\n        <ContentMain>\n          <ContentTitle>{detailBookPost.title}</ContentTitle>\n          <Category>{CategoryFormatUtil(detailBookPost.category)}</Category>\n          <UploadeTime>{timeForToday(detailBookPost.writeDate)}</UploadeTime>\n          <Thumbnail>\n            <img src={detailBookPost.thumbnail} alt=\"thumnail\" />\n            <div>원가: {detailBookPost.rprice} 원</div>\n          </Thumbnail>\n          <Content>\n            {detailBookPost.content}\n          </Content>\n          <AdditionalContent>{countUtil(detailBookPost.count)}</AdditionalContent>\n          <OtherBooksButton>판매자의 다른도서 보러가기</OtherBooksButton>\n          {!isMe && <Report>신고하기⚡️</Report>}\n          {isMe && <PostActionButton onEdit={editPost} onRemove={deletePost} />}\n        </ContentMain>\n        <ContentBottom>\n          <HeartButton onClick={HandleHeartButton}>\n            <img src={heart ? '/images/icons/heart_active.png' : '/images/icons/heart.png'} alt=\"heartButton\" />\n          </HeartButton>\n          <Price>{detailBookPost.tprice} 원</Price>\n          <NavLink to={`/chatting/${id}`}>\n            {!isMe && <ChattingButton>채팅하기</ChattingButton>}\n          </NavLink>\n        </ContentBottom>\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n      </ContentWrapper>\n    </>\n  );\n}\n\nexport default DetailPostContent;\n",["437","438","439","440","441","442"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\QuestionDetail.tsx",["443"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { commentInterface } from '../../../interfaces/Question.inteface';\r\nimport { getQuestionDetailRequest } from './questionSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n  line-height: 1.3em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  margin-bottom: 1.5em;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  justify-content: center;\r\n  padding: 0 1em;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst TitleArea = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1.5em 1em;\r\n  border: 1px solid #ccc;\r\n  margin-bottom: 0.5em;\r\n  & h2 {\r\n    text-align: left;\r\n  }\r\n  & p {\r\n    color: #666666;\r\n    font-size: 3.5vw;\r\n    flex-shrink: 0;\r\n    margin-left: 1em;\r\n  }\r\n  & p.commentOk {\r\n    color: #3162C7;\r\n  }\r\n\r\n  @media screen and (min-width: 455px) {\r\n    & p {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContentArea = styled.div`\r\n  width: 100%;\r\n  height: 60vh;\r\n  min-height: 300px;\r\n  overflow: auto;\r\n  padding: 1em;\r\n  border: 1px solid #ccc;\r\n  font-size: 3.8vw;\r\n  & p.content_title {\r\n    color: #3162C7;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & pre {\r\n    margin-bottom: 1em;\r\n  }\r\n  & li {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0.7em 0;\r\n  }\r\n  & li:not(:last-child) {\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 17.2976px;\r\n  }\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CommentWriter = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  & * {\r\n    font-size: 3vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & * {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction QuestionDetail():JSX.Element {\r\n  const { detailId, questionDetail, isGetQuestionDetailError, comments } = useSelector((state: any) => state.myPageSlice.questionSlice);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(getQuestionDetailRequest(detailId));\r\n  }, [dispatch, detailId]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <BackLink to=\"/question\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>문의사항 상세</h1>\r\n      </Header>\r\n      {\r\n        isGetQuestionDetailError !== null\r\n          ? (\r\n            <>\r\n              <EmptyArticle>\r\n                <h2>접근 권한이 없거나 잘못된 접근입니다.</h2>\r\n                <button type=\"button\" onClick={() => history.push('/mypage')}>마이페이지로 가기</button>\r\n              </EmptyArticle>\r\n            </>\r\n          )\r\n          : (\r\n            <Content>\r\n              <TitleArea>\r\n                <h2>{questionDetail.title}</h2>\r\n                {\r\n                  questionDetail.comments.length === 0\r\n                    ? (\r\n                      <p>[답변대기중]</p>\r\n                    )\r\n                    : (\r\n                      <p className=\"commentOk\">[답변완료]</p>\r\n                    )\r\n                }\r\n              </TitleArea>\r\n              <ContentArea>\r\n                <p className=\"content_title\">[문의내용]</p>\r\n                <pre>{questionDetail.content}</pre>\r\n                <p className=\"content_title\">[답변내용]</p>\r\n                {\r\n                  questionDetail.comments.length === 0\r\n                    ? (\r\n                      <p>답변 대기중입니다. 신속히 답변 드리겠습니다.</p>\r\n                    )\r\n                    : (\r\n                      <ul>\r\n                        {\r\n                          comments.map((item: commentInterface) => (\r\n                            <li>\r\n                              <CommentWriter>\r\n                                <h2>작성자 : {item.nickname}</h2>\r\n                                <p>작성일 : {item.writeDate}</p>\r\n                              </CommentWriter>\r\n                              <p>{item.content}</p>\r\n                            </li>\r\n                          ))\r\n                        }\r\n                      </ul>\r\n                    )\r\n                }\r\n              </ContentArea>\r\n            </Content>\r\n          )\r\n      }\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QuestionDetail;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\MyPage.tsx",["444"],"import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from 'react-toasts';\nimport cookie from 'react-cookies';\nimport AppLayout from '../../components/AppLayout';\nimport { postLogoutRequest } from '../signIn/userSlice';\nimport { maketDetailLoadRequest } from '../market/marketSlice';\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1.3em 0;\n`;\n\nconst MyInfo = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  font-size: 4.5vw;\n  margin-bottom: 1em;\n  @media screen and (min-width: 455px) {\n    font-size: 20.484px;   \n  }\n`;\n\nconst ProfileImg = styled.img`\n  width: 4em;\n  height: 4em;\n  margin-right: 0.4em;\n  border: 1.5px solid #ccc;\n  border-radius: 50%;\n`;\n\nconst ProfileText = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MyName = styled.h2`\n  display: flex;\n  align-items: center;\n  font-size: 5.5vw;\n  font-weight: bold;\n  margin-bottom: 0.5em;\n  @media screen and (min-width: 455px) {\n    font-size: 25.036px;\n  }\n`;\n\nconst SpanImg = styled.img`\n width: 1em;\n height: 1em;\n transform: rotate(180deg);\n`;\n\nconst MyDicription = styled.p`\n  font-size: 3vw;\n  @media screen and (min-width: 455px) {\n    font-size: 13.656px;\n  }\n`;\n\nconst ProfileBtn = styled(Link)`\n  display: block;\n  width: 23em;\n  padding: 1em 0;\n  font-size: 3.5vw;\n  text-align: center;\n  background: #fff;\n  border: 1px solid rgba(158, 158, 158, 0.7);\n  margin-bottom: 1em;\n  text-decoration: none;\n  color: #000;\n  @media screen and (min-width: 455px) {\n    font-size: 15.932px;\n  }\n`;\n\nconst MyMenu = styled.ul`\n  display: flex;\n  width: 23em;\n  font-size: 3.5vw;\n  border: 1px solid rgba(158, 158, 158, 0.7);\n  border-radius: 5px;\n  margin-bottom: 3em;\n  @media screen and (min-width: 455px) {\n    font-size: 15.932px;\n  }\n`;\n\nconst MenuImg = styled.img`\n  width: 2.5em;\n  height: 2.5em;\n`;\n\nconst MyMenuItem = styled.li`\n  width: 33.3333%;\n  padding: 1.2em 0;\n  &:not(:last-child):not(:first-child) {\n    border-left: 1px solid rgba(158, 158, 158, 0.7);\n    border-right: 1px solid rgba(158, 158, 158, 0.7);\n  }\n  &:first-child ${MenuImg} {\n    width: 2.2em;\n    height: 2.2em;\n  }\n`;\n\nconst MyMenuLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n`;\n\nconst MenuImgBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 2.5em;\n  height: 2.5em;\n  margin-bottom: 0.6em;\n`;\n\nconst MenuText = styled.p`\n  color: #3162C7;\n  font-weight: bold;\n`;\n\nconst UtilMenuList = styled.ul`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n`;\n\nconst UtilMenuItem = styled.li`\n  display: block;\n  &:not(:last-child) {\n    margin-bottom: 1em;\n  }\n`;\n\nconst UtilLink = styled(Link)`\n  display: block;\n  text-align: center;\n  padding: 1.2em 0;\n  color: #fff;\n  background: #6F96E9;\n  border-radius: 5px;\n  text-decoration: none;\n  font-size: 4vw;\n  font-weight: bold;\n  @media screen and (min-width: 455px) {\n    font-size: 18.2px;\n  }\n`;\n\nconst LogoutButton = styled.button`\n  position: absolute;\n  right: 0.5em;\n  top: 0.5em;\n`;\n\nconst AddMarketSelector = styled.div`\n  z-index: -1;\n  opacity: 0;\n  transform: translateY(20px);\n  transition: opacity 0.5s, transform 0.5s;\n  width: 90%;\n  padding: 2em 1em;\n  position: absolute;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background: #fff;\n  border: 1px solid#808080;\n  border-radius: 10px;\n  & h2 {\n    font-size: 4vw;\n    margin-bottom: 0.7em;\n  }\n  & p {\n    font-size: 3.5vw;\n    margin-bottom: 1em;\n  }\n  @media screen and (min-width: 455px) {\n    width: 407.675px;\n    & h2 {\n      font-size: 18.208px;\n    }\n    & p {\n      font-size: 15.932px;\n    }\n  }\n`;\n\nconst ButtonBox = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 50%;\n  & button {\n    cursor: pointer;\n    font-size: 3.5vw;\n    padding: 0.5em;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    outline: none;\n  }\n  & button.OkButton {\n    background: #3162C7;\n    color: #fff;\n    font-weight: bold;\n  }\n  @media screen and (min-width: 455px) {\n    & button {\n      font-size: 15.932px;\n    }\n  }\n`;\n\nfunction MyPage():JSX.Element {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { user, isLoginSucceed } = useSelector((state: any) => state.userSlice);\n  const { nickname, profileImg, myMarketList } = user;\n  const marketAddBox = useRef<HTMLDivElement>(null);\n\n  const onClickLogout = () => {\n    dispatch(postLogoutRequest({}));\n  };\n\n  const onClickAddmarket = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    e.preventDefault();\n    if (!isLoginSucceed) {\n      ToastsStore.error('로그인이 필요한 서비스입니다.');\n    } else if (marketAddBox.current !== null) {\n      marketAddBox.current.style.opacity = '1';\n      marketAddBox.current.style.transform = 'translateY(0)';\n      marketAddBox.current.style.zIndex = '1';\n    }\n  };\n\n  const closeModal = () => {\n    if (marketAddBox.current !== null) {\n      marketAddBox.current.style.opacity = '0';\n      marketAddBox.current.style.transform = 'translateY(20px)';\n      marketAddBox.current.style.zIndex = '-1';\n    }\n  };\n\n  const onClickLoginCheck = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    if (!isLoginSucceed || cookie.load('REFRESH_TOKEN') === undefined) {\n      e.preventDefault();\n      ToastsStore.error('로그인이 필요한 서비스입니다.');\n    }\n  };\n\n  const onClickPushMarket = () => {\n    dispatch(maketDetailLoadRequest(myMarketList[0]));\n  };\n\n  return (\n    <AppLayout activeId={3}>\n      <Wrapper>\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n        <LogoutButton type=\"button\" onClick={onClickLogout}>로그아웃</LogoutButton>\n        <Layout>\n          <MyInfo>\n            {\n              profileImg !== '' && cookie.load('REFRESH_TOKEN') !== undefined\n                ? <ProfileImg src={profileImg} />\n                : <ProfileImg src=\"/images/icons/init_profile.png\" />\n            }\n            <ProfileText>\n              {\n                nickname !== '' && cookie.load('REFRESH_TOKEN') !== undefined\n                  ? <MyName>{nickname}</MyName>\n                  : (\n                    <>\n                      <MyName style={{ cursor: 'pointer' }} onClick={() => history.push('/')}>로그인/회원가입하기<SpanImg src=\"/images/icons/back.png\" /></MyName>\n                      <MyDicription>로그인 후 더 많은 혜택을 받으세요.</MyDicription>\n                    </>\n                  )\n              }\n            </ProfileText>\n          </MyInfo>\n          <ProfileBtn onClick={onClickLoginCheck} to=\"/mypage/modify\">프로필 수정</ProfileBtn>\n          <MyMenu>\n            <MyMenuItem>\n              <MyMenuLink onClick={onClickLoginCheck} to=\"/mypage/sales\">\n                <MenuImgBox>\n                  <MenuImg src=\"/images/icons/sell_active.png\" />\n                </MenuImgBox>\n                <MenuText>판매내역</MenuText>\n              </MyMenuLink>\n            </MyMenuItem>\n            <MyMenuItem>\n              <MyMenuLink onClick={onClickLoginCheck} to=\"/mypage/purchase\">\n                <MenuImgBox>\n                  <MenuImg src=\"/images/icons/pur_active.png\" />\n                </MenuImgBox>\n                <MenuText>구매내역</MenuText>\n              </MyMenuLink>\n            </MyMenuItem>\n            <MyMenuItem>\n              <MyMenuLink onClick={onClickLoginCheck} to=\"/mypage/wishs\">\n                <MenuImgBox>\n                  <MenuImg src=\"/images/icons/heart_blue.png\" />\n                </MenuImgBox>\n                <MenuText>찜목록</MenuText>\n              </MyMenuLink>\n            </MyMenuItem>\n          </MyMenu>\n          <UtilMenuList>\n            <UtilMenuItem><UtilLink onClick={onClickLoginCheck} to=\"/question\">문의하기</UtilLink></UtilMenuItem>\n            <UtilMenuItem><UtilLink onClick={onClickLoginCheck} to=\"/notice\">공지사항</UtilLink></UtilMenuItem>\n            <UtilMenuItem><UtilLink onClick={onClickLoginCheck} to=\"/review\">한줄평</UtilLink></UtilMenuItem>\n            {\n              myMarketList.length === 0\n                ? <UtilMenuItem><UtilLink onClick={onClickAddmarket} to=\"/addMarket\">나의마켓</UtilLink></UtilMenuItem>\n                : <UtilMenuItem><UtilLink onClick={onClickPushMarket} to={`/market/${myMarketList[0]}`}>나의마켓</UtilLink></UtilMenuItem>\n            }\n          </UtilMenuList>\n        </Layout>\n        <AddMarketSelector ref={marketAddBox}>\n          <h2>등록한 마켓이 없습니다.</h2>\n          <p>마켓을 등록하시겠습니까?</p>\n          <ButtonBox>\n            <button onClick={() => history.push('/addMarket')} className=\"OkButton\" type=\"button\">확인</button>\n            <button onClick={closeModal} type=\"button\">취소</button>\n          </ButtonBox>\n        </AddMarketSelector>\n      </Wrapper>\n    </AppLayout>\n  );\n}\n\nexport default MyPage;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSlice.ts",["445","446","447","448","449"],"import { createSlice } from '@reduxjs/toolkit';\nimport { articleInterface } from '../../interfaces/PostList.interface';\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    bookPost: [],\n    originalPost: null,\n    hasMorePost: true,\n    filtering: { division: 'sales', category: '', title: '' },\n\n    isLoadBookPostLoading: false,\n    isLoadBookPostDone: false,\n    isLoadBookPostError: false,\n\n    isLoadScrollBookPostLoading: false,\n    isLoadScrollPostDone: false,\n    isLoadScrollPostError: null,\n\n    isAddBookPostLoading: false,\n    isAddBookPostDone: false,\n    isAddBookPostError: null,\n\n    isModifyBookPostLoading: false,\n    isModifyBookPostDone: false,\n    isModifyBookPostError: null,\n\n    isDeleteBookPostLoading: false,\n    isDeleteBookPostDone: false,\n    isDeleteBookPostError: null,\n  },\n  reducers: {\n    loadBookPostRequest(state, action) {\n      state.isLoadBookPostLoading = true;\n      state.isLoadScrollBookPostLoading = false;\n      state.hasMorePost = true;\n      state.filtering.division = action.payload.filtering.division;\n      state.filtering.category = action.payload.filtering.category;\n      state.filtering.title = action.payload.filtering.title;\n    },\n    loadBookPostSuccess(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostDone = true;\n      state.bookPost = action.payload.data;\n    },\n    loadBookPostError(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostError = action.payload;\n    },\n    loadScrollBookPostRequest(state, action) {\n      state.isLoadScrollBookPostLoading = true;\n    },\n    loadScrollBookPostSuccess(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostDone = true;\n      state.bookPost = state.bookPost.concat(action.payload.data);\n      state.hasMorePost = action.payload.data.length === 10;\n    },\n    loadScrollBookPostError(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostError = action.payload;\n    },\n    addBookPostRequest(state, action) {\n      state.isAddBookPostLoading = true;\n      state.isAddBookPostDone = false;\n    },\n    addBookPostSuccess(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = true;\n      // state.bookPost = action.payload.data.concat(state.bookPost);\n    },\n    addBookPostError(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = false;\n      state.isAddBookPostError = action.payload.error;\n    },\n    modifyBookPostRequest(state, action) {\n      state.isModifyBookPostLoading = true;\n    },\n    modifyBookPostSuccess(state, action) {\n      state.isModifyBookPostLoading = false;\n      state.isModifyBookPostDone = true;\n      state.originalPost = action.payload.data;\n    },\n    modifyBookPostError(state, action) {\n      state.isModifyBookPostLoading = false;\n      state.isModifyBookPostError = action.payload.error;\n    },\n    deleteBookPostRequest(state, action) {\n      state.isDeleteBookPostLoading = true;\n    },\n    deleteBookPostSuccess(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostDone = true;\n      state.bookPost.filter((post:articleInterface) => post.articleId !== action.payload);\n    },\n    deleteBookPostError(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  loadBookPostRequest,\n  loadBookPostSuccess,\n  loadBookPostError,\n\n  loadScrollBookPostRequest,\n  loadScrollBookPostSuccess,\n  loadScrollBookPostError,\n\n  addBookPostRequest,\n  addBookPostSuccess,\n  addBookPostError,\n\n  modifyBookPostRequest,\n  modifyBookPostSuccess,\n  modifyBookPostError,\n\n  deleteBookPostRequest,\n  deleteBookPostSuccess,\n  deleteBookPostError,\n} = postSlice.actions;\n\nexport default postSlice.reducer;\n",["450","451","452","453","454","455"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\PostActionButton.tsx",[],["456","457","458","459","460","461"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSlice.ts",["462"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst detailViewSlice = createSlice({\n  name: 'detailView',\n  initialState: {\n    detailBookPost: null,\n    isLoadDetailBookPostLoading: false,\n    isLoadDetailBookPostDone: false,\n    isLoadDetailBookPostError: null,\n  },\n  reducers: {\n    loadDetailBookPostRequest(state, action) {\n      state.isLoadDetailBookPostLoading = true;\n    },\n    loadDetailBookPostSuccess(state, action) {\n      state.isLoadDetailBookPostLoading = false;\n      state.isLoadDetailBookPostDone = true;\n      state.detailBookPost = action.payload.data;\n    },\n    loadDetailBookPostError(state, action) {\n      state.isLoadDetailBookPostLoading = false;\n      state.isLoadDetailBookPostError = action.payload;\n    },\n  },\n});\n\nexport const {\n  loadDetailBookPostRequest,\n  loadDetailBookPostSuccess,\n  loadDetailBookPostError,\n} = detailViewSlice.actions;\n\nexport default detailViewSlice.reducer;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts",["463"],"const numberArrayUtill = (num: number) => {\r\n  const result = [];\r\n\r\n  for (let i = 1; i <= num; i++) {\r\n    result.push(i);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport default numberArrayUtill;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\Loading.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImagesZoom.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signUp\\Join.tsx",[],["464","465","466","467","468","469"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts",["470","471","472","473"],"import axios, { AxiosResponse } from 'axios';\nimport { Base64 } from 'js-base64';\nimport { memberInterface, modifyProfileInterface } from '../interfaces/UserInterface';\n\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const SERVER_ERROR = 'SERVER_ERROR';\n\nexport function postLoginAsync(user: { email: string, passwd: string }): Promise<memberInterface> | Promise<AxiosResponse> {\n  return axios({\n    method: 'post',\n    url: '/api/login',\n    params: {\n      email: user.email,\n      passwd: user.passwd,\n    },\n  }).then((result) => {\n    console.log(result);\n    const { nickname, profile_img: profileImg, latitude, longitude, role, articlelist, wishlist, mymarketlist } = result.headers;\n\n    const loginUser: memberInterface = {\n      email: user.email,\n      nickname: Base64.decode(nickname),\n      profileImg,\n      latitude,\n      longitude,\n      role,\n      articles: articlelist === undefined ? [] : JSON.parse(articlelist),\n      wishList: wishlist === undefined ? [] : JSON.parse(wishlist),\n      myMarketList: mymarketlist === undefined ? [] : JSON.parse(mymarketlist),\n    };\n    return loginUser;\n  }).catch((error) => {\n    if (error.response.status === 400) {\n      throw new Error(LOGIN_ERROR);\n    } else if (error.response.status === 500) {\n      throw new Error(SERVER_ERROR);\n    } else {\n      alert('서버에러 관리자 호출');\n    }\n    return error;\n  });\n}\n\nexport function socialLoginAsync(social: string): Promise<boolean> {\n  return axios({\n    method: 'post',\n    url: `/api/oauth2/authorization/${social}`,\n  }).then((result) => true).catch((error) => {\n    if (error.response.status !== 400) {\n      throw new Error('서버 통신 에러');\n    }\n    return false;\n  });\n}\n\nexport function logoutAsync(): Promise<boolean> {\n  return axios({\n    method: 'post',\n    url: '/api/logout',\n  }).then((result) => {\n    console.log(result);\n    return true;\n  }).catch((error) => false);\n}\n\nexport function modifyProfileAsync(modifyProfile: FormData): Promise<AxiosResponse> {\n  return axios({\n    method: 'put',\n    url: '/api/change/profile',\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n    data: modifyProfile,\n  }).then((res) => {\n    console.log(res);\n    const { nickname, profile_img } = res.data.data;\n    return { state: true, nickname: Base64.decode(nickname), profileImg: profile_img };\n  }).catch((error) => {\n    if (error.response.status !== 400) {\n      throw new Error('서버통신에러');\n    }\n    return error;\n  });\n}\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostButton.tsx",[],["474","475","476","477","478","479"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\CategoryMenu.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts",["480"],"import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",["481","482","483","484","485","486"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\ChattingList.tsx",[],["487","488","489","490","491","492"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\Review.tsx",[],["493","494","495","496","497","498"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSlice.ts",["499"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst mySaleArticleSlice = createSlice({\r\n  name: 'myArticle',\r\n  initialState: {\r\n    mySaleArticle: [],\r\n    totalPage: 0,\r\n    isGetMySaleArticlesLoading: false, // 내 판매글 가져오기\r\n    isGetMySaleArticlesSuccess: false,\r\n    isGetMySaleArticlesError: null,\r\n  },\r\n  reducers: {\r\n    getMySaleArticleRequest: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = true;\r\n    },\r\n    getMySaleArticleRequestSuccess: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesSuccess = true;\r\n      state.mySaleArticle = action.payload.myAricleList;\r\n      state.totalPage = action.payload.pageTotal;\r\n    },\r\n    getMySaleArticleRequestError: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getMySaleArticleRequest,\r\n  getMySaleArticleRequestSuccess,\r\n  getMySaleArticleRequestError,\r\n} = mySaleArticleSlice.actions;\r\n\r\nexport default mySaleArticleSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\marketApi.ts",[],["500","501","502","503","504","505"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\mockdata.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts",[],["506","507","508","509","510","511"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImageSlide.tsx",[],["512","513","514","515","516","517"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostView.tsx",["518","519","520"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, RouteComponentProps, useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Spinner from 'react-spinner-material';\nimport { loadDetailBookPostRequest } from './detailViewSlice';\nimport DetailPostContent from './DetailPostContent';\n\ninterface ParamTypes {\n  id: string\n}\n\nconst DetailPostViewContainer = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  margin-bottom: 100px;\n  position: relative;\n`;\nconst Header = styled.div`\n  position: absolute;\n  padding: 10px;\n  & img{\n    width: 30px;\n  }\n  z-index: 5000;\n`;\n\nfunction DetailPostView():JSX.Element {\n  const dispatch = useDispatch();\n\n  const { detailBookPost } = useSelector((state: any) => state.detailViewSlice);\n  const { id } = useParams<ParamTypes>();\n\n  const postIdNumber = Number(id);\n\n  useEffect(() => {\n    dispatch(loadDetailBookPostRequest(postIdNumber));\n  }, [dispatch, postIdNumber]);\n\n  return (\n    <DetailPostViewContainer>\n      <Link to=\"/home\">\n        <Header>\n          <img src=\"/images/icons/back.png\" alt=\"back_icon\" />\n        </Header>\n      </Link>\n      {detailBookPost !== null ? <DetailPostContent id={detailBookPost.articleId} /> : <Spinner color=\"#004c9d\" size={120} visible stroke={10} radius={50} />}\n    </DetailPostViewContainer>\n  );\n}\n\nexport default DetailPostView;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostPage.tsx",["521","522","523"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\WishList.tsx",["524","525","526"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getWishListRequest } from './wishListSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MyWishsItems = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MyWishsItem = styled.div`\r\n  \r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImgBox = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 9em;\r\n  height: 10em;\r\n  margin-right: 1.5em;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: auto;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 2.5vw;\r\n    font-weight: bold;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 2.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 11.38px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 11.38px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 18.208px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction WishList():JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { wishList, totalPage, isGetWishListsError } = useSelector((state: any) => state.myPageSlice.myWishListSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getWishListRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  useEffect(() => {\r\n    if (isGetWishListsError === 'NON_LOGIN') {\r\n      alert('로그인이 필요한 서비스입니다. 로그인 후 더 많은 혜택을 받으세요.');\r\n      history.push('/');\r\n    } else if (isGetWishListsError === 'SERVER_ERROR') {\r\n      alert('서버 통신중 오류 발생');\r\n    }\r\n  }, [isGetWishListsError, history]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>찜목록</h1>\r\n        </Header>\r\n        {\r\n          !totalPage\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>찜한 책이 없습니다.</h2>\r\n                  <p>관심있는 상품을 찜해보아요.</p>\r\n                  <button type=\"button\" onClick={() => history.push('/home')}>판매책 보러가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MyWishsItems>\r\n                  {\r\n                    wishList.map((item: myArticleInterface) => (\r\n                      <MyWishsItem key={item.articleId}>\r\n                        <ItemLink to={`/post/${item.articleId}`}>\r\n                          <ItemImgBox>\r\n                            <ItemImage src={item.thumbnail} />\r\n                          </ItemImgBox>\r\n                          <ItemInfo>\r\n                            <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                            <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                            <h2 className=\"my_title\">{item.title}</h2>\r\n                            <p className=\"my_price\">{item.tprice} 원</p>\r\n                          </ItemInfo>\r\n                        </ItemLink>\r\n                      </MyWishsItem>\r\n                    ))\r\n                  }\r\n                </MyWishsItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/wishs?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/wishs?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/wishs?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            )\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WishList;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myMarket\\AddMyMarket.tsx",["527","528","529","530","531"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport DaumPostCode, { AddressData } from 'react-daum-postcode';\r\nimport { addMarketPostRequest, addMarketRequest } from '../../market/marketSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  font-size: 4.5vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImgBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  width:100%;\r\n  height: 50vw;\r\n  background: #000;\r\n  margin-bottom: 3em;\r\n  @media screen and (min-width: 455px) {\r\n    height: 227.6px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImg = styled.img`\r\n  width: 100%;\r\n  height: 50vw;\r\n  object-fit: cover;\r\n  @media screen and (min-width: 455px) {\r\n    height: 227.6px;\r\n  }\r\n`;\r\n\r\nconst MarketImg = styled.img`\r\n  position: absolute;\r\n  bottom: -2em;\r\n  width: 6em;\r\n  height: 6em;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst InputsBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1em;\r\n`;\r\nconst InputItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1em;\r\n  & label {\r\n    display: block;\r\n    font-size: 3.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & textarea {\r\n    height: 7em;\r\n    resize: none;\r\n    padding: 0.5em 0.5em;\r\n    background: #f9f9f9;\r\n    box-shadow: 3px 3px 10px #c4c4c4;\r\n    border: none;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    font-size: 4vw;\r\n  }\r\n  @media screen and (min-width: 460px) {\r\n    & label {\r\n      font-size: 16.1px;\r\n    }\r\n    & textarea {\r\n      font-size: 18.4px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  font-size: 4vw;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  @media screen and (min-width: 460px) {\r\n    font-size: 18.4px;\r\n  }\r\n`;\r\n\r\nconst InputBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.5em 0.5em;\r\n  background: #f9f9f9;\r\n  box-shadow: 3px 3px 10px #c4c4c4;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst AddressFormBox = styled.div`\r\n  margin-bottom: 1em;\r\n  & label {\r\n    display: block;\r\n    font-size: 3.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & ${InputBox}:not(:last-child) {\r\n    margin-bottom: 1em;\r\n  }\r\n  & ${InputBox} {\r\n    padding: 0.5em;\r\n  }\r\n\r\n  @media screen and (min-width: 460px) {\r\n    & label {\r\n      font-size: 16.1px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddressSearchBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1em;\r\n`;\r\nconst AddressSearchInput = styled.input`\r\n  width: 10em;\r\n  padding: 0.6em 0.5em;\r\n  background: #f9f9f9;\r\n  box-shadow: 3px 3px 10px #c4c4c4;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 5px;\r\n  margin-right: 0.5em;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 460px) {\r\n    font-size: 18.4px;\r\n  }\r\n`;\r\nconst AddressSearchButton = styled.button`\r\n  padding: 0.7em;\r\n  background: #265290;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 5px;\r\n  font-size: 3.5vw;\r\n  @media screen and (min-width: 460px) {\r\n    font-size: 16.1px;\r\n  }\r\n`;\r\n\r\nconst SearchModal = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  display: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #5c5c5c55;\r\n`;\r\n\r\nconst CloseButton = styled.img`\r\n  position: absolute;\r\n  width: 1.5em;\r\n  height: 1.5em;\r\n  top: 0.4em;\r\n  right: 0.4em;\r\n  font-size: 6vw;\r\n  @media screen and (min-width: 460px) {\r\n    font-size: 27.6px;\r\n  }\r\n`;\r\n\r\nconst SubmitButtonBox = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-bottom: 1em;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  width: 90%;\r\n  font-size: 4vw;\r\n  padding: 1em 0;\r\n  color: #fff;\r\n  background: #265290;\r\n  @media screen and (min-width: 460px) {\r\n    font-size: 18.4px;\r\n  }\r\n`;\r\n\r\nfunction MyMarket():JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [imgView, setImgView] = useState<any>('/images/icons/init_market.png');\r\n  const [marketInfo, setMarketInfo] = useState({\r\n    name: '',\r\n    intro: '',\r\n  });\r\n  const [addressInputs, setAddress] = useState({\r\n    zipcode: '',\r\n    baseAddress: '',\r\n    detailAddress: '',\r\n  });\r\n  const [showsModal, setShowsModal] = useState(false);\r\n\r\n  const onChangeMarketImage = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files !== null) {\r\n      const reader = new FileReader();\r\n      const imgFile = e.target.files[0];\r\n      reader.onloadend = () => {\r\n        setImgView(reader.result);\r\n        setFile(imgFile);\r\n      };\r\n      reader.readAsDataURL(imgFile);\r\n    }\r\n  };\r\n\r\n  const onCompleteAddressSelect = (data: AddressData) => {\r\n    const { zonecode, address } = data;\r\n    setAddress({\r\n      ...addressInputs,\r\n      zipcode: zonecode,\r\n      baseAddress: address,\r\n    });\r\n    setShowsModal(false);\r\n  };\r\n\r\n  const onChangeMarketInfo = (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setMarketInfo({\r\n      ...marketInfo,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onChangeDetailAddress = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAddress({\r\n      ...addressInputs,\r\n      detailAddress: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmitAddMarket = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const market = new FormData();\r\n\r\n    if (file === null) {\r\n      alert('마켓이름을 입력해주세요.');\r\n    } else if (marketInfo.intro === '') {\r\n      alert('마켓소개를 입력해주세요.');\r\n    } else if (addressInputs.zipcode === '') {\r\n      alert('주소를 입력해주세요.');\r\n    } else {\r\n      market.append('image', file);\r\n      market.append('name', marketInfo.name);\r\n      market.append('intro', marketInfo.intro);\r\n      market.append('location', `${addressInputs.baseAddress}`);\r\n      dispatch(addMarketPostRequest({ market }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout onSubmit={onSubmitAddMarket}>\r\n      <Header>\r\n        <BackLink to=\"/mypage\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>마켓 등록하기</h1>\r\n      </Header>\r\n      <Content>\r\n        <BackgroundImgBox>\r\n          <BackgroundImg src=\"/images/icons/addMarket_back.jpg\" />\r\n          <MarketImg src={imgView} />\r\n        </BackgroundImgBox>\r\n        <InputsBox>\r\n          <InputItem>\r\n            <label>마켓 이미지</label>\r\n            <input type=\"file\" onChange={onChangeMarketImage} />\r\n          </InputItem>\r\n          <InputItem>\r\n            <label>마켓명</label>\r\n            <InputBox>\r\n              <Input name=\"name\" onChange={onChangeMarketInfo} value={marketInfo.name} type=\"text\" />\r\n            </InputBox>\r\n          </InputItem>\r\n          <InputItem>\r\n            <label>마켓소개</label>\r\n            <textarea name=\"intro\" onChange={onChangeMarketInfo} value={marketInfo.intro} />\r\n          </InputItem>\r\n          <AddressFormBox>\r\n            <label>마켓주소</label>\r\n            <AddressSearchBox>\r\n              <AddressSearchInput disabled value={addressInputs.zipcode} />\r\n              <AddressSearchButton type=\"button\" onClick={() => setShowsModal(true)}>우편번호 검색</AddressSearchButton>\r\n            </AddressSearchBox>\r\n            <InputBox>\r\n              <Input type=\"text\" disabled placeholder=\"상세 주소\" value={addressInputs.baseAddress} />\r\n            </InputBox>\r\n            <InputBox>\r\n              <Input type=\"text\" placeholder=\"나머지 주소\" onChange={onChangeDetailAddress} value={addressInputs.detailAddress} />\r\n            </InputBox>\r\n          </AddressFormBox>\r\n        </InputsBox>\r\n        <SubmitButtonBox>\r\n          <SubmitButton type=\"submit\">마켓 등록하기</SubmitButton>\r\n        </SubmitButtonBox>\r\n        <SearchModal style={{ display: showsModal ? 'flex' : 'none' }}>\r\n          <CloseButton src=\"/images/icons/x.png\" onClick={() => setShowsModal(false)} />\r\n          <DaumPostCode onComplete={onCompleteAddressSelect} />\r\n        </SearchModal>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default MyMarket;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\questionApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\SearchBook.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\modals\\AskModal.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\Market.tsx",["532"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\modifyProfile\\ModifyProfile.tsx",["533","534","535"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from 'react-toasts';\r\nimport styled from 'styled-components';\r\nimport { nicknameDuplicationAsync } from '../../../api/joinApi';\r\nimport { postModifyProfileRequest } from '../../signIn/userSlice';\r\n\r\nconst FormLayout = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 17.216px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n    & h1 {\r\n      font-size: 19.368px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  left: 1em;\r\n  width: 2em;\r\n  height: 2em;\r\n`;\r\n\r\nconst ModifyButton = styled.button`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  font-size: 3vw;\r\n  right: 1em;\r\n  padding: 0.2em 0.7em;\r\n  border: 2px solid #3162C7;\r\n  outline: none;\r\n  border-radius: 50px;\r\n  color: #3162C7;\r\n  background: none;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 12.912px;\r\n  }\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 2.5em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImgBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 11em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImg = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst ProfileImgWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: -1.5em;\r\n  width:5.5em;\r\n  height: 5.5em;\r\n`;\r\n\r\nconst ProfileImgBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  width:5.5em;\r\n  height: 5.5em;\r\n  background: #eee;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ChangeImageButton = styled.button`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 2.5em;\r\n  height: 2.5em;\r\n  right: 0;\r\n  bottom: 0;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 50%;\r\n  background: #000;\r\n  & label {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst ChangeImageButtonImg = styled.img`\r\n  width: 1.5em;\r\n  height: auto;\r\n  font-size: 3vw;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 12.912px;\r\n  }\r\n`;\r\n\r\nconst ProfileImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst InputBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90vw;\r\n  margin-bottom: 2em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 387.350px;\r\n  }\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  & label {\r\n      font-size: 3.5vw;\r\n      margin-bottom: 1em;\r\n  }\r\n\r\n  & p {\r\n      font-size: 3vw;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n      margin-bottom: 1em;\r\n  }\r\n\r\n  @media screen and (min-width: 430px) {\r\n    & label {\r\n      font-size: 15.064px;\r\n    }\r\n    & p {\r\n      font-size: 12.912px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  background:  #fffdfd;\r\n  border-radius: 8px;\r\n  box-shadow: 3px 3px 10px #cecece;\r\n  padding: 0.5em 0;\r\n  margin-bottom: 0.5em;\r\n\r\n  & input {\r\n      font-size: 4vw;\r\n      width: 18em;\r\n      padding: 0 1em;\r\n      background: none;\r\n      border: none;\r\n      outline: none;\r\n  }\r\n\r\n  & img {\r\n      width: 1.5em;\r\n      height: 1.5em;\r\n      margin-right: 1em;\r\n  }\r\n\r\n  @media screen and (min-width: 430px) {\r\n    & input {\r\n      font-size: 17.216px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RemoveBox = styled.div`\r\n    width: 90vw;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    & p {\r\n      font-size: 3.5vw;\r\n      color: gray;\r\n    }\r\n\r\n    & button {\r\n        font-size: 3.8vw;\r\n        font-weight: bold;\r\n        background: none;\r\n        border: none;\r\n        outline: none;\r\n        text-decoration: underline;\r\n    }\r\n\r\n    @media screen and (min-width: 430px) {\r\n      width: 387.35px;\r\n      & p {\r\n        font-size: 15.064px;\r\n      }\r\n      & button {\r\n        font-size: 16.35px;\r\n      }\r\n    }\r\n`;\r\n\r\nfunction ModifyProfile():JSX.Element {\r\n  const { user, isModifyProfileError } = useSelector((state: any) => state.userSlice);\r\n  const { nickname, profileImg } = user;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [modifyInputs, setModifInputs] = useState({\r\n    nickname: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    passwd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    newPasswd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    newPasswdCheck: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n  });\r\n\r\n  const onChangeInuts = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    let passwdChekInput: {\r\n      value: string,\r\n      state: string,\r\n      message: string,\r\n      color: string,\r\n    } = {\r\n      value: '',\r\n      state: '',\r\n      message: '',\r\n      color: '',\r\n    };\r\n\r\n    switch (name) {\r\n      case 'nickname':\r\n        if (value === nickname) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              value,\r\n              state: 'none',\r\n              message: '',\r\n            },\r\n          });\r\n        } else if (value.length < 4) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              value,\r\n              state: 'fail',\r\n              message: '닉네임을 4자 이상 입력해주세요.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n          });\r\n        }\r\n        break;\r\n      case 'passwd':\r\n        setModifInputs({\r\n          ...modifyInputs,\r\n          passwd: {\r\n            ...modifyInputs.passwd,\r\n            value,\r\n            state: 'check',\r\n          },\r\n        });\r\n        break;\r\n      case 'newPasswd':\r\n        if (modifyInputs.newPasswdCheck.value !== '' && modifyInputs.newPasswdCheck.value !== value) {\r\n          passwdChekInput = {\r\n            ...modifyInputs.newPasswdCheck,\r\n            state: 'fail',\r\n            message: '비밀번호가 일치하지 않습니다.',\r\n            color: 'red',\r\n          };\r\n        } else {\r\n          passwdChekInput = {\r\n            ...modifyInputs.newPasswdCheck,\r\n            state: 'check',\r\n            message: '',\r\n          };\r\n        }\r\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              ...modifyInputs.newPasswd,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        } else if (value === '') {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              ...modifyInputs.newPasswd,\r\n              value,\r\n              state: 'none',\r\n              message: '',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              value,\r\n              state: 'fail',\r\n              message: '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.',\r\n              color: 'red',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        }\r\n        break;\r\n      case 'newPasswdCheck':\r\n        if (modifyInputs.newPasswd.value === value) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswdCheck: {\r\n              ...modifyInputs.newPasswdCheck,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswdCheck: {\r\n              value,\r\n              state: 'fail',\r\n              message: '비밀번호가 일치하지 않습니다.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmitModifyProfile = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (modifyInputs.nickname.state === 'fail') {\r\n      ToastsStore.error('닉네임을 확인해주세요.');\r\n    } else if (modifyInputs.passwd.value === '') {\r\n      ToastsStore.error('비밀번호는 반드시 입력해야 합니다.');\r\n    } else if (modifyInputs.newPasswd.state === 'fail') {\r\n      ToastsStore.error('새비밀번호를 확인해주세요.');\r\n    } else if (modifyInputs.newPasswdCheck.state === 'fail') {\r\n      ToastsStore.error('비밀번호가 일치하지 않습니다.');\r\n    } else {\r\n      try {\r\n        const result = await nicknameDuplicationAsync(modifyInputs.nickname.value);\r\n        const formData = new FormData();\r\n        if (imageFileState.file !== null) {\r\n          console.log('프로필이미지 저장');\r\n          formData.append('profile_img', imageFileState.file);\r\n        }\r\n        if (modifyInputs.nickname.value !== '') {\r\n          console.log('닉네임 저장');\r\n          formData.append('nickname', modifyInputs.nickname.value);\r\n        }\r\n        if (modifyInputs.passwd.value !== '') {\r\n          console.log('패스워드 저장');\r\n          formData.append('passwd', modifyInputs.passwd.value);\r\n        }\r\n        if (modifyInputs.newPasswd.value !== '') {\r\n          formData.append('newPasswd', modifyInputs.newPasswd.value);\r\n        }\r\n        if (result) {\r\n          dispatch(postModifyProfileRequest({\r\n            modifyProfile: formData,\r\n          }));\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              state: 'fail',\r\n              message: '이미 사용중인 닉네임입니다.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const [imageFileState, setImageFileState] = useState<{file: File | null, previewURL: any}>({ file: null, previewURL: null });\r\n  const profileImageView = useRef<HTMLImageElement>(null);\r\n\r\n  const onChangeProfileImage = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files !== null) {\r\n      const reader = new FileReader();\r\n      const file = e.target.files[0];\r\n      reader.onloadend = () => {\r\n        setImageFileState({\r\n          ...imageFileState,\r\n          file,\r\n          previewURL: reader.result,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (imageFileState.previewURL !== null) {\r\n      if (profileImageView.current !== null) {\r\n        profileImageView.current.src = imageFileState.previewURL;\r\n      }\r\n    }\r\n  }, [imageFileState.previewURL]);\r\n\r\n  return (\r\n    <FormLayout method=\"post\" onSubmit={onSubmitModifyProfile}>\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n      <Header>\r\n        <BackImg src=\"/images/icons/back.png\" onClick={() => history.push('/mypage')} />\r\n        <h1>프로필 편집</h1>\r\n        <ModifyButton type=\"submit\">완료</ModifyButton>\r\n      </Header>\r\n      <ImageBox>\r\n        <BackgroundImgBox>\r\n          <BackgroundImg src=\"/images/icons/profileBack.png\" />\r\n        </BackgroundImgBox>\r\n        <ProfileImgWrapper>\r\n          <ProfileImgBox>\r\n            <ProfileImg src={profileImg} ref={profileImageView} />\r\n            <ChangeImageButton type=\"button\">\r\n              <label htmlFor=\"profileImage\" />\r\n              <input id=\"profileImage\" accept=\"image/jpg,image/png,image/jpeg\" name=\"file\" style={{ visibility: 'hidden' }} type=\"file\" onChange={onChangeProfileImage} />\r\n              <ChangeImageButtonImg src=\"/images/icons/camera_white.png\" />\r\n            </ChangeImageButton>\r\n          </ProfileImgBox>\r\n        </ProfileImgWrapper>\r\n      </ImageBox>\r\n      <InputBox>\r\n        <InputGroup>\r\n          <label htmlFor=\"nickname\">닉네임</label>\r\n          <Input>\r\n            <input type=\"text\" onChange={onChangeInuts} id=\"nickname\" name=\"nickname\" value={modifyInputs.nickname.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.nickname.color }}>{modifyInputs.nickname.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"passwd\">현재 비밀번호</label>\r\n          <Input>\r\n            <input id=\"passwd\" name=\"passwd\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.passwd.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.passwd.color }}>{modifyInputs.passwd.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"newPasswd\">새 비밀번호</label>\r\n          <Input>\r\n            <input id=\"newPasswd\" name=\"newPasswd\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.newPasswd.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.newPasswd.color }}>{modifyInputs.newPasswd.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"newPasswdCheck\">새 비밀번호 확인</label>\r\n          <Input>\r\n            <input id=\"newPasswdCheck\" name=\"newPasswdCheck\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.newPasswdCheck.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.newPasswdCheck.color }}>{modifyInputs.newPasswdCheck.message}</p>\r\n        </InputGroup>\r\n      </InputBox>\r\n      <RemoveBox>\r\n        <p>회원정보를 삭제하시겠어요?</p>\r\n        <button type=\"button\">회원 탈퇴</button>\r\n      </RemoveBox>\r\n    </FormLayout>\r\n  );\r\n}\r\n\r\nexport default ModifyProfile;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts",["536"],"interface categoryInterface {\n  cid: number, oneDepth: string, twoDepth: string, threeDepth: string, fourDepth: string, fiveDepth: string,\n}\nconst CategoryFormatUtil = (category: categoryInterface) => {\n  const cate = [category.oneDepth, category.twoDepth, category.threeDepth, category.fourDepth, category.fiveDepth];\n  const newCate = [];\n  for (let i = 0; i < cate.length; i++) {\n    if (cate[i] === '') {\n      return newCate.join('>');\n    }\n    newCate.push(cate[i]);\n  }\n  console.log(newCate);\n  return newCate.join('>');\n};\n\nexport default CategoryFormatUtil;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\LoginForm.tsx",["537"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from 'react-toasts';\nimport { postLoginRequest, postLoginRequestError, postLoginRequestSuccess } from './userSlice';\nimport { LOGIN_ERROR, postLoginAsync, SERVER_ERROR } from '../../api/userApi';\n\ninterface inputFormInterface {\n  email: string,\n  passwd: string\n}\n\nconst Form = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.8em;\n`;\n\nconst Input = styled.input`\n  width: 18em;\n  font-size: 4.5vw;\n  padding: 0.8em 1.3em;\n  outline: none;\n  border: 2px solid #3960a688;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px #3960a655;\n  &:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n    padding: 16px 26px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst Button = styled.button`\n  width: 18em;\n  text-align: center;\n  padding: 1em 0;\n  background: #3960a6;\n  font-weight: bold;\n  color: #FFF;\n  font-size: 4.5vw;\n  border: none;\n  border-radius: 200px;\n  outline: none;\n  margin-bottom: 1.2em;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n    padding: 20px 0;\n    margin-bottom: 24px;\n  }\n`;\n\nfunction LoginForm(): JSX.Element {\n  const [inputs, setInputs] = useState<inputFormInterface>({\n    email: '',\n    passwd: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const history = useHistory();\n\n  const onLogin = async (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      const result = await postLoginAsync({ email: inputs.email, passwd: inputs.passwd });\n      console.log(result, 'asdasdsad');\n      dispatch(postLoginRequestSuccess(result));\n      history.push('/home');\n    } catch (error) {\n      dispatch(postLoginRequestError(error.message));\n      if (error.message === LOGIN_ERROR) {\n        ToastsStore.error('로그인 정보를 확인해주세요.');\n      } else if (error.message === SERVER_ERROR) {\n        ToastsStore.error('서버 통신중 에러 발생');\n      }\n    }\n  };\n\n  return (\n    <Form method=\"GET\" onSubmit={onLogin}>\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n      <InputBox>\n        <Input type=\"email\" name=\"email\" placeholder=\"아이디\" value={inputs.email} onChange={handleChange} required />\n        <Input type=\"password\" name=\"passwd\" placeholder=\"비밀번호\" value={inputs.passwd} onChange={handleChange} required />\n      </InputBox>\n      <Button type=\"submit\">로그인</Button>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\ImagePreView.tsx",["538","539"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx",["540","541","542"],"import React from 'react';\nimport { HashRouter, Switch, Route, BrowserRouter } from 'react-router-dom';\nimport NotFound from './components/NotFound';\nimport AddPostPage from './pages/post/addPost/AddPostPage';\nimport DetailPostView from './pages/post/detailPostView/DetailPostView';\nimport PostList from './pages/post/postList/PostList';\nimport GlobalStyle from './styles/GlobalStyles';\nimport ChattingList from './pages/chatting/ChattingList';\nimport Chatting from './pages/chatting/Chatting';\nimport Market from './pages/market/Market';\nimport MarketDetail from './pages/market/MarketDetail';\nimport Login from './pages/signIn/Login';\nimport Join from './pages/signUp/Join';\nimport MyPage from './pages/myPage/MyPage';\nimport ModifyProfile from './pages/myPage/modifyProfile/ModifyProfile';\nimport MySaleArticle from './pages/myPage/mySlaeArticle/MySaleArticle';\nimport MyPurchaseArticle from './pages/myPage/myPurchaseArticle/MyPurchaseArticle';\nimport WishList from './pages/myPage/wishList/WishList';\nimport Notice from './pages/myPage/notice/Notice';\nimport Review from './pages/myPage/review/Review';\nimport Question from './pages/myPage/question/question';\nimport ModifyPost from './pages/post/modifyPost/ModifyPost';\nimport AddQuestion from './pages/myPage/question/AddQuestion';\nimport QuestionDetail from './pages/myPage/question/QuestionDetail';\nimport AddMarket from './pages/myPage/myMarket/AddMyMarket';\nimport ChattingSub from './pages/chatting/ChattingSub';\nimport AdminSignIn from './pages/admin/signIn/AdminSignIn';\nimport AdminHome from './pages/admin/home/AdminHome';\nimport AdminNotice from './pages/admin/notice/AdminNotice';\nimport AdminNoticeDetail from './pages/admin/notice/NoticeDetail';\n\nfunction App():JSX.Element {\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <div>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\" exact component={Login} />\n            <Route path=\"/home\" exact component={PostList} />\n            <Route path=\"/post/:id\" exact component={DetailPostView} />\n            <Route path=\"/addPost/:division/:type\" exact component={AddPostPage} />\n            <Route path=\"/modifyPost/:id\" exact component={ModifyPost} />\n            <Route path=\"/chatting\" exact component={ChattingSub} />\n            <Route path=\"/chatting/:id\" exact component={ChattingSub} />\n            <Route path=\"/market\" exact component={Market} />\n            <Route path=\"/market/:id\" exact component={MarketDetail} />\n            <Route path=\"/join\" exact component={Join} />\n            <Route path=\"/mypage\" exact component={MyPage} />\n            <Route path=\"/mypage/modify\" exact component={ModifyProfile} />\n            <Route path=\"/mypage/sales\" exact component={MySaleArticle} />\n            <Route path=\"/mypage/purchase\" exact component={MyPurchaseArticle} />\n            <Route path=\"/mypage/wishs\" exact component={WishList} />\n            <Route path=\"/notice\" exact component={Notice} />\n            <Route path=\"/review\" exact component={Review} />\n            <Route path=\"/question\" exact component={Question} />\n            <Route path=\"/question/save\" exact component={AddQuestion} />\n            <Route path=\"/question/detail\" exact component={QuestionDetail} />\n            <Route path=\"/addMarket\" exact component={AddMarket} />\n            <Route path=\"/admin\" exact component={AdminSignIn} />\n            <Route path=\"/admin/home\" exact component={AdminHome} />\n            <Route path=\"/admin/notice\" exact component={AdminNotice} />\n            <Route path=\"/admin/notice/:id\" exact component={AdminNoticeDetail} />\n            <Route component={NotFound} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\MyPurchaseArticle.tsx",["543"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getMyPurchaseArticleRequest } from './myPurchaseArticleSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MyPurchaseItems = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MyPurchaseItem = styled.div`\r\n  \r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImgBox = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 9em;\r\n  height: 10em;\r\n  margin-right: 1.5em;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: auto;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 2.5vw;\r\n    font-weight: bold;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 2.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 11.38px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 11.38px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 18.208px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction MyPurchaseArticle():JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { myPurchaseArticle, totalPage } = useSelector((state: any) => state.myPageSlice.myPurchaseArticleSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getMyPurchaseArticleRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>구매목록</h1>\r\n        </Header>\r\n        {\r\n          !totalPage\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>등록한 구매글이 없습니다.</h2>\r\n                  <p>다른 유저들의 책을 구매해보아요.</p>\r\n                  <button type=\"button\" onClick={() => history.push('/addPost/purchase')}>책 구매하러 가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MyPurchaseItems>\r\n                  {\r\n                    myPurchaseArticle.map((item: myArticleInterface) => (\r\n                      <MyPurchaseItem key={item.articleId}>\r\n                        <ItemLink to={`/post/${item.articleId}`}>\r\n                          <ItemImgBox>\r\n                            <ItemImage src={item.thumbnail} />\r\n                          </ItemImgBox>\r\n                          <ItemInfo>\r\n                            <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                            <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                            <h2 className=\"my_title\">{item.title}</h2>\r\n                            <p className=\"my_price\">{item.tprice} 원</p>\r\n                          </ItemInfo>\r\n                        </ItemLink>\r\n                      </MyPurchaseItem>\r\n                    ))\r\n                  }\r\n                </MyPurchaseItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/Purchase?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/Purchase?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/Purchase?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            )\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPurchaseArticle;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSlice.ts",["544"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst wishListSlice = createSlice({\r\n  name: 'myArticle',\r\n  initialState: {\r\n    wishList: [],\r\n    totalPage: 0,\r\n    isGetWishListsLoading: false, // 내 판매글 가져오기\r\n    isGetWishListsSuccess: false,\r\n    isGetWishListsError: null,\r\n  },\r\n  reducers: {\r\n    getWishListRequest: (state, action) => {\r\n      state.isGetWishListsLoading = true;\r\n    },\r\n    getWishListRequestSuccess: (state, action) => {\r\n      state.isGetWishListsLoading = false;\r\n      state.isGetWishListsSuccess = true;\r\n      state.wishList = action.payload.myArticleList;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getWishListRequestError: (state, action) => {\r\n      state.isGetWishListsLoading = false;\r\n      state.isGetWishListsError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getWishListRequest,\r\n  getWishListRequestSuccess,\r\n  getWishListRequestError,\r\n} = wishListSlice.actions;\r\n\r\nexport default wishListSlice.reducer;\r\n",["545","546","547","548","549","550"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSlice.ts",["551"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst myPurchaseArticleSlice = createSlice({\r\n  name: 'myArticle',\r\n  initialState: {\r\n    myPurchaseArticle: [],\r\n    totalPage: 0,\r\n    isGetMyPurchaseArticlesLoading: false, // 내 판매글 가져오기\r\n    isGetMyPurchaseArticlesSuccess: false,\r\n    isGetMyPurchaseArticlesError: null,\r\n  },\r\n  reducers: {\r\n    getMyPurchaseArticleRequest: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = true;\r\n    },\r\n    getMyPurchaseArticleRequestSuccess: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = false;\r\n      state.isGetMyPurchaseArticlesSuccess = true;\r\n      state.myPurchaseArticle = action.payload.myAricleList;\r\n      state.totalPage = action.payload.pageTotal;\r\n    },\r\n    getMyPurchaseArticleRequestError: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = false;\r\n      state.isGetMyPurchaseArticlesError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getMyPurchaseArticleRequest,\r\n  getMyPurchaseArticleRequestSuccess,\r\n  getMyPurchaseArticleRequestError,\r\n} = myPurchaseArticleSlice.actions;\r\n\r\nexport default myPurchaseArticleSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\SocialLogin.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts",["552","553","554"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\write\\Editor.tsx",["555","556"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport ImagePreView from './ImagePreView';\n\ninterface ImageURLInterface {\n  id: string;\n  url: string;\n  image: Blob;\n}\ninterface EditorForm {\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void,\n  onChangePrice: (e: React.ChangeEvent<HTMLInputElement>) => void,\n  onChangeContent: (e: React.ChangeEvent<HTMLTextAreaElement>) => void,\n  onChangeImage: (e: any) => void,\n  onDeleteImage: (imageId: string) => void,\n  price: string,\n  content: string,\n  images: ImageURLInterface[],\n  isLoading: boolean,\n}\nconst FormWrapper = styled.form`\n`;\nconst BookDetailInputWrapper = styled.div`\n  & input {\n    margin: 20px 0;\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n  }\n  & textArea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n    height: 80px;\n    resize: none;\n    overflow: scroll;\n  }\n`;\nconst AddPostButton = styled.button`\n  width: 100%;\n  border: 0;\n  background-color: #3960a6;\n  padding: 10px;\n  margin: 20px 0px;\n  border-radius: 5px;\n  color: white;\n  font-weight: 700;\n`;\n\nfunction Editor({ onSubmit, onChangePrice, onChangeContent, onChangeImage, onDeleteImage, price, content, images, isLoading }: EditorForm): JSX.Element {\n  return (\n    <FormWrapper encType=\"multipart/form-data\" onSubmit={onSubmit}>\n      <ImagePreView onChangeImage={onChangeImage} images={images} onDelete={onDeleteImage} />\n      <BookDetailInputWrapper>\n        <input type=\"text\" pattern=\"[0-9]+\" placeholder=\"₩ 가격입력\" onChange={onChangePrice} value={price} />\n        <textarea onChange={onChangeContent} value={content} placeholder=\"상품설명을 입력하세요\" />\n      </BookDetailInputWrapper>\n      <AddPostButton type=\"submit\" disabled={isLoading}>\n        {isLoading ? <span>등록중입니다</span> : <span>등록하기</span>}\n      </AddPostButton>\n    </FormWrapper>\n  );\n}\n\nexport default Editor;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\Login.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\MySaleArticle.tsx",["557","558"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getMySaleArticleRequest } from './mySaleArticleSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MySaleItems = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MySaleItem = styled.div`\r\n  \r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImgBox = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 9em;\r\n  height: 10em;\r\n  margin-right: 1.5em;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: auto;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 2.5vw;\r\n    font-weight: bold;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 2.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 11.38px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 11.38px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 18.208px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction MySaleArticle():JSX.Element | null {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { mySaleArticle, totalPage, isGetMyPurchaseArticlesLoading } = useSelector((state: any) => state.myPageSlice.mySaleArticleSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getMySaleArticleRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>판매목록</h1>\r\n        </Header>\r\n        {\r\n          (!totalPage\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>등록한 판매글이 없습니다.</h2>\r\n                  <p>다 보신 책들을 나누어 보아요.</p>\r\n                  <button type=\"button\" onClick={() => history.push('/addPost/purchase')}>책 판매하러 가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MySaleItems>\r\n                  {\r\n                    mySaleArticle.map((item: myArticleInterface) => (\r\n                      <MySaleItem key={item.articleId}>\r\n                        <ItemLink to={`/post/${item.articleId}`}>\r\n                          <ItemImgBox>\r\n                            <ItemImage src={item.thumbnail} />\r\n                          </ItemImgBox>\r\n                          <ItemInfo>\r\n                            <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                            <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                            <h2 className=\"my_title\">{item.title}</h2>\r\n                            <p className=\"my_price\">{item.tprice} 원</p>\r\n                          </ItemInfo>\r\n                        </ItemLink>\r\n                      </MySaleItem>\r\n                    ))\r\n                  }\r\n                </MySaleItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/sales?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/sales?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/sales?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            ))\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MySaleArticle;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\modals\\PostDeleteModal.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\Header.tsx",["559"],"import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport CategoryMenu from './CategoryMenu';\nimport { loadBookPostRequest } from '../postSlice';\n\ninterface PostTabItemInterface {\n  tab: number,\n  active: number,\n}\n\nconst HeaderWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n  max-width: 600px;\n  margin: 0 auto;\n  z-index: 50;\n`;\nconst TopWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n  padding: 10px 30px;\n`;\nconst BuggerMenu = styled.button`\n  align-self: center;\n  background-color:white;\n  border: none;\n  & img{\n    width: 30px;\n  }\n`;\nconst LogoWrapper = styled.div`\n  display: flex;  \n  align-items: center;\n  justify-content: center;\n  color: #3960a6;\n  flex-basis: 2;\n  font-size: 25px;\n  & img{\n    height: 40px;\n  }\n`;\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  background-color: #e9e9e9;\n  width: 85%;\n  margin: auto;\n  & input {\n    border:0;\n    width:80%;\n    background-color: inherit;\n  }\n  & img {\n    width: 20px;\n  }\n`;\nconst PostTab = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  margin-top: 5px;\n  border: 1px solid #e9e9e9;\n`;\nconst PostTabItem = styled.li<PostTabItemInterface>`\n  padding: 10px 0;\n  width: 100%;\n  text-align: center;\n  border-bottom: ${(props) => props.tab === props.active && '3px solid #3960a6'};\n`;\n\nfunction Header(): JSX.Element {\n  const dispatch = useDispatch();\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [openMenu, setOpenMenu] = useState(false);\n  const [tabIndex, setTabIndex] = useState(0);\n  const { filtering } = useSelector((state: any) => state.postSlice);\n  const onOpenMenuHandler = useCallback((e : React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setOpenMenu(true);\n  }, []);\n  const onCloseMenuHandler = useCallback(() => {\n    setTabIndex(0);\n    setOpenMenu(false);\n  }, []);\n  const onClickSalePostTab = useCallback(() => {\n    setTabIndex(0);\n    dispatch(loadBookPostRequest({\n      filtering: {\n        division: 'sales',\n        category: filtering.category,\n        title: filtering.title,\n      },\n    }));\n  }, [dispatch, filtering.category, filtering.title]);\n\n  const onClickPurchasPostTab = useCallback(() => {\n    setTabIndex(1);\n    dispatch(loadBookPostRequest({\n      filtering: {\n        division: 'purchase',\n        category: filtering.category,\n        title: filtering.title,\n      },\n    }));\n  }, [dispatch, filtering.category, filtering.title]);\n\n  const onChangeSearchInput = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchKeyword(e.target.value);\n  }, []);\n\n  const onClickSearchButton = useCallback(() => {\n    dispatch(loadBookPostRequest({\n      filtering: {\n        division: filtering.division,\n        category: '',\n        title: searchKeyword,\n      },\n    }));\n  }, [dispatch, filtering.division, searchKeyword]);\n\n  return (\n    <HeaderWrapper>\n      {openMenu && <CategoryMenu onMenuClose={onCloseMenuHandler} />}\n      <TopWrapper>\n        <BuggerMenu onClick={onOpenMenuHandler}>\n          <img src=\"/images/icons/category.png\" alt=\"menu_icon\" />\n        </BuggerMenu>\n        <LogoWrapper>\n          <img src=\"/images/icons/logo.jpeg\" alt=\"logo\" />\n        </LogoWrapper>\n      </TopWrapper>\n      <SearchInput>\n        <input placeholder=\"책 이름을 검색해보세요!\" onChange={onChangeSearchInput} value={searchKeyword} />\n        <button type=\"button\" onClick={onClickSearchButton}>\n          <img src=\"/images/icons/search.png\" alt=\"search_icon\" />\n        </button>\n      </SearchInput>\n      <PostTab>\n        <PostTabItem onClick={() => onClickSalePostTab()} tab={0} active={tabIndex}>판매글</PostTabItem>\n        <PostTabItem onClick={() => onClickPurchasPostTab()} tab={1} active={tabIndex}>구매글</PostTabItem>\n      </PostTab>\n    </HeaderWrapper>\n  );\n}\n\nexport default Header;\n",["560","561","562","563","564","565"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\marketSlice.ts",["566","567","568","569","570","571","572"],"import { createSlice } from '@reduxjs/toolkit';\nimport { marketDetailInterface } from '../../interfaces/MarketInterface';\n\nconst marketSlice = createSlice({\n  name: 'market',\n  initialState: {\n    marketList: [],\n    marketDetail: null,\n    marketPost: [],\n\n    isMaketDetailLoadLoading: false,\n    isMaketDetailLoadDone: false,\n    isMaketDetailLoadError: null,\n\n    isMarketLoadLoading: false,\n    isMarketLoadDone: false,\n    isMarketLoadError: null,\n\n    isMarketPostLoadLoading: false,\n    isMarketPostLoadDone: false,\n    isMarketPostLoadError: null,\n\n    addMarketPostLoading: false,\n    addMarketPostDone: false,\n    addMarketPostError: null,\n\n    addMarketLoading: false,\n    addMarketDone: false,\n    addMarketError: null,\n\n    deleteMarketPostLoading: false,\n    deleteMarketPostDone: false,\n    deleteMarketPostError: null,\n  },\n  reducers: {\n    marketLoadRequest(state) {\n      state.isMarketLoadLoading = true;\n      state.isMarketLoadDone = false;\n    },\n    marketLoadSuccess(state, action) {\n      state.isMarketLoadLoading = false;\n      state.isMarketLoadDone = true;\n      state.marketList = action.payload.data;\n    },\n    marketLoadError(state, action) {\n      state.isMarketLoadLoading = false;\n      state.isMarketLoadDone = false;\n      state.isMarketLoadError = action.payload.error;\n    },\n\n    maketDetailLoadRequest(state, action) {\n      state.isMaketDetailLoadLoading = true;\n      state.isMaketDetailLoadDone = false;\n    },\n    maketDetailLoadSuccess(state, action) {\n      state.isMaketDetailLoadLoading = false;\n      state.isMaketDetailLoadDone = true;\n      state.marketDetail = action.payload.data;\n    },\n    maketDetailLoadError(state, action) {\n      state.isMaketDetailLoadLoading = false;\n      state.isMaketDetailLoadDone = false;\n      state.isMaketDetailLoadError = action.payload.error;\n    },\n\n    maketpostLoadRequest(state, action) {\n      state.isMarketPostLoadLoading = true;\n      state.isMarketPostLoadDone = false;\n    },\n    maketpostLoadSuccess(state, action) {\n      state.isMarketPostLoadLoading = false;\n      state.isMarketPostLoadDone = true;\n      state.marketDetail = action.payload.data;\n    },\n    maketpostLoadError(state, action) {\n      state.isMarketPostLoadLoading = false;\n      state.isMarketPostLoadDone = false;\n      state.isMarketPostLoadError = action.payload.error;\n    },\n\n    addMarketPostRequest(state, action) {\n      state.addMarketPostLoading = true;\n      state.addMarketPostDone = false;\n    },\n    addMarketPostSuccess(state, action) {\n      state.addMarketPostLoading = false;\n      state.addMarketPostDone = true;\n      // state.marketList.concat(action.payload.data);\n    },\n    addMarketPostError(state, action) {\n      state.addMarketPostLoading = false;\n      state.addMarketPostDone = false;\n      state.addMarketPostError = action.payload.error;\n    },\n\n    addMarketRequest(state, action) {\n      state.addMarketLoading = true;\n      state.addMarketDone = false;\n    },\n    addMarketSuccess(state, action) {\n      state.addMarketLoading = false;\n      state.addMarketDone = true;\n    },\n    addMarketError(state, action) {\n      state.addMarketLoading = false;\n      state.addMarketDone = false;\n      state.addMarketError = action.payload.error;\n    },\n\n    deleteMarketPostRequest(state, action) {\n      state.deleteMarketPostLoading = true;\n      state.deleteMarketPostDone = false;\n    },\n    deleteMarketPostSuccess(state, action) {\n      state.deleteMarketPostLoading = false;\n      state.deleteMarketPostDone = true;\n      state.marketList.filter((data: marketDetailInterface) => data.marketId !== action.payload);\n    },\n    deleteMarketPostError(state, action) {\n      state.deleteMarketPostLoading = false;\n      state.deleteMarketPostDone = false;\n      state.deleteMarketPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  marketLoadRequest,\n  marketLoadSuccess,\n  marketLoadError,\n  maketpostLoadRequest,\n  maketpostLoadSuccess,\n  maketpostLoadError,\n  maketDetailLoadRequest,\n  maketDetailLoadSuccess,\n  maketDetailLoadError,\n  addMarketPostRequest,\n  addMarketPostSuccess,\n  addMarketPostError,\n  addMarketRequest,\n  addMarketSuccess,\n  addMarketError,\n} = marketSlice.actions;\n\nexport default marketSlice.reducer;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\AddQuestion.tsx",["573"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\r\nimport styled from 'styled-components';\r\nimport { addQuestionRequestAsync } from '../../../api/questionApi';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  margin-bottom: 1.5em;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  padding: 0 1em;\r\n  & input {\r\n    font-size: 4.5vw;\r\n    margin-bottom: 1.5em;\r\n    padding: 0.5em;\r\n    border: 1px solid #d4d4d4;\r\n    border-radius: 10px;\r\n  }\r\n  & textarea {\r\n    font-size: 4.5vw;\r\n    padding: 1em;\r\n    height: 15em;\r\n    resize: none;\r\n    border: 1px solid #d4d4d4;\r\n    border-radius: 10px;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & input {\r\n      font-size: 20.484px;\r\n    }\r\n    & textarea {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWrap = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n  padding: 2em 1em;\r\n  & button {\r\n      color: #fff;\r\n      border: 1px solid #eee;\r\n      border-radius: 10px;\r\n      background: none;\r\n      font-size: 3.5vw;\r\n      padding: 0.5em 1em;\r\n      margin-left: 1em;\r\n  }\r\n  & button.reset {\r\n    background: #bbbbbb;\r\n  }\r\n  & button.save {\r\n    background: #3960a6;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & button {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContentHeader = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5em;\r\n`;\r\nconst HeaderTextArea = styled.div`\r\n  word-break: keep-all;\r\n  & h2 {\r\n    font-weight: bold;\r\n    line-height: 1.3em;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p {\r\n    color: #5f5f5f;\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\nconst HeaderImgArea = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & img {\r\n    width: 5em;\r\n    height: 5em;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nfunction AddQuestion():JSX.Element {\r\n  const history = useHistory();\r\n  const [questionInputs, setQuestionInputs] = useState({\r\n    title: '',\r\n    content: '',\r\n  });\r\n\r\n  const onChangeInputs = (e: React.ChangeEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setQuestionInputs({\r\n      ...questionInputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onClickReset = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setQuestionInputs({\r\n      title: '',\r\n      content: '',\r\n    });\r\n  };\r\n\r\n  const onSubmitSaveInputs = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (questionInputs.title === '') {\r\n      ToastsStore.error('제목을 입력해주세요.');\r\n    } else if (questionInputs.content === '') {\r\n      ToastsStore.error('내용을 입력해주세요.');\r\n    } else {\r\n      const result = await addQuestionRequestAsync(questionInputs);\r\n      console.log(result);\r\n      if (result.status === 200) {\r\n        ToastsStore.success('문의사항 등록이 완료되었습니다.');\r\n        history.push('/question');\r\n      } else {\r\n        ToastsStore.error('문의사항 등록중 오류가 발생하였습니다.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout onSubmit={onSubmitSaveInputs}>\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n      <Header>\r\n        <BackLink to=\"/question\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>문의사항 작성</h1>\r\n      </Header>\r\n      <Content>\r\n        <ContentHeader>\r\n          <HeaderTextArea>\r\n            <h2>\r\n              코스마켓 이용 중에 생긴<br />\r\n              불편한 점이나 문의사항을<br />\r\n              보내주세요.\r\n            </h2>\r\n            <p>\r\n              확인 후 답변드리겠습니다.\r\n            </p>\r\n          </HeaderTextArea>\r\n          <HeaderImgArea>\r\n            <img src=\"/images/icons/report_img.png\" alt=\"\" />\r\n          </HeaderImgArea>\r\n        </ContentHeader>\r\n        <input onChange={onChangeInputs} id=\"title\" name=\"title\" value={questionInputs.title} type=\"text\" placeholder=\"제목을 입력해주세요.\" />\r\n        <textarea onChange={onChangeInputs} id=\"content\" name=\"content\" value={questionInputs.content} placeholder=\"내용을 입력해주세요.\" />\r\n      </Content>\r\n      <ButtonWrap>\r\n        <button onClick={onClickReset} className=\"reset\" type=\"button\">reset</button>\r\n        <button className=\"save\" type=\"submit\">save</button>\r\n      </ButtonWrap>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddQuestion;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSlice.ts",["574"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { noticeInterface } from '../../../interfaces/NoticeInterface';\r\n\r\nconst initialNoticeList: noticeInterface[] = [];\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    noticeList: initialNoticeList,\r\n    totalPage: 0,\r\n    isGetNoticeLoading: false, // 로그인\r\n    isGetNoticeSucceed: false,\r\n    isGetNoticeError: null,\r\n  },\r\n  reducers: {\r\n    getNoticeRequest: (state, action) => {\r\n      state.isGetNoticeLoading = true;\r\n    },\r\n    getNoticeRequestSuccess: (state, action) => {\r\n      state.isGetNoticeLoading = false;\r\n      state.isGetNoticeSucceed = true;\r\n      state.noticeList = action.payload.data;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getNoticeRequestError: (state, action) => {\r\n      state.isGetNoticeLoading = false;\r\n      state.isGetNoticeError = action.payload;\r\n    },\r\n    toggleActiveNotice: (state, action) => {\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        noticeList: state.noticeList.map((item) => (item.noticeId === action.payload ? { ...item, active: !item.active } : item)),\r\n      };\r\n      console.log();\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getNoticeRequest,\r\n  getNoticeRequestSuccess,\r\n  getNoticeRequestError,\r\n  toggleActiveNotice,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts",[],["575","576","577","578","579","580"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NodataPage.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\modifyPost\\ModifyPost.tsx",["581","582","583","584"],"import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport { modifyBookPostRequest } from '../postSlice';\nimport Editor from '../../../components/write/Editor';\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\nimport ImageFileReaderPromise from '../../../utils/imageFileReader';\n\ninterface ParamTypes {\n  id: string\n}\ninterface ImageURLInterface {\n  id: string;\n  url: string;\n  image: Blob;\n}\nconst AddPostWrapper = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  max-width: 600px;\n`;\nconst AddPostHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 0px;\n  & button {\n    background-color: white;\n    border: 0;\n  }\n`;\nconst Logo = styled.img`\n  width: 40px;\n`;\nconst BookWrapper = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    width: 30%;\n    max-width: 200px;\n  }\n  border: 1px solid #e8e8e8;\n  margin: 10px 0px;\n`;\nconst DeleteImg = styled.img`\n  width: 20px;\n  align-self: flex-start;\n`;\nconst BookDetail = styled.div`\n  margin-left: 20px;\n`;\nconst Category = styled.div`\n  font-size: 12px;\n  margin-bottom: 20px;\n`;\nconst BookTitle = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n  font-weight: 800;\n`;\nconst BookPrice = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n`;\nfunction ModifyPost():JSX.Element {\n  const { detailBookPost } = useSelector((state: any) => state.detailViewSlice);\n\n  const [images, setImages] = useState<ImageURLInterface[]>([]);\n  const [price, setPrice] = useState<string>('');\n  const [content, setContent] = useState<string>('');\n  // const { isModifyBookPostLoading } = useSelector((state: any) => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const ImageFileReader = async (file: Blob) => {\n    try {\n      const image: string = await ImageFileReaderPromise(file);\n      if (images.length < 2) {\n        setImages(images.concat({ id: uuidv4(), url: image, image: file }));\n      } else {\n        ToastsStore.error('최대 두장의 사진만 업로드 가능합니다.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleXButtonClick = () => {\n    history.push('/home');\n  };\n  const handleDeleteImage = useCallback((imageId: string) => {\n    const filteringImageFile = images.filter((image) => image.id !== imageId);\n    setImages([...filteringImageFile]);\n  }, [images]);\n  const handleChangePrice = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPrice(e.target.value);\n  }, []);\n  const handleChangeContent = useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setContent(e.target.value);\n  }, []);\n  const handleChangeImages = (e: any) => {\n    ImageFileReader(e.target.files[0]);\n  };\n  const handleSubmitPost = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData();\n    if (images.length < 2) {\n      ToastsStore.error('최소 두장의 사진이 업로드 되어야합니다');\n      return;\n    }\n    for (let i = 0; i < images.length; i++) {\n      formData.append('file', images[i].image); // 사용자가 등록한 이미지\n    }\n    formData.append('category', CategoryFormatUtil(detailBookPost.category)); // category\n    formData.append('cid', String(detailBookPost.category.cid)); // 알라딘에서 받은 정보\n    formData.append('title', detailBookPost.title); // 알라딘에서 받은 정보\n    formData.append('image', detailBookPost.thumbnail); // 알라딘에서 받은 정보\n    formData.append('rprice', detailBookPost.rprice); // 알라딘에서 받은 정보\n    formData.append('content', content); // 사용자가 입력한 정보\n    formData.append('tprice', price); // 사용자가 입력한 정보\n    formData.append('division', detailBookPost.division); // 사용자가 입력한 정보\n    dispatch(modifyBookPostRequest({ id: detailBookPost.articleId, data: formData }));\n  }, [content, detailBookPost.articleId, detailBookPost.category, detailBookPost.division, detailBookPost.rprice, detailBookPost.thumbnail, detailBookPost.title, dispatch, images, price]);\n  useEffect(() => {\n    setImages(detailBookPost.image);\n    setPrice(detailBookPost.tprice);\n    setContent(detailBookPost.content);\n  }, [detailBookPost.content, detailBookPost.image, detailBookPost.tprice]);\n  return (\n    <AddPostWrapper>\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n      <AddPostHeader>\n        <Logo src=\"/images/icons/logo.jpeg\" alt=\"logo\" />\n        <button type=\"button\" onClick={handleXButtonClick}>\n          <DeleteImg src=\"/images/icons/x.png\" alt=\"x_button\" />\n        </button>\n      </AddPostHeader>\n      <BookWrapper>\n        <img src={detailBookPost.thumbnail} alt=\"thumbnail\" />\n        <BookDetail>\n          <Category>{CategoryFormatUtil(detailBookPost.category)}</Category>\n          <BookTitle>{detailBookPost.title}</BookTitle>\n          <BookPrice>{detailBookPost.rprice} 원</BookPrice>\n        </BookDetail>\n      </BookWrapper>\n      <Editor\n        onSubmit={handleSubmitPost}\n        onChangePrice={handleChangePrice}\n        onChangeContent={handleChangeContent}\n        onChangeImage={handleChangeImages}\n        onDeleteImage={handleDeleteImage}\n        isLoading={false} // 수정필요함\n        content={content}\n        price={price}\n        images={images}\n      />\n    </AddPostWrapper>\n  );\n}\nexport default ModifyPost;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\marketSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\signIn\\LoginForm.tsx",["585","586"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\signIn\\AdminSignIn.tsx",["587","588"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\home\\AdminHome.tsx",["589","590","591","592"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSlice.ts",["593","594","595","596","597","598","599"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { memberInterface } from '../../interfaces/UserInterface';\r\n\r\nconst initialUser: memberInterface = {\r\n  email: '', // 고유번호\r\n  nickname: '', // 닉네임\r\n  profileImg: '', // 프로필 이미지\r\n  latitude: 0, // 위도\r\n  longitude: 0, // 경도\r\n  role: '', // 권한\r\n  articles: [], // 아이디 만\r\n  wishList: [], // 아이디 만\r\n  myMarketList: [],\r\n};\r\n\r\nconst initialUserState = {\r\n  user: initialUser,\r\n  isLoginLoading: false, // 로그인\r\n  isLoginSucceed: false,\r\n  isLoginError: null,\r\n  isLogoutLoading: false, // 로그아웃\r\n  isLogoutSucceed: false,\r\n  isLogoutError: null,\r\n  isModifyProfileLoading: false, // 프로필 수정\r\n  isModifyProfileSuccess: false,\r\n  isModifyProfileError: null,\r\n  isAddWishListLoading: false, // 찜하기\r\n  isAddWishListSuccess: false,\r\n  isAddWishListError: null,\r\n  isRemoveWishListLoading: false, // 찜 해제하기\r\n  isRemoveWishListSuccess: false,\r\n  isRemoveWishListError: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: initialUserState,\r\n  reducers: {\r\n    postLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n    },\r\n    postSocialLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n    },\r\n    postLoginRequestSuccess: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginSucceed = true;\r\n      state.user = action.payload;\r\n    },\r\n    postLoginRequestError: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginSucceed = false;\r\n      state.isLoginError = action.payload;\r\n    },\r\n    postLogoutRequest: (state, action) => {\r\n      state.isLogoutLoading = true;\r\n    },\r\n    postLogoutRequestSuccess: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutSucceed = true;\r\n      state.isLoginSucceed = false;\r\n      state.user = initialUserState.user;\r\n    },\r\n    postLogoutRequestError: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutError = action.payload;\r\n    },\r\n    postModifyProfileRequest: (state, action) => {\r\n      state.isModifyProfileLoading = true;\r\n    },\r\n    postModifyProfileRequestSuccess: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileSuccess = true;\r\n      state.user.nickname = action.payload.nickname;\r\n      state.user.profileImg = action.payload.profileImg;\r\n    },\r\n    postModifyProfileRequestError: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileError = action.payload;\r\n    },\r\n    postAddWishListRequest: (state, action) => {\r\n      state.isAddWishListLoading = true;\r\n    },\r\n    postAddWishListRequestSuccess: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListSuccess = true;\r\n      state.user.wishList = state.user.wishList.concat(action.payload);\r\n    },\r\n    postAddWishListRequestError: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListError = action.payload;\r\n    },\r\n    postRemoveWishListRequest: (state, action) => {\r\n      state.isRemoveWishListLoading = true;\r\n    },\r\n    postRemoveWishListRequestSuccess: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListSuccess = true;\r\n      state.user.wishList = state.user.wishList.filter((item) => (item !== action.payload));\r\n    },\r\n    postRemoveWishListRequestError: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  postModifyProfileRequest,\r\n  postModifyProfileRequestSuccess,\r\n  postModifyProfileRequestError,\r\n  postAddWishListRequest,\r\n  postAddWishListRequestSuccess,\r\n  postAddWishListRequestError,\r\n  postRemoveWishListRequest,\r\n  postRemoveWishListRequestSuccess,\r\n  postRemoveWishListRequestError,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSaga.ts",["600"],"import { PayloadAction } from '@reduxjs/toolkit';\nimport { all, takeLatest, put, fork, call } from 'redux-saga/effects';\nimport { loadDetailBookPostRequest, loadDetailBookPostSuccess, loadDetailBookPostError } from './detailViewSlice';\n\nimport { getBookPostDetailViewAPI, modifyBookPostAPI } from '../../../api/postBookApi';\n\nfunction* loadDetailBookPost(action: PayloadAction<number>) {\n  try {\n    const result = yield call(getBookPostDetailViewAPI, action.payload);\n    yield put(loadDetailBookPostSuccess(result.data));\n  } catch (error) {\n    yield put(loadDetailBookPostError({ error }));\n  }\n}\nfunction* watchloadDetailBookPost() {\n  yield takeLatest(loadDetailBookPostRequest, loadDetailBookPost);\n}\n\nexport default function* postSaga():Generator {\n  yield all([\n    fork(watchloadDetailBookPost),\n  ]);\n}\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\notice\\AdminNotice.tsx",["601"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\notice\\NoticeDetail.tsx",["602"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from 'react-toasts';\r\nimport styled from 'styled-components';\r\nimport { modifyNoticeRequestAsync, reomveNoticeRequestAsync } from '../../../api/noticeApi';\r\nimport { getNoticeDetailRequest } from '../adminSlice';\r\n\r\nconst Layout = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #ccc;\r\n  padding: 1em 0;\r\n  & h1 {\r\n    font-size: 6vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n    font-size: 27.312px;\r\n  }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: auto;\r\n  & ul {\r\n    width: 100%;\r\n  }\r\n  & li {\r\n    width: 100%;\r\n    padding: 1em;\r\n    border-top: 1px solid #ccc;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  & li h2 {\r\n    font-size: 3.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & li p {\r\n    font-size: 3vw;\r\n  }\r\n  & li:not(:last-child) {\r\n    margin-bottom: 1em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & li h2 {\r\n      font-size: 15.932px;\r\n    }\r\n    & li p {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TitleArea = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5em 1em;\r\n  border-bottom: 1px solid #ccc;\r\n  & h2, & input {\r\n    font-size: 3.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p {\r\n    font-size: 3vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h2, & input {\r\n      font-size: 15.932px;\r\n    }\r\n    & p {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.div`\r\n  padding: 1em;\r\n  height: 100%;\r\n  & pre, & textarea {\r\n      width: 100%;\r\n      height: 100%;\r\n      padding: 1em;\r\n      border: 1px solid #ccc;\r\n      overflow: auto;\r\n      word-break: keep-all;\r\n      white-space: pre-wrap;\r\n      font-size: 3.5vw;\r\n  }\r\n  & textarea {\r\n    resize: none;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & pre, & textarea {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonBox = styled.div`\r\n  width: 100%;\r\n  padding: 1em;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  & button {\r\n    cursor: pointer;\r\n    padding: 0.5em 1em;\r\n    font-size: 3.5vw;\r\n    color: #fff;\r\n    border: 1px solid #a3c3ff;\r\n    border-radius: 5px;\r\n    &.delete {\r\n      background: #395fa655;\r\n    }\r\n    &.modify {\r\n      background: #fff;\r\n      color: #3960a6;\r\n      margin-right: 1em;\r\n    }\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & button {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DeleteModal = styled.div`\r\n  position: absolute;\r\n  width: 80%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1.5em 0;\r\n  background: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  & p {\r\n    font-size: 4.5vw;\r\n    padding: 0.5em 0;\r\n  }\r\n  & button {\r\n    cursor: pointer;\r\n    padding: 0.5em 1em;\r\n    font-size: 3.5vw;\r\n    color: #fff;\r\n    border: 1px solid #a3c3ff;\r\n    border-radius: 5px;\r\n    &.delete {\r\n      background: #395fa655;\r\n    }\r\n    &.modify {\r\n      background: #fff;\r\n      color: #3960a6;\r\n      margin-right: 1em;\r\n    }\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p {\r\n      font-size: 20.484px;\r\n    }\r\n    & button {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalButtonBox = styled.div``;\r\n\r\nfunction AdminNoticeDetail():JSX.Element {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { id: idParam } = useParams<{ id: string }>();\r\n  const [isModify, setIsModify] = useState(false);\r\n  const [isModalVisable, setIsModalVisable] = useState(false);\r\n  const { noticeDetail } = useSelector((state) => state.adminSlice);\r\n  const { title, content, noticeId } = noticeDetail;\r\n  const [inputs, setInputs] = useState({\r\n    title,\r\n    content,\r\n  });\r\n\r\n  const onchangeInputs = (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onClickModifyMode = () => {\r\n    if (isModify) {\r\n      setInputs({\r\n        title,\r\n        content,\r\n      });\r\n    }\r\n\r\n    setIsModify(!isModify);\r\n  };\r\n\r\n  const onClickModify = async () => {\r\n    console.log(`${idParam}번 수정하기`);\r\n    const formData = new FormData();\r\n    formData.append('noticeId', noticeId);\r\n    formData.append('title', inputs.title);\r\n    formData.append('content', inputs.content);\r\n    try {\r\n      const result = await modifyNoticeRequestAsync(formData);\r\n      if (result.status === 200) {\r\n        dispatch(getNoticeDetailRequest({\r\n          ...noticeDetail,\r\n          title: inputs.title,\r\n          content: inputs.content,\r\n        }));\r\n        ToastsStore.success('공지사항 수정이 완료되었습니다.');\r\n        setIsModify(!isModify);\r\n      }\r\n    } catch (error) {\r\n      setIsModalVisable(false);\r\n      ToastsStore.error('서버에러 또는 권한 불충분');\r\n      setIsModify(!isModify);\r\n    }\r\n  };\r\n\r\n  const onClickDelete = async () => {\r\n    console.log(`${idParam}번 삭제하기`);\r\n    try {\r\n      const result = await reomveNoticeRequestAsync(noticeId);\r\n      if (result.status === 200) {\r\n        history.push('/admin/notice');\r\n        ToastsStore.success('공지사항 삭제가 완료되었습니다.');\r\n      }\r\n    } catch (error) {\r\n      setIsModalVisable(false);\r\n      ToastsStore.error('서버에러 또는 권한 불충분');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n      <Header>\r\n        <BackLink to=\"/admin/notice\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>공지사항 관리</h1>\r\n      </Header>\r\n      <Content>\r\n        {\r\n          isModify\r\n            ? (\r\n              <>\r\n                <TitleArea>\r\n                  <input onChange={onchangeInputs} type=\"text\" name=\"title\" value={inputs.title} />\r\n                  <p>2021.03.02</p>\r\n                </TitleArea>\r\n                <TextArea>\r\n                  <textarea onChange={onchangeInputs} name=\"content\" value={inputs.content} />\r\n                </TextArea>\r\n                <ButtonBox>\r\n                  <button onClick={onClickModifyMode} className=\"modify\" type=\"button\">취소</button>\r\n                  <button onClick={onClickModify} className=\"delete\" type=\"button\">수정하기</button>\r\n                </ButtonBox>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <TitleArea>\r\n                  <h2>{title}.</h2>\r\n                  <p>2021.03.02</p>\r\n                </TitleArea>\r\n                <TextArea>\r\n                  <pre>\r\n                    {content}\r\n                  </pre>\r\n                </TextArea>\r\n                <ButtonBox>\r\n                  <button onClick={onClickModifyMode} className=\"modify\" type=\"button\">수정</button>\r\n                  <button onClick={() => setIsModalVisable(true)} className=\"delete\" type=\"button\">삭제</button>\r\n                </ButtonBox>\r\n              </>\r\n            )\r\n        }\r\n      </Content>\r\n      {\r\n        isModalVisable\r\n          ? (\r\n            <DeleteModal>\r\n              <p>정말 삭제하시겠습니까?</p>\r\n              <ModalButtonBox>\r\n                <button onClick={() => setIsModalVisable(false)} className=\"modify\" type=\"button\">취소</button>\r\n                <button onClick={onClickDelete} className=\"delete\" type=\"button\">삭제</button>\r\n              </ModalButtonBox>\r\n            </DeleteModal>\r\n          )\r\n          : null\r\n      }\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AdminNoticeDetail;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\adminSlice.ts",["603","604","605"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { adminMarketRequestInterface, adminNoticeInterface, adminReportInterface } from '../../interfaces/AdminInterface';\r\n\r\nconst noticeList: adminNoticeInterface[] = [];\r\nconst marketRequestList: adminMarketRequestInterface[] = [];\r\nconst reportList: adminReportInterface[] = [];\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'admin',\r\n  initialState: {\r\n    noticeList,\r\n    noticeTotalPage: 0,\r\n    noticeDetail: {\r\n      noticeId: '',\r\n      title: '',\r\n      content: '',\r\n      writeDate: '',\r\n    },\r\n    marketRequestList,\r\n    reportList,\r\n    isAdminLoginLoading: false,\r\n    isAdminLoginSuccess: false,\r\n    isAdminLoginError: null,\r\n    isGetNoticeLoading: false,\r\n    isGetNoticeSuccess: false,\r\n    isGetNoticeError: null,\r\n    isGetNoticeDetailLoading: false,\r\n    isGetNoticeDetailSuccess: false,\r\n    isGetNoticeDetailError: null,\r\n  },\r\n  reducers: {\r\n    adminLoginRequest: (state, action) => {\r\n      state.isAdminLoginLoading = true;\r\n      state.isAdminLoginSuccess = false;\r\n      state.isAdminLoginError = null;\r\n    },\r\n    adminLoginRequestSuccess: (state, action) => {\r\n      state.isAdminLoginLoading = false;\r\n      state.isAdminLoginSuccess = true;\r\n      state.isAdminLoginError = null;\r\n    },\r\n    adminLoginRequestError: (state, action) => {\r\n      state.isAdminLoginLoading = false;\r\n      state.isAdminLoginSuccess = false;\r\n      state.isAdminLoginError = action.payload;\r\n    },\r\n    getNoticeRequest: (state, action) => {\r\n      state.isGetNoticeLoading = true;\r\n      state.isGetNoticeSuccess = false;\r\n      state.isGetNoticeError = null;\r\n    },\r\n    getNoticeRequestSuccess: (state, action) => {\r\n      state.isGetNoticeLoading = false;\r\n      state.isGetNoticeSuccess = true;\r\n      state.isGetNoticeError = null;\r\n      state.noticeTotalPage = action.payload.totalPage;\r\n      state.noticeList = action.payload.data;\r\n    },\r\n    getNoticeRequestError: (state, action) => {\r\n      state.isGetNoticeLoading = false;\r\n      state.isGetNoticeSuccess = false;\r\n      state.isGetNoticeError = action.payload;\r\n    },\r\n    getNoticeDetailRequest: (state, action) => {\r\n      state.isGetNoticeDetailLoading = true;\r\n      state.isGetNoticeDetailSuccess = false;\r\n      state.isGetNoticeDetailError = null;\r\n      state.noticeDetail = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  adminLoginRequest,\r\n  adminLoginRequestSuccess,\r\n  adminLoginRequestError,\r\n  getNoticeRequest,\r\n  getNoticeRequestSuccess,\r\n  getNoticeRequestError,\r\n  getNoticeDetailRequest,\r\n} = adminSlice.actions;\r\n\r\nexport default adminSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\admin\\adminSaga.ts",["606","607"],"import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { all, call, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport { getNoticeRequestAsync } from '../../api/noticeApi';\r\nimport {\r\n  adminLoginRequest,\r\n  adminLoginRequestSuccess,\r\n  adminLoginRequestError,\r\n  getNoticeRequest,\r\n  getNoticeRequestSuccess,\r\n  getNoticeRequestError,\r\n} from './adminSlice';\r\n\r\nfunction* adminLogin(action: PayloadAction<{ email: string, passwd: string }>) {\r\n  try {\r\n    yield console.log(action);\r\n  } catch (error) {\r\n    yield put({\r\n      type: adminLoginRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* getNotice(action: PayloadAction<number>) {\r\n  try {\r\n    const result = yield getNoticeRequestAsync(action.payload);\r\n    console.log(result);\r\n    yield put({\r\n      type: getNoticeRequestSuccess,\r\n      payload: result,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: getNoticeRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAdminLogin(): Generator {\r\n  yield takeLatest(adminLoginRequest, adminLogin);\r\n}\r\n\r\nfunction* watchGetNotice(): Generator {\r\n  yield takeLatest(getNoticeRequest, getNotice);\r\n}\r\n\r\nexport default function* noticeSaga(): Generator {\r\n  yield all([\r\n    fork(watchAdminLogin),\r\n    fork(watchGetNotice),\r\n  ]);\r\n}\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\Notice.tsx",["608"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { noticeInterface } from '../../../interfaces/NoticeInterface';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getNoticeRequest, toggleActiveNotice } from './noticeSlice';\r\n\r\nconst Layout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  margin-bottom: 1.5em;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n    font-size: 20.484px;\r\n  }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst NoticeList = styled.ul`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst NoticeItem = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 1px solid #e0e0e0;\r\n`;\r\n\r\nconst NoticeTitleBox = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5em 1.5em;\r\n`;\r\n\r\nconst NoticeText = styled.div`\r\n  & h2 {\r\n    font-size: 3.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p {\r\n    font-size: 3vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 15.932px;\r\n    }\r\n    & p {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DetailButton = styled.button`\r\n  cursor: pointer;\r\n  font-size: 3vw;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  & img {\r\n      width: 1em;\r\n      height: 1em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 13.656px;\r\n  }\r\n`;\r\n\r\nconst NoticeDetail = styled.div`\r\n  padding: 0 1.6em;\r\n  overflow: hidden;\r\n  transition: 0.5s;\r\n  font-size: 0.8em;\r\n`;\r\n\r\nconst PaginationBox = styled.div`\r\n  display: flex;\r\n  padding: 1.5em 0;\r\n  & img {\r\n    cursor: pointer;\r\n    width: 1em;\r\n    height: 1em;\r\n  }\r\n`;\r\n\r\nconst PrevPage = styled.img``;\r\n\r\nconst PageNumbers = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst PageNumber = styled.div`\r\n`;\r\n\r\nconst PageLink = styled(Link)`\r\n  padding: 0 0.5em;\r\n`;\r\n\r\nconst NextPage = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Notice():JSX.Element {\r\n  const [page, setPage] = useState<number>(0);\r\n  const dispatch = useDispatch();\r\n  const { noticeList, totalPage } = useSelector((state: any) => state.myPageSlice.noticeSlice);\r\n\r\n  useEffect(() => {\r\n    dispatch(getNoticeRequest(page));\r\n  }, [page, dispatch]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <BackLink to=\"/mypage\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>공지사항</h1>\r\n      </Header>\r\n      {\r\n        !totalPage\r\n          ? (\r\n            <>\r\n              <EmptyArticle>\r\n                <h2>등록된 공지사항이 없습니다.</h2>\r\n              </EmptyArticle>\r\n            </>\r\n          )\r\n          : (\r\n            <NoticeList>\r\n              {\r\n                noticeList.map((notice: noticeInterface) => (\r\n                  <NoticeItem key={notice.noticeId}>\r\n                    <NoticeTitleBox>\r\n                      <NoticeText>\r\n                        <h2>{notice.title}</h2>\r\n                        <p>{notice.writeDate}</p>\r\n                      </NoticeText>\r\n                      <DetailButton onClick={() => dispatch(toggleActiveNotice(notice.noticeId))}>\r\n                        <img src=\"/images/icons/back.png\" alt=\"\" style={{ transform: notice.active ? 'rotate(90deg)' : 'rotate(-90deg)' }} />\r\n                      </DetailButton>\r\n                    </NoticeTitleBox>\r\n                    <NoticeDetail style={{ height: notice.active ? 'auto' : '0', padding: notice.active ? '1em 1.5em' : '0 1.5em' }}>\r\n                      <p>\r\n                        {notice.content}\r\n                      </p>\r\n                    </NoticeDetail>\r\n                  </NoticeItem>\r\n                ))\r\n              }\r\n            </NoticeList>\r\n          )\r\n      }\r\n      <PaginationBox>\r\n        <PrevPage src=\"/images/icons/back.png\" />\r\n        <PageNumbers>\r\n          {\r\n            !totalPage\r\n              ? (\r\n                <PageNumber>\r\n                  <PageLink to=\"/notice\">1</PageLink>\r\n                </PageNumber>\r\n              )\r\n              : (\r\n                <>\r\n                  {\r\n                    numberArrayUtill(totalPage).map((i) => (\r\n                      <PageNumber>\r\n                        <PageLink onClick={() => setPage(i - 1)} to={`/notice?page=${i - 1}`}>{i}</PageLink>\r\n                      </PageNumber>\r\n                    ))\r\n                  }\r\n                </>\r\n              )\r\n          }\r\n        </PageNumbers>\r\n        <NextPage src=\"/images/icons/back.png\" />\r\n      </PaginationBox>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Notice;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSlice.ts",["609","610"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { questionInterface } from '../../../interfaces/Question.inteface';\r\n\r\nconst initialquestionList: questionInterface[] = [];\r\nconst initailQuestDetail = {\r\n  questionId: '',\r\n  title: '',\r\n  content: '',\r\n  comments: [],\r\n  totalPage: 0,\r\n};\r\n\r\nconst questionSlice = createSlice({\r\n  name: 'question',\r\n  initialState: {\r\n    questionList: initialquestionList,\r\n    totalPage: 0,\r\n    detailId: null,\r\n    questionDetail: initailQuestDetail,\r\n    isGetQuestionLoading: false,\r\n    isGetQuestionSucceed: false,\r\n    isGetQuestionError: null,\r\n    isGetQuestionDetailLoading: false,\r\n    isGetQuestioDetailSucceed: false,\r\n    isGetQuestionDetailError: null,\r\n  },\r\n  reducers: {\r\n    getQuestionRequest: (state, action) => {\r\n      state.isGetQuestionLoading = true;\r\n      state.isGetQuestionSucceed = false;\r\n      state.isGetQuestionDetailError = null;\r\n    },\r\n    getQuestionRequestSuccess: (state, action) => {\r\n      state.isGetQuestionLoading = false;\r\n      state.isGetQuestionSucceed = true;\r\n      state.questionList = action.payload.data;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getQuestionRequestError: (state, action) => {\r\n      state.isGetQuestionLoading = false;\r\n      state.isGetQuestionError = action.payload;\r\n    },\r\n    setDeatilId: (state, action) => {\r\n      state.detailId = action.payload;\r\n    },\r\n    getQuestionDetailRequest: (state, action) => {\r\n      state.isGetQuestionDetailLoading = true;\r\n      state.isGetQuestioDetailSucceed = false;\r\n      state.isGetQuestionDetailError = null;\r\n    },\r\n    getQuestionDetailRequestSuccess: (state, action) => {\r\n      state.isGetQuestionDetailLoading = false;\r\n      state.isGetQuestioDetailSucceed = true;\r\n      state.questionDetail = action.payload.data;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getQuestionDetailRequestError: (state, action) => {\r\n      state.isGetQuestionDetailLoading = false;\r\n      state.isGetQuestionDetailError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getQuestionRequest,\r\n  getQuestionRequestSuccess,\r\n  getQuestionRequestError,\r\n  setDeatilId,\r\n  getQuestionDetailRequest,\r\n  getQuestionDetailRequestSuccess,\r\n  getQuestionDetailRequestError,\r\n} = questionSlice.actions;\r\n\r\nexport default questionSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\InfiniteScrollList.tsx",["611","612"],"import React from 'react';\nimport { List, AutoSizer } from 'react-virtualized';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\nimport { loadScrollBookPostRequest } from '../postSlice';\nimport NodataPage from '../../../components/NodataPage';\n\ninterface IndexInterface {\n  index: number;\n  style?: any;\n}\ninterface OnScrollParams {\n  clientHeight: number;\n  clientWidth: number;\n  scrollHeight: number;\n  scrollLeft: number;\n  scrollTop: number;\n  scrollWidth: number;\n}\nconst ListWrapper = styled.div`\n  display: flex;\n  max-width: 100%;\n  flex-wrap: wrap;\n  overflow: hidden;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 200px;\n  flex-basis: 50%;\n  padding:10px;\n  border-top: 1px solid #e8e8e8;\n  & img {\n    width: 150px;\n    height: 150px;\n    border-radius: 10px;\n  }\n`;\nconst ContentExplanation = styled.div`\n  padding: 0px 20px;\n  & h3 {\n    overflow:hidden;\n    padding: 10px 0px;\n  }\n`;\nconst Categoty = styled.div`\n  font-size: 9px;\n`;\nfunction InfiniteScrollList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, hasMorePost, isLoadScrollBookPostLoading } = useSelector((state: any) => state.postSlice);\n  const scrollListener = (params:OnScrollParams) => {\n    if (params.scrollTop + params.clientHeight >= params.scrollHeight - 300) {\n      if (hasMorePost && !isLoadScrollBookPostLoading) {\n        const LastId = bookPost[bookPost.length - 1].articleId;\n        dispatch(loadScrollBookPostRequest({ lastId: LastId }));\n      }\n    }\n  };\n\n  const rowRanderer = ({ index, style }: IndexInterface) => {\n    const post = bookPost[index];\n    return (\n      <div style={style}>\n        <NavLink to={`post/${post.articleId}`}>\n          <Content key={post.articleId}>\n            <img src={post.image} alt=\"\" />\n            <ContentExplanation>\n              <Categoty>{CategoryFormatUtil(post.category)}</Categoty>\n              <h3>{post.title}</h3>\n              <h3>{post.tprice}원</h3>\n            </ContentExplanation>\n          </Content>\n        </NavLink>\n      </div>\n    );\n  };\n\n  return (\n    <ListWrapper>\n      {bookPost.length !== 0\n        ? (\n          <AutoSizer disableHeight>\n            {({ width }) => (\n              <List\n                rowCount={bookPost.length} // 항목의 개수\n                height={600} // 실제 렌더링 되는 높이범위\n                rowHeight={200} // 항목의높이\n                width={width} // 항목의 너비\n                rowRenderer={rowRanderer} // 항목렌더링할때쓰는 함수\n                onScroll={scrollListener} // scroll 함수\n                overscanRowCount={10} // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\n              />\n            )}\n          </AutoSizer>\n        )\n        : <NodataPage />}\n    </ListWrapper>\n  );\n}\n\nexport default InfiniteScrollList;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\question.tsx",["613"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\timeForToday.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NotFound.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\ChattingSub.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishsApi.ts",["614","615","616","617"],"import axios from 'axios';\r\n\r\nexport const addWishs = (articleId: string): Promise<boolean> => (\r\n  axios({\r\n    method: 'post',\r\n    url: '/api/wish/save',\r\n    params: {\r\n      articleId,\r\n    },\r\n  }).then((res) => true).catch((error) => false)\r\n);\r\n\r\nexport const removeWishs = (articleId: string): Promise<boolean> => (\r\n  axios({\r\n    method: 'post',\r\n    url: '/api/wish/delete',\r\n    params: {\r\n      articleId,\r\n    },\r\n  }).then((res) => true).catch((error) => false)\r\n);\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSlice.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSaga.ts",["618"],"import { all, call, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  logoutAsync,\r\n  modifyProfileAsync,\r\n  postLoginAsync,\r\n  socialLoginAsync,\r\n} from '../../api/userApi';\r\nimport {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  postModifyProfileRequest,\r\n  postAddWishListRequest,\r\n  postRemoveWishListRequest,\r\n  postModifyProfileRequestError,\r\n  postModifyProfileRequestSuccess,\r\n  postAddWishListRequestSuccess,\r\n  postRemoveWishListRequestSuccess,\r\n  postAddWishListRequestError,\r\n  postRemoveWishListRequestError,\r\n} from './userSlice';\r\nimport { modifyProfileInterface } from '../../interfaces/UserInterface';\r\nimport { addWishs, removeWishs } from '../../api/wishsApi';\r\nimport { push } from '../../utils/historyUtil';\r\n\r\nfunction* postLoginRequestSaga(action: { payload: { user: { email: string, passwd: string } } }) {\r\n  try {\r\n    const loginUser = yield call(postLoginAsync, action.payload.user);\r\n    console.log(loginUser, 'asdaksldlsajdklasjdlkajkdl');\r\n    if (loginUser.nickname) {\r\n      yield put({\r\n        type: postLoginRequestSuccess,\r\n        payload: {\r\n          ...loginUser,\r\n          email: action.payload.user.email,\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postSocialLoginRequestSaga(action: { payload: { social: string } }) {\r\n  try {\r\n    const result = yield call(socialLoginAsync, action.payload.social);\r\n\r\n    if (result) {\r\n      yield put({\r\n        type: postLoginRequestSuccess,\r\n        payload: 'social',\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: postLoginRequestError,\r\n        payload: '소셜 로그인 실패',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postLogoutRequestSaga() {\r\n  try {\r\n    yield call(logoutAsync);\r\n    yield put({\r\n      type: postLogoutRequestSuccess,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLogoutRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postModifyProfileRequestSaga(action: {payload: {modifyProfile: FormData}}) {\r\n  try {\r\n    console.log(action.payload.modifyProfile);\r\n    const result = yield call(modifyProfileAsync, action.payload.modifyProfile);\r\n\r\n    if (result.state) {\r\n      yield put({\r\n        type: postModifyProfileRequestSuccess,\r\n        payload: { nickname: result.nickname, profileImg: result.profileImg },\r\n      });\r\n      yield call(push, '/mypage');\r\n    } else {\r\n      yield put({\r\n        type: postModifyProfileRequestError,\r\n        payload: '비밀번호 불일치',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: postModifyProfileRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postAddWishListRequestSaga(action: {payload: string }) {\r\n  try {\r\n    const result = yield addWishs(action.payload);\r\n    if (result) {\r\n      yield put({\r\n        type: postAddWishListRequestSuccess,\r\n        payload: action.payload,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: postAddWishListRequestError,\r\n        paylose: '서버 통신 에러',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* postRemoveWishListRequestSaga(action: {payload: string}) {\r\n  try {\r\n    const result = yield removeWishs(action.payload);\r\n    if (result) {\r\n      yield put({\r\n        type: postRemoveWishListRequestSuccess,\r\n        payload: action.payload,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: postRemoveWishListRequestError,\r\n        paylose: '서버 통신 에러',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* watchLogin(): Generator {\r\n  yield takeLatest(postLoginRequest, postLoginRequestSaga);\r\n  yield takeLatest(postSocialLoginRequest, postSocialLoginRequestSaga);\r\n  yield takeLatest(postLogoutRequest, postLogoutRequestSaga);\r\n}\r\n\r\nfunction* watchProfile(): Generator {\r\n  yield takeLatest(postModifyProfileRequest, postModifyProfileRequestSaga);\r\n}\r\n\r\nfunction* watchWishList(): Generator {\r\n  yield takeLatest(postAddWishListRequest, postAddWishListRequestSaga);\r\n  yield takeLatest(postRemoveWishListRequest, postRemoveWishListRequestSaga);\r\n}\r\n\r\nexport default function* userSaga(): Generator {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchProfile),\r\n    fork(watchWishList),\r\n  ]);\r\n}\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\market\\MarketDetail.tsx",["619","620","621"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { marketArticleInterface } from '../../interfaces/MarketInterface';\nimport { maketDetailLoadRequest } from './marketSlice';\n\ninterface ParamsInterface {\n  id: string;\n}\nconst MarketDetailWrapper = styled.div`\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n`;\nconst MarketDetailHeader = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 200px;\n  span {\n    position: absolute;\n    height: 100px;\n    bottom: -80%;\n    padding: 10px;\n    font-weight: 800;\n    font-size: 20px;\n  }\n`;\nconst BackgroundImage = styled.img`\n  width: 100%;\n  height: 100%;\n`;\nconst BackImage = styled.img`\n  width: 20px;\n  height: 20px;\n  position: relative;\n  padding: 10px;\n`;\nconst ProfileImage = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  bottom: -20%;\n  position: absolute;\n`;\nconst MarketDetailoContent = styled.div`\n`;\nconst MarketPostList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 120px;\n`;\nconst MarketPostItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  img {\n    width: 40%;\n  }\n  div {\n    margin-top: 10px;\n    font-weight: 800;\n  }\n`;\nconst MarketBottom = styled.div`\n  position: fixed;\n  margin-bottom: 0;\n  bottom: 0;\n  width: 100%;\n  & button {\n    border: 0;\n    width: 100%;\n    padding: 10px;\n    color: white;\n    background-color: #3960a6;\n  }\n`;\n\nfunction MarketDetail():JSX.Element {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { id } = useParams<ParamsInterface>();\n  const { marketDetail } = useSelector((state: any) => state.marketSlice);\n  console.log('aa', marketDetail);\n  const { email } = useSelector((state: any) => state.userSlice.user);\n  useEffect(() => {\n    dispatch(maketDetailLoadRequest(id));\n  }, [dispatch, id]);\n  const onClickAddMarketPost = (marketId: number) => {\n    history.push('/addPost/sales/market');\n  };\n  return (\n    <MarketDetailWrapper>\n      <BackImage src=\"images/icons/back.png\" />\n      {marketDetail !== null\n      && (\n        <>\n          <MarketDetailHeader>\n            <BackgroundImage src=\"/images/background.jpeg\" alt=\"background\" />\n            <ProfileImage src={marketDetail.image} alt=\"profile\" />\n            <span>{marketDetail.name}</span>\n          </MarketDetailHeader>\n          <MarketDetailoContent>\n            <MarketPostList>\n              {\n                marketDetail.articles.length === 0\n                  ? <div>게시물이 존재하지 않습니다</div>\n                  : marketDetail.articles.map((v:marketArticleInterface) => (\n                    <MarketPostItem>\n                      <img src={v.image} alt=\"book\" />\n                      <div>{v.title}</div>\n                      <div>{v.tprice}</div>\n                    </MarketPostItem>\n                  ))\n              }\n            </MarketPostList>\n          </MarketDetailoContent>\n          <MarketBottom>\n            {marketDetail.email === email\n            && (\n            <button type=\"button\" onClick={() => onClickAddMarketPost(marketDetail.marketId)}>\n              도서등록하기\n            </button>\n            )}\n          </MarketBottom>\n        </>\n      )}\n    </MarketDetailWrapper>\n  );\n}\n\nexport default MarketDetail;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\imageFileReader.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\PostList.tsx",["622"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport AppLayout from '../../../components/AppLayout';\nimport Header from './Header';\nimport { loadBookPostRequest } from '../postSlice';\nimport InfiniteScrollList from './InfiniteScrollList';\nimport AddPostButton from '../addPost/AddPostButton';\nimport Loading from '../../../components/Loading';\n\nconst PostListWrapper = styled.div`\n  margin-top: 150px;\n  width: 100%;\n  height: auto;\n`;\nconst Category = styled.div`\n  padding: 10px;\n  color: #3960a6;\n`;\nfunction PostList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, filtering, isLoadBookPostLoading } = useSelector((state: any) => state.postSlice);\n  useEffect(() => {\n    dispatch(loadBookPostRequest({ filtering }));\n  }, [dispatch, filtering, filtering.category, filtering.division, filtering.title]);\n  console.log(bookPost);\n\n  return (\n    <AppLayout activeId={0}>\n      <div>\n        <Header />\n        <PostListWrapper>\n          <AddPostButton />\n          <Category>카테고리: {filtering.category} | 검색키워드: {filtering.title} </Category>\n          {\n            isLoadBookPostLoading\n              ? <Loading />\n              : <InfiniteScrollList />\n          }\n          <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} />\n        </PostListWrapper>\n      </div>\n    </AppLayout>\n  );\n}\n\nexport default PostList;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSaga.ts",[],{"ruleId":"623","replacedBy":"624"},{"ruleId":"625","replacedBy":"626"},{"ruleId":"627","replacedBy":"628"},{"ruleId":"629","replacedBy":"630"},{"ruleId":"631","replacedBy":"632"},{"ruleId":"633","replacedBy":"634"},{"ruleId":"623","replacedBy":"635"},{"ruleId":"625","replacedBy":"636"},{"ruleId":"627","replacedBy":"637"},{"ruleId":"629","replacedBy":"638"},{"ruleId":"631","replacedBy":"639"},{"ruleId":"633","replacedBy":"640"},{"ruleId":"623","replacedBy":"641"},{"ruleId":"625","replacedBy":"642"},{"ruleId":"627","replacedBy":"643"},{"ruleId":"629","replacedBy":"644"},{"ruleId":"631","replacedBy":"645"},{"ruleId":"633","replacedBy":"646"},{"ruleId":"647","severity":1,"message":"648","line":141,"column":51,"nodeType":"649","messageId":"650","endLine":141,"endColumn":54,"suggestions":"651"},{"ruleId":"647","severity":1,"message":"648","line":142,"column":50,"nodeType":"649","messageId":"650","endLine":142,"endColumn":53,"suggestions":"652"},{"ruleId":"623","replacedBy":"653"},{"ruleId":"625","replacedBy":"654"},{"ruleId":"627","replacedBy":"655"},{"ruleId":"629","replacedBy":"656"},{"ruleId":"631","replacedBy":"657"},{"ruleId":"633","replacedBy":"658"},{"ruleId":"647","severity":1,"message":"648","line":167,"column":96,"nodeType":"649","messageId":"650","endLine":167,"endColumn":99,"suggestions":"659"},{"ruleId":"647","severity":1,"message":"648","line":237,"column":56,"nodeType":"649","messageId":"650","endLine":237,"endColumn":59,"suggestions":"660"},{"ruleId":"661","severity":1,"message":"662","line":50,"column":38,"nodeType":"663","messageId":"664","endLine":50,"endColumn":44},{"ruleId":"661","severity":1,"message":"662","line":63,"column":31,"nodeType":"663","messageId":"664","endLine":63,"endColumn":37},{"ruleId":"661","severity":1,"message":"662","line":67,"column":31,"nodeType":"663","messageId":"664","endLine":67,"endColumn":37},{"ruleId":"661","severity":1,"message":"662","line":77,"column":34,"nodeType":"663","messageId":"664","endLine":77,"endColumn":40},{"ruleId":"661","severity":1,"message":"662","line":89,"column":34,"nodeType":"663","messageId":"664","endLine":89,"endColumn":40},{"ruleId":"623","replacedBy":"665"},{"ruleId":"625","replacedBy":"666"},{"ruleId":"627","replacedBy":"667"},{"ruleId":"629","replacedBy":"668"},{"ruleId":"631","replacedBy":"669"},{"ruleId":"633","replacedBy":"670"},{"ruleId":"623","replacedBy":"671"},{"ruleId":"625","replacedBy":"672"},{"ruleId":"627","replacedBy":"673"},{"ruleId":"629","replacedBy":"674"},{"ruleId":"631","replacedBy":"675"},{"ruleId":"633","replacedBy":"676"},{"ruleId":"661","severity":1,"message":"662","line":12,"column":38,"nodeType":"663","messageId":"664","endLine":12,"endColumn":44},{"ruleId":"677","severity":1,"message":"678","line":1,"column":26,"nodeType":"679","messageId":"680","endLine":1,"endColumn":42},{"ruleId":"623","replacedBy":"681"},{"ruleId":"625","replacedBy":"682"},{"ruleId":"627","replacedBy":"683"},{"ruleId":"629","replacedBy":"684"},{"ruleId":"631","replacedBy":"685"},{"ruleId":"633","replacedBy":"686"},{"ruleId":"661","severity":1,"message":"687","line":3,"column":27,"nodeType":"663","messageId":"664","endLine":3,"endColumn":49},{"ruleId":"688","severity":1,"message":"689","line":38,"column":7,"nodeType":"690","messageId":"691","endLine":38,"endColumn":27},{"ruleId":"661","severity":1,"message":"692","line":48,"column":12,"nodeType":"663","messageId":"664","endLine":48,"endColumn":18},{"ruleId":"661","severity":1,"message":"693","line":63,"column":13,"nodeType":"663","messageId":"664","endLine":63,"endColumn":18},{"ruleId":"623","replacedBy":"694"},{"ruleId":"625","replacedBy":"695"},{"ruleId":"627","replacedBy":"696"},{"ruleId":"629","replacedBy":"697"},{"ruleId":"631","replacedBy":"698"},{"ruleId":"633","replacedBy":"699"},{"ruleId":"677","severity":1,"message":"678","line":3,"column":25,"nodeType":"679","messageId":"680","endLine":3,"endColumn":57},{"ruleId":"623","replacedBy":"700"},{"ruleId":"625","replacedBy":"701"},{"ruleId":"627","replacedBy":"702"},{"ruleId":"629","replacedBy":"703"},{"ruleId":"631","replacedBy":"704"},{"ruleId":"633","replacedBy":"705"},{"ruleId":"623","replacedBy":"706"},{"ruleId":"625","replacedBy":"707"},{"ruleId":"627","replacedBy":"708"},{"ruleId":"629","replacedBy":"709"},{"ruleId":"631","replacedBy":"710"},{"ruleId":"633","replacedBy":"711"},{"ruleId":"623","replacedBy":"712"},{"ruleId":"625","replacedBy":"713"},{"ruleId":"627","replacedBy":"714"},{"ruleId":"629","replacedBy":"715"},{"ruleId":"631","replacedBy":"716"},{"ruleId":"633","replacedBy":"717"},{"ruleId":"661","severity":1,"message":"662","line":13,"column":38,"nodeType":"663","messageId":"664","endLine":13,"endColumn":44},{"ruleId":"623","replacedBy":"718"},{"ruleId":"625","replacedBy":"719"},{"ruleId":"627","replacedBy":"720"},{"ruleId":"629","replacedBy":"721"},{"ruleId":"631","replacedBy":"722"},{"ruleId":"633","replacedBy":"723"},{"ruleId":"623","replacedBy":"724"},{"ruleId":"625","replacedBy":"725"},{"ruleId":"627","replacedBy":"726"},{"ruleId":"629","replacedBy":"727"},{"ruleId":"631","replacedBy":"728"},{"ruleId":"633","replacedBy":"729"},{"ruleId":"623","replacedBy":"730"},{"ruleId":"625","replacedBy":"731"},{"ruleId":"627","replacedBy":"732"},{"ruleId":"629","replacedBy":"733"},{"ruleId":"631","replacedBy":"734"},{"ruleId":"633","replacedBy":"735"},{"ruleId":"661","severity":1,"message":"736","line":3,"column":16,"nodeType":"663","messageId":"664","endLine":3,"endColumn":35},{"ruleId":"661","severity":1,"message":"737","line":3,"column":37,"nodeType":"663","messageId":"664","endLine":3,"endColumn":47},{"ruleId":"647","severity":1,"message":"648","line":31,"column":50,"nodeType":"649","messageId":"650","endLine":31,"endColumn":53,"suggestions":"738"},{"ruleId":"661","severity":1,"message":"739","line":107,"column":11,"nodeType":"663","messageId":"664","endLine":107,"endColumn":31},{"ruleId":"647","severity":1,"message":"648","line":107,"column":56,"nodeType":"649","messageId":"650","endLine":107,"endColumn":59,"suggestions":"740"},{"ruleId":"647","severity":1,"message":"648","line":162,"column":34,"nodeType":"649","messageId":"650","endLine":162,"endColumn":37,"suggestions":"741"},{"ruleId":"647","severity":1,"message":"648","line":213,"column":76,"nodeType":"649","messageId":"650","endLine":213,"endColumn":79,"suggestions":"742"},{"ruleId":"688","severity":1,"message":"689","line":250,"column":7,"nodeType":"690","messageId":"691","endLine":250,"endColumn":53},{"ruleId":"688","severity":1,"message":"689","line":253,"column":7,"nodeType":"690","messageId":"691","endLine":253,"endColumn":28},{"ruleId":"661","severity":1,"message":"743","line":6,"column":32,"nodeType":"663","messageId":"664","endLine":6,"endColumn":48},{"ruleId":"647","severity":1,"message":"648","line":248,"column":42,"nodeType":"649","messageId":"650","endLine":248,"endColumn":45,"suggestions":"744"},{"ruleId":"688","severity":1,"message":"689","line":302,"column":7,"nodeType":"690","messageId":"691","endLine":302,"endColumn":29},{"ruleId":"688","severity":1,"message":"689","line":304,"column":7,"nodeType":"690","messageId":"691","endLine":304,"endColumn":29},{"ruleId":"688","severity":1,"message":"689","line":306,"column":7,"nodeType":"690","messageId":"691","endLine":306,"endColumn":27},{"ruleId":"647","severity":1,"message":"648","line":69,"column":46,"nodeType":"649","messageId":"650","endLine":69,"endColumn":49,"suggestions":"745"},{"ruleId":"661","severity":1,"message":"746","line":249,"column":17,"nodeType":"663","messageId":"664","endLine":249,"endColumn":37},{"ruleId":"647","severity":1,"message":"648","line":249,"column":62,"nodeType":"649","messageId":"650","endLine":249,"endColumn":65,"suggestions":"747"},{"ruleId":"647","severity":1,"message":"648","line":468,"column":88,"nodeType":"649","messageId":"650","endLine":468,"endColumn":91,"suggestions":"748"},{"ruleId":"677","severity":1,"message":"678","line":4,"column":28,"nodeType":"679","messageId":"680","endLine":4,"endColumn":60},{"ruleId":"661","severity":1,"message":"749","line":6,"column":10,"nodeType":"663","messageId":"664","endLine":6,"endColumn":26},{"ruleId":"661","severity":1,"message":"750","line":1,"column":38,"nodeType":"663","messageId":"664","endLine":1,"endColumn":46},{"ruleId":"647","severity":1,"message":"648","line":11,"column":22,"nodeType":"649","messageId":"650","endLine":11,"endColumn":25,"suggestions":"751"},{"ruleId":"661","severity":1,"message":"752","line":2,"column":10,"nodeType":"663","messageId":"664","endLine":2,"endColumn":20},{"ruleId":"661","severity":1,"message":"753","line":8,"column":8,"nodeType":"663","messageId":"664","endLine":8,"endColumn":20},{"ruleId":"661","severity":1,"message":"754","line":9,"column":8,"nodeType":"663","messageId":"664","endLine":9,"endColumn":16},{"ruleId":"647","severity":1,"message":"648","line":213,"column":64,"nodeType":"649","messageId":"650","endLine":213,"endColumn":67,"suggestions":"755"},{"ruleId":"661","severity":1,"message":"662","line":13,"column":33,"nodeType":"663","messageId":"664","endLine":13,"endColumn":39},{"ruleId":"623","replacedBy":"756"},{"ruleId":"625","replacedBy":"757"},{"ruleId":"627","replacedBy":"758"},{"ruleId":"629","replacedBy":"759"},{"ruleId":"631","replacedBy":"760"},{"ruleId":"633","replacedBy":"761"},{"ruleId":"661","severity":1,"message":"662","line":13,"column":42,"nodeType":"663","messageId":"664","endLine":13,"endColumn":48},{"ruleId":"661","severity":1,"message":"762","line":8,"column":12,"nodeType":"663","messageId":"664","endLine":8,"endColumn":15},{"ruleId":"661","severity":1,"message":"762","line":22,"column":12,"nodeType":"663","messageId":"664","endLine":22,"endColumn":15},{"ruleId":"661","severity":1,"message":"762","line":36,"column":12,"nodeType":"663","messageId":"664","endLine":36,"endColumn":15},{"ruleId":"661","severity":1,"message":"763","line":3,"column":10,"nodeType":"663","messageId":"664","endLine":3,"endColumn":21},{"ruleId":"647","severity":1,"message":"648","line":15,"column":22,"nodeType":"649","messageId":"650","endLine":15,"endColumn":25,"suggestions":"764"},{"ruleId":"661","severity":1,"message":"765","line":213,"column":37,"nodeType":"663","messageId":"664","endLine":213,"endColumn":67},{"ruleId":"647","severity":1,"message":"648","line":213,"column":92,"nodeType":"649","messageId":"650","endLine":213,"endColumn":95,"suggestions":"766"},{"ruleId":"647","severity":1,"message":"648","line":85,"column":45,"nodeType":"649","messageId":"650","endLine":85,"endColumn":48,"suggestions":"767"},{"ruleId":"623","replacedBy":"768"},{"ruleId":"625","replacedBy":"769"},{"ruleId":"627","replacedBy":"770"},{"ruleId":"629","replacedBy":"771"},{"ruleId":"631","replacedBy":"772"},{"ruleId":"633","replacedBy":"773"},{"ruleId":"661","severity":1,"message":"662","line":51,"column":35,"nodeType":"663","messageId":"664","endLine":51,"endColumn":41},{"ruleId":"661","severity":1,"message":"662","line":66,"column":33,"nodeType":"663","messageId":"664","endLine":66,"endColumn":39},{"ruleId":"661","severity":1,"message":"662","line":81,"column":33,"nodeType":"663","messageId":"664","endLine":81,"endColumn":39},{"ruleId":"661","severity":1,"message":"662","line":85,"column":33,"nodeType":"663","messageId":"664","endLine":85,"endColumn":39},{"ruleId":"661","severity":1,"message":"662","line":96,"column":29,"nodeType":"663","messageId":"664","endLine":96,"endColumn":35},{"ruleId":"661","severity":1,"message":"662","line":100,"column":29,"nodeType":"663","messageId":"664","endLine":100,"endColumn":35},{"ruleId":"661","severity":1,"message":"662","line":110,"column":36,"nodeType":"663","messageId":"664","endLine":110,"endColumn":42},{"ruleId":"661","severity":1,"message":"774","line":161,"column":25,"nodeType":"663","messageId":"664","endLine":161,"endColumn":75},{"ruleId":"661","severity":1,"message":"662","line":16,"column":31,"nodeType":"663","messageId":"664","endLine":16,"endColumn":37},{"ruleId":"623","replacedBy":"775"},{"ruleId":"625","replacedBy":"776"},{"ruleId":"627","replacedBy":"777"},{"ruleId":"629","replacedBy":"778"},{"ruleId":"631","replacedBy":"779"},{"ruleId":"633","replacedBy":"780"},{"ruleId":"661","severity":1,"message":"781","line":4,"column":22,"nodeType":"663","messageId":"664","endLine":4,"endColumn":31},{"ruleId":"661","severity":1,"message":"782","line":12,"column":11,"nodeType":"663","messageId":"664","endLine":12,"endColumn":21},{"ruleId":"647","severity":1,"message":"648","line":69,"column":50,"nodeType":"649","messageId":"650","endLine":69,"endColumn":53,"suggestions":"783"},{"ruleId":"647","severity":1,"message":"648","line":103,"column":34,"nodeType":"649","messageId":"650","endLine":103,"endColumn":37,"suggestions":"784"},{"ruleId":"661","severity":1,"message":"785","line":3,"column":10,"nodeType":"663","messageId":"664","endLine":3,"endColumn":21},{"ruleId":"661","severity":1,"message":"737","line":4,"column":10,"nodeType":"663","messageId":"664","endLine":4,"endColumn":20},{"ruleId":"661","severity":1,"message":"750","line":1,"column":28,"nodeType":"663","messageId":"664","endLine":1,"endColumn":36},{"ruleId":"661","severity":1,"message":"786","line":3,"column":10,"nodeType":"663","messageId":"664","endLine":3,"endColumn":14},{"ruleId":"661","severity":1,"message":"787","line":1,"column":17,"nodeType":"663","messageId":"664","endLine":1,"endColumn":26},{"ruleId":"661","severity":1,"message":"750","line":1,"column":28,"nodeType":"663","messageId":"664","endLine":1,"endColumn":36},{"ruleId":"661","severity":1,"message":"785","line":2,"column":10,"nodeType":"663","messageId":"664","endLine":2,"endColumn":21},{"ruleId":"661","severity":1,"message":"763","line":2,"column":23,"nodeType":"663","messageId":"664","endLine":2,"endColumn":34},{"ruleId":"661","severity":1,"message":"662","line":39,"column":31,"nodeType":"663","messageId":"664","endLine":39,"endColumn":37},{"ruleId":"661","severity":1,"message":"662","line":42,"column":37,"nodeType":"663","messageId":"664","endLine":42,"endColumn":43},{"ruleId":"661","severity":1,"message":"662","line":55,"column":32,"nodeType":"663","messageId":"664","endLine":55,"endColumn":38},{"ruleId":"661","severity":1,"message":"662","line":58,"column":39,"nodeType":"663","messageId":"664","endLine":58,"endColumn":45},{"ruleId":"661","severity":1,"message":"662","line":68,"column":39,"nodeType":"663","messageId":"664","endLine":68,"endColumn":45},{"ruleId":"661","severity":1,"message":"662","line":81,"column":37,"nodeType":"663","messageId":"664","endLine":81,"endColumn":43},{"ruleId":"661","severity":1,"message":"662","line":93,"column":40,"nodeType":"663","messageId":"664","endLine":93,"endColumn":46},{"ruleId":"661","severity":1,"message":"788","line":5,"column":36,"nodeType":"663","messageId":"664","endLine":5,"endColumn":53},{"ruleId":"661","severity":1,"message":"789","line":126,"column":9,"nodeType":"663","messageId":"664","endLine":126,"endColumn":16},{"ruleId":"661","severity":1,"message":"787","line":1,"column":17,"nodeType":"663","messageId":"664","endLine":1,"endColumn":26},{"ruleId":"661","severity":1,"message":"662","line":32,"column":32,"nodeType":"663","messageId":"664","endLine":32,"endColumn":38},{"ruleId":"661","severity":1,"message":"662","line":37,"column":39,"nodeType":"663","messageId":"664","endLine":37,"endColumn":45},{"ruleId":"661","severity":1,"message":"662","line":47,"column":31,"nodeType":"663","messageId":"664","endLine":47,"endColumn":37},{"ruleId":"661","severity":1,"message":"790","line":2,"column":15,"nodeType":"663","messageId":"664","endLine":2,"endColumn":19},{"ruleId":"661","severity":1,"message":"791","line":6,"column":3,"nodeType":"663","messageId":"664","endLine":6,"endColumn":27},{"ruleId":"647","severity":1,"message":"648","line":168,"column":57,"nodeType":"649","messageId":"650","endLine":168,"endColumn":60,"suggestions":"792"},{"ruleId":"661","severity":1,"message":"662","line":28,"column":33,"nodeType":"663","messageId":"664","endLine":28,"endColumn":39},{"ruleId":"661","severity":1,"message":"662","line":46,"column":39,"nodeType":"663","messageId":"664","endLine":46,"endColumn":45},{"ruleId":"647","severity":1,"message":"648","line":12,"column":11,"nodeType":"649","messageId":"650","endLine":12,"endColumn":14,"suggestions":"793"},{"ruleId":"647","severity":1,"message":"648","line":54,"column":86,"nodeType":"649","messageId":"650","endLine":54,"endColumn":89,"suggestions":"794"},{"ruleId":"647","severity":1,"message":"648","line":201,"column":59,"nodeType":"649","messageId":"650","endLine":201,"endColumn":62,"suggestions":"795"},{"ruleId":"661","severity":1,"message":"762","line":10,"column":12,"nodeType":"663","messageId":"664","endLine":10,"endColumn":15},{"ruleId":"661","severity":1,"message":"693","line":10,"column":33,"nodeType":"663","messageId":"664","endLine":10,"endColumn":38},{"ruleId":"661","severity":1,"message":"762","line":20,"column":12,"nodeType":"663","messageId":"664","endLine":20,"endColumn":15},{"ruleId":"661","severity":1,"message":"693","line":20,"column":33,"nodeType":"663","messageId":"664","endLine":20,"endColumn":38},{"ruleId":"661","severity":1,"message":"687","line":26,"column":10,"nodeType":"663","messageId":"664","endLine":26,"endColumn":32},{"ruleId":"647","severity":1,"message":"648","line":85,"column":48,"nodeType":"649","messageId":"650","endLine":85,"endColumn":51,"suggestions":"796"},{"ruleId":"647","severity":1,"message":"648","line":87,"column":41,"nodeType":"649","messageId":"650","endLine":87,"endColumn":44,"suggestions":"797"},{"ruleId":"661","severity":1,"message":"798","line":91,"column":33,"nodeType":"663","messageId":"664","endLine":91,"endColumn":49},{"ruleId":"647","severity":1,"message":"648","line":23,"column":78,"nodeType":"649","messageId":"650","endLine":23,"endColumn":81,"suggestions":"799"},"lines-around-directive",["800"],"no-spaced-func",["801"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["800"],["801"],[],[],[],[],["800"],["801"],[],[],[],[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["802","803"],["804","805"],["800"],["801"],[],[],[],[],["806","807"],["808","809"],"@typescript-eslint/no-unused-vars","'action' is defined but never used.","Identifier","unusedVar",["800"],["801"],[],[],[],[],["800"],["801"],[],[],[],[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["800"],["801"],[],[],[],[],"'modifyProfileInterface' is defined but never used.","no-alert","Unexpected alert.","CallExpression","unexpected","'result' is defined but never used.","'error' is defined but never used.",["800"],["801"],[],[],[],[],["800"],["801"],[],[],[],[],["800"],["801"],[],[],[],[],["800"],["801"],[],[],[],[],["800"],["801"],[],[],[],[],["800"],["801"],[],[],[],[],["800"],["801"],[],[],[],[],"'RouteComponentProps' is defined but never used.","'useHistory' is defined but never used.",["810","811"],"'isAddBookPostLoading' is assigned a value but never used.",["812","813"],["814","815"],["816","817"],"'addMarketRequest' is defined but never used.",["818","819"],["820","821"],"'isModifyProfileError' is assigned a value but never used.",["822","823"],["824","825"],"'postLoginRequest' is defined but never used.","'useState' is defined but never used.",["826","827"],"'HashRouter' is defined but never used.","'ChattingList' is defined but never used.","'Chatting' is defined but never used.",["828","829"],["800"],["801"],[],[],[],[],"'res' is defined but never used.","'useSelector' is defined but never used.",["830","831"],"'isGetMyPurchaseArticlesLoading' is assigned a value but never used.",["832","833"],["834","835"],["800"],["801"],[],[],[],[],"'e' is defined but never used.",["800"],["801"],[],[],[],[],"'useParams' is defined but never used.","'ParamTypes' is defined but never used.",["836","837"],["838","839"],"'useDispatch' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'modifyBookPostAPI' is defined but never used.","'history' is assigned a value but never used.","'call' is defined but never used.","'adminLoginRequestSuccess' is defined but never used.",["840","841"],["842","843"],["844","845"],["846","847"],["848","849"],["850","851"],"'marketId' is defined but never used.",["852","853"],"padding-line-between-statements","func-call-spacing",{"messageId":"854","fix":"855","desc":"856"},{"messageId":"857","fix":"858","desc":"859"},{"messageId":"854","fix":"860","desc":"856"},{"messageId":"857","fix":"861","desc":"859"},{"messageId":"854","fix":"862","desc":"856"},{"messageId":"857","fix":"863","desc":"859"},{"messageId":"854","fix":"864","desc":"856"},{"messageId":"857","fix":"865","desc":"859"},{"messageId":"854","fix":"866","desc":"856"},{"messageId":"857","fix":"867","desc":"859"},{"messageId":"854","fix":"868","desc":"856"},{"messageId":"857","fix":"869","desc":"859"},{"messageId":"854","fix":"870","desc":"856"},{"messageId":"857","fix":"871","desc":"859"},{"messageId":"854","fix":"872","desc":"856"},{"messageId":"857","fix":"873","desc":"859"},{"messageId":"854","fix":"874","desc":"856"},{"messageId":"857","fix":"875","desc":"859"},{"messageId":"854","fix":"876","desc":"856"},{"messageId":"857","fix":"877","desc":"859"},{"messageId":"854","fix":"878","desc":"856"},{"messageId":"857","fix":"879","desc":"859"},{"messageId":"854","fix":"880","desc":"856"},{"messageId":"857","fix":"881","desc":"859"},{"messageId":"854","fix":"882","desc":"856"},{"messageId":"857","fix":"883","desc":"859"},{"messageId":"854","fix":"884","desc":"856"},{"messageId":"857","fix":"885","desc":"859"},{"messageId":"854","fix":"886","desc":"856"},{"messageId":"857","fix":"887","desc":"859"},{"messageId":"854","fix":"888","desc":"856"},{"messageId":"857","fix":"889","desc":"859"},{"messageId":"854","fix":"890","desc":"856"},{"messageId":"857","fix":"891","desc":"859"},{"messageId":"854","fix":"892","desc":"856"},{"messageId":"857","fix":"893","desc":"859"},{"messageId":"854","fix":"894","desc":"856"},{"messageId":"857","fix":"895","desc":"859"},{"messageId":"854","fix":"896","desc":"856"},{"messageId":"857","fix":"897","desc":"859"},{"messageId":"854","fix":"898","desc":"856"},{"messageId":"857","fix":"899","desc":"859"},{"messageId":"854","fix":"900","desc":"856"},{"messageId":"857","fix":"901","desc":"859"},{"messageId":"854","fix":"902","desc":"856"},{"messageId":"857","fix":"903","desc":"859"},{"messageId":"854","fix":"904","desc":"856"},{"messageId":"857","fix":"905","desc":"859"},{"messageId":"854","fix":"906","desc":"856"},{"messageId":"857","fix":"907","desc":"859"},{"messageId":"854","fix":"908","desc":"856"},{"messageId":"857","fix":"909","desc":"859"},"suggestUnknown",{"range":"910","text":"911"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"910","text":"912"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"913","text":"911"},{"range":"913","text":"912"},{"range":"914","text":"911"},{"range":"914","text":"912"},{"range":"915","text":"911"},{"range":"915","text":"912"},{"range":"916","text":"911"},{"range":"916","text":"912"},{"range":"917","text":"911"},{"range":"917","text":"912"},{"range":"918","text":"911"},{"range":"918","text":"912"},{"range":"919","text":"911"},{"range":"919","text":"912"},{"range":"920","text":"911"},{"range":"920","text":"912"},{"range":"921","text":"911"},{"range":"921","text":"912"},{"range":"922","text":"911"},{"range":"922","text":"912"},{"range":"923","text":"911"},{"range":"923","text":"912"},{"range":"924","text":"911"},{"range":"924","text":"912"},{"range":"925","text":"911"},{"range":"925","text":"912"},{"range":"926","text":"911"},{"range":"926","text":"912"},{"range":"927","text":"911"},{"range":"927","text":"912"},{"range":"928","text":"911"},{"range":"928","text":"912"},{"range":"929","text":"911"},{"range":"929","text":"912"},{"range":"930","text":"911"},{"range":"930","text":"912"},{"range":"931","text":"911"},{"range":"931","text":"912"},{"range":"932","text":"911"},{"range":"932","text":"912"},{"range":"933","text":"911"},{"range":"933","text":"912"},{"range":"934","text":"911"},{"range":"934","text":"912"},{"range":"935","text":"911"},{"range":"935","text":"912"},{"range":"936","text":"911"},{"range":"936","text":"912"},{"range":"937","text":"911"},{"range":"937","text":"912"},[3295,3298],"unknown","never",[3375,3378],[3347,3350],[4681,4684],[797,800],[2868,2871],[4830,4833],[4249,4252],[4963,4966],[1584,1587],[4863,4866],[10992,10995],[235,238],[4270,4273],[472,475],[4285,4288],[1880,1883],[1657,1660],[2936,2939],[3300,3303],[458,461],[1322,1325],[3988,3991],[1799,1802],[1902,1905],[827,830]]xt":"912"},{"range":"917","text":"913"},{"range":"918","text":"912"},{"range":"918","text":"913"},{"range":"919","text":"912"},{"range":"919","text":"913"},{"range":"920","text":"912"},{"range":"920","text":"913"},{"range":"921","text":"912"},{"range":"921","text":"913"},{"range":"922","text":"912"},{"range":"922","text":"913"},{"range":"923","text":"912"},{"range":"923","text":"913"},{"range":"924","text":"912"},{"range":"924","text":"913"},{"range":"925","text":"912"},{"range":"925","text":"913"},{"range":"926","text":"912"},{"range":"926","text":"913"},{"range":"927","text":"912"},{"range":"927","text":"913"},{"range":"928","text":"912"},{"range":"928","text":"913"},{"range":"929","text":"912"},{"range":"929","text":"913"},{"range":"930","text":"912"},{"range":"930","text":"913"},{"range":"931","text":"912"},{"range":"931","text":"913"},{"range":"932","text":"912"},{"range":"932","text":"913"},{"range":"933","text":"912"},{"range":"933","text":"913"},{"range":"934","text":"912"},{"range":"934","text":"913"},{"range":"935","text":"912"},{"range":"935","text":"913"},{"range":"936","text":"912"},{"range":"936","text":"913"},{"range":"937","text":"912"},{"range":"937","text":"913"},{"range":"938","text":"912"},{"range":"938","text":"913"},[3295,3298],"unknown","never",[3375,3378],[3347,3350],[4681,4684],[797,800],[2868,2871],[4830,4833],[4249,4252],[4963,4966],[1584,1587],[4863,4866],[10992,10995],[235,238],[4270,4273],[472,475],[4285,4288],[1880,1883],[1657,1660],[2936,2939],[3300,3303],[458,461],[1322,1325],[3988,3991],[1799,1802],[1902,1905],[827,830]]