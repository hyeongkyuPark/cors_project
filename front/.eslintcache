[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSaga.ts":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NotFound.tsx":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\AddPostPage.tsx":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mypage\\MyPage.tsx":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\market\\Market.tsx":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\SearchBook.tsx":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\mockdata.ts":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts":"12","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx":"13","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts":"14","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mySlaeArticle\\MySaleArticle.tsx":"15","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts":"16","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\chattingApi.ts":"17","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx":"18","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx":"19","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts":"20","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\chatting\\ChattingList.tsx":"21","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts":"22","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx":"23","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSaga.ts":"24","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\Review.tsx":"25","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx":"26","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts":"27","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\imageFileReader.ts":"28","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx":"29","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts":"30","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx":"31","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\wishList\\WishList.tsx":"32","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx":"33","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts":"34","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\modifyProfile\\ModifyProfile.tsx":"35","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx":"36","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts":"37","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx":"38","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSlice.ts":"39","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts":"40","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\AddPostButton.tsx":"41","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\Notice.tsx":"42","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts":"43","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts":"44","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts":"45","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts":"46","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx":"47","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\chatting\\Chatting.tsx":"48","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSlice.ts":"49","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\ImagePreView.tsx":"50","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\MyPurchaseArticle.tsx":"51","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts":"52"},{"size":793,"mtime":1613381320181,"results":"53","hashOfConfig":"54"},{"size":171,"mtime":1613381320164,"results":"55","hashOfConfig":"54"},{"size":18387,"mtime":1613381320188,"results":"56","hashOfConfig":"54"},{"size":2316,"mtime":1613381320141,"results":"57","hashOfConfig":"54"},{"size":8550,"mtime":1613381320166,"results":"58","hashOfConfig":"54"},{"size":5803,"mtime":1613381320233,"results":"59","hashOfConfig":"54"},{"size":838,"mtime":1613381320205,"results":"60","hashOfConfig":"54"},{"size":463,"mtime":1613381320150,"results":"61","hashOfConfig":"54"},{"size":1992,"mtime":1613433950010,"results":"62","hashOfConfig":"54"},{"size":1253,"mtime":1613381320169,"results":"63","hashOfConfig":"54"},{"size":1218,"mtime":1613381320257,"results":"64","hashOfConfig":"54"},{"size":343,"mtime":1613272432332,"results":"65","hashOfConfig":"54"},{"size":3638,"mtime":1613381320244,"results":"66","hashOfConfig":"54"},{"size":826,"mtime":1613381320285,"results":"67","hashOfConfig":"54"},{"size":7368,"mtime":1613381320224,"results":"68","hashOfConfig":"54"},{"size":1508,"mtime":1613381320152,"results":"69","hashOfConfig":"54"},{"size":108,"mtime":1613381320143,"results":"70","hashOfConfig":"54"},{"size":2342,"mtime":1613381320162,"results":"71","hashOfConfig":"54"},{"size":1414,"mtime":1613272432278,"results":"72","hashOfConfig":"54"},{"size":2566,"mtime":1613381320253,"results":"73","hashOfConfig":"54"},{"size":2206,"mtime":1613381320175,"results":"74","hashOfConfig":"54"},{"size":1364,"mtime":1613381320146,"results":"75","hashOfConfig":"54"},{"size":1565,"mtime":1613272432279,"results":"76","hashOfConfig":"54"},{"size":852,"mtime":1613381320238,"results":"77","hashOfConfig":"54"},{"size":3260,"mtime":1613381320255,"results":"78","hashOfConfig":"54"},{"size":2844,"mtime":1613381320247,"results":"79","hashOfConfig":"54"},{"size":2256,"mtime":1613381320251,"results":"80","hashOfConfig":"54"},{"size":346,"mtime":1613381320288,"results":"81","hashOfConfig":"54"},{"size":2753,"mtime":1613434133927,"results":"82","hashOfConfig":"54"},{"size":440,"mtime":1611271238964,"results":"83","hashOfConfig":"54"},{"size":1937,"mtime":1613434152298,"results":"84","hashOfConfig":"54"},{"size":9206,"mtime":1613381320261,"results":"85","hashOfConfig":"54"},{"size":3403,"mtime":1613381320246,"results":"86","hashOfConfig":"54"},{"size":358,"mtime":1613272432328,"results":"87","hashOfConfig":"54"},{"size":11783,"mtime":1613381320211,"results":"88","hashOfConfig":"54"},{"size":1039,"mtime":1613381320249,"results":"89","hashOfConfig":"54"},{"size":2112,"mtime":1613381320154,"results":"90","hashOfConfig":"54"},{"size":4862,"mtime":1613381320177,"results":"91","hashOfConfig":"54"},{"size":3891,"mtime":1613436557842,"results":"92","hashOfConfig":"54"},{"size":512,"mtime":1613381320159,"results":"93","hashOfConfig":"54"},{"size":1475,"mtime":1613381320242,"results":"94","hashOfConfig":"54"},{"size":4656,"mtime":1613381320236,"results":"95","hashOfConfig":"54"},{"size":895,"mtime":1613381320171,"results":"96","hashOfConfig":"54"},{"size":241,"mtime":1613381320287,"results":"97","hashOfConfig":"54"},{"size":759,"mtime":1613381320283,"results":"98","hashOfConfig":"54"},{"size":569,"mtime":1613272432329,"results":"99","hashOfConfig":"54"},{"size":1137,"mtime":1613381320197,"results":"100","hashOfConfig":"54"},{"size":6784,"mtime":1613381320173,"results":"101","hashOfConfig":"54"},{"size":885,"mtime":1613272432272,"results":"102","hashOfConfig":"54"},{"size":1697,"mtime":1613381320168,"results":"103","hashOfConfig":"54"},{"size":7581,"mtime":1613381320214,"results":"104","hashOfConfig":"54"},{"size":191,"mtime":1613381320290,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sthwp6",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"122"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"134"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"113"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"171"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"182"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NotFound.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx",["230","231","232","233","234","235","236","237","238"],"import React, { useRef, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DaumPostCode, { AddressData } from 'react-daum-postcode';\nimport { emailCertificationAsync, emailDuplicationAsync, joinRequestAsync, nicknameDuplicationAsync } from '../../api/joinApi';\n\nconst Positional = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  font-size: 4.5vw;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n  }\n`;\n\nconst Header = styled.header`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  border-bottom: 1px solid #e0e0e0;\n  padding: 0.8em 0;\n  & h1 {\n    font-size: 4.5vw;\n    font-weight: 400;\n  }\n  @media screen and (min-width: 460px) {\n    width: 460px;\n    & h1 {\n    font-size: 20px;\n  }\n  }\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 1.5em 0;\n  display: flex;\n  justify-content: center;\n  overflow: auto;\n`;\n\nconst BackLink = styled(Link)`\n  position: absolute;\n  left: 0.5em;\n`;\n\nconst BackLogo = styled.img`\n  width: 1.8em;\n  height: 1.8em;\n`;\n\nconst JoinForm = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  & > div:last-child {\n    margin-bottom: 1.5em;\n  }\n  @media screen and (min-width: 460px) {\n    width: 414px;\n  }\n  `;\n\nconst JoinInputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1em;\n  & label {\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  @media screen and (min-width: 460px) {\n    & label {\n      font-size: 16.1px;\n    }\n  }\n`;\n\nconst JoinInput = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 0.5em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 4vw;\n  background: none;\n  border: none;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst CheckLogo = styled.img`\n  width: 1.2em;\n  height: 1.2em;\n  flex-grow: 1;\n  flex-shrink: 0;\n`;\n\nconst CertificationRequest = styled.button`\n  position: absolute;\n  right: 0;\n  font-size: 3vw;\n  font-weight: bold;\n  padding: 1em 1.5em;\n  background: ;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 13.8px;\n  }\n`;\n\nconst CertificationBox = styled.div`\n  display: none;\n  flex-direction: column;\n  margin-top: 0.5em;\n`;\n\nconst CertificationInputBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CertificationInput = styled.input`\n  width: 10em;\n  font-size: 4vw;\n  padding: 0.5em 1em;\n  margin-right: 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\nconst CertificationButton = styled.button`\n  font-size: 4vw;\n  font-weight: bold;\n  padding: 0.5em 1em;\n  background: #265290;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst InputMessage = styled.p`\n  font-size: 2vw;\n  margin-top: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 9.2px;\n  }\n`;\n\nconst SearchModal = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  background: #5c5c5c55;\n`;\n\nconst CloseButton = styled.img`\n  position: absolute;\n  width: 1.5em;\n  height: 1.5em;\n  top: 0.4em;\n  right: 0.4em;\n  font-size: 6vw;\n  @media screen and (min-width: 460px) {\n    font-size: 27.6px;\n  }\n`;\n\nconst AddressFormBox = styled.div`\n  margin-bottom: 2em;\n  & label {\n    display: block;\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  & ${JoinInput}:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  & ${JoinInput} {\n    padding: 0.5em;\n  }\n\n  @media screen and (min-width: 460px) {\n    & label {\n      font-size: 16.1px;\n    }\n  }\n`;\n\nconst AddressSearchBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1em;\n`;\nconst AddressSearchInput = styled.input`\n  width: 10em;\n  padding: 0.6em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  margin-right: 0.5em;\n  font-size: 4vw;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\nconst AddressSearchButton = styled.button`\n  padding: 0.7em;\n  background: #265290;\n  color: #fff;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  font-size: 3.5vw;\n  @media screen and (min-width: 460px) {\n    font-size: 16.1px;\n  }\n`;\n\nconst AgreementBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90vw;\n  margin-bottom: 2.5em;\n  @media screen and (min-width: 460px) {\n    width: 414px;\n  }\n`;\nconst AllAgreeBox = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 4.5vw;\n  font-weight: bold;\n  margin-bottom: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n  }\n`;\nconst AgreeCheckBox = styled.img`\n  width: 1.5em;\n  height: 1.5em;\n  margin-right: 0.5em;\n`;\nconst AgreeText = styled.div`\n  & span {\n    color: #265290;\n  }\n`;\n\nconst SubAgreeBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-size: 4vw;\n  margin-bottom: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst AgreeDetail = styled.img`\n  width: 1em;\n  height: 1em;\n  position: absolute;\n  right: 0;\n  transform: rotate(-90deg);\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst JoinButton = styled.button`\n  width: 80vw;\n  font-size: 4.5vw;\n  padding: 0.8em 0;\n  text-align: center;\n  color: #fff;\n  background: #265290;\n  border: none;\n  outline: none;\n  margin-bottom: 1.5em;\n  @media screen and (min-width: 460px) {\n    width: 368px;\n    font-size: 20px;\n  }\n`;\n\nfunction Join():JSX.Element {\n  const initialInputs = {\n    email: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n      duplicationCheck: false,\n      code: '',\n      certificationCheck: false,\n    },\n    nickname: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwd: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwdCheck: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    address: {\n      zipcode: '',\n      baseAddress: '',\n      detailAddress: '',\n    },\n    agreement: {\n      all: false,\n      agree1: false,\n      agree2: false,\n      agree3: false,\n    },\n  };\n\n  const [showsModal, setShowsModal] = useState(false);\n  const [inputs, setInputs] = useState(initialInputs);\n  const emailCertificationBox = useRef<HTMLInputElement>(null);\n  const history = useHistory();\n\n  const {\n    email,\n    nickname,\n    passwd,\n    passwdCheck,\n    address,\n    agreement,\n  } = inputs;\n\n  const inputChange = (name: 'email' | 'nickname' | 'passwd' | 'passwdCheck', value: string, state: 'check' | 'fail' | 'none', message: string, color: 'red' | 'blue') => {\n    setInputs({\n      ...inputs,\n      [name]: {\n        ...inputs[name],\n        value,\n        state,\n        message,\n        color,\n      },\n    });\n  };\n\n  const onChangeText = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        if (/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '이메일 형식이 아닙니다.', 'red');\n        }\n        break;\n      case 'nickname':\n        if (value.length < 4) {\n          inputChange(name, value, 'fail', '닉네임을 4자 이상 입력해주세요.', 'red');\n        } else {\n          try {\n            await nicknameDuplicationAsync(value);\n            inputChange(name, value, 'check', '', 'blue');\n          } catch {\n            inputChange(name, value, 'fail', '이미 사용중인 닉네임입니다.', 'red');\n          }\n        }\n        break;\n      case 'passwd':\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.', 'red');\n        }\n        break;\n      case 'passwdCheck':\n        if (value === passwd.value) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '비밀번호가 일치하지 않습니다.', 'red');\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onClickEmailDuplication = async () => {\n    try {\n      const result = await emailDuplicationAsync(email.value);\n\n      if (result) {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            duplicationCheck: true,\n          },\n        });\n        if (emailCertificationBox.current != null) {\n          emailCertificationBox.current.style.display = 'flex';\n        }\n      } else {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '이미 사용중인 이메일입니다.',\n            color: 'red',\n            duplicationCheck: false,\n          },\n        });\n      }\n    } catch (error) {\n      alert('서버 통신중 오류가 발생하였습니다.');\n    }\n  };\n\n  const onChangeCode = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      email: {\n        ...email,\n        code: e.target.value,\n      },\n    });\n  };\n\n  const onClickEmailCertification = async () => {\n    try {\n      const result = await emailCertificationAsync(email.value, email.code);\n\n      if (result) {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '인증이 완료되었습니다.',\n            color: 'blue',\n            certificationCheck: true,\n          },\n        });\n        if (emailCertificationBox.current != null) {\n          emailCertificationBox.current.style.display = 'none';\n        }\n      } else {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '코드를 확인해주세요.',\n            color: 'red',\n            certificationCheck: false,\n          },\n        });\n      }\n    } catch {\n      alert('서버 통신중 오류가 발생하였습니다.');\n    }\n  };\n\n  const onCompleteAddressSelect = (data: AddressData) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        zipcode: data.zonecode,\n        baseAddress: data.jibunAddress,\n      },\n    });\n    setShowsModal(false);\n  };\n\n  const onChangeDetailAddress = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        detailAddress: e.target.value,\n      },\n    });\n  };\n\n  const onClickAgree = (agree: 'all' | 'agree1' | 'agree2' | 'agree3') => {\n    if (agree === 'all') {\n      setInputs({\n        ...inputs,\n        agreement: {\n          all: !agreement.all,\n          agree1: !agreement.all,\n          agree2: !agreement.all,\n          agree3: !agreement.all,\n        },\n      });\n    } else {\n      const resultArr: boolean[] = [];\n\n      Object.keys(agreement).forEach((key) => {\n        if (key !== 'all' && (key === 'agree1' || key === 'agree2' || key === 'agree3')) {\n          if (key === agree) {\n            resultArr.push(!agreement[key]);\n          } else {\n            resultArr.push(agreement[key]);\n          }\n        }\n      });\n\n      if (agree === 'agree1' || agree === 'agree2' || agree === 'agree3') {\n        setInputs({\n          ...inputs,\n          agreement: {\n            ...agreement,\n            all: resultArr.every((value) => value === true),\n            [agree]: !agreement[agree],\n          },\n        });\n      }\n    }\n  };\n\n  const onsubmitJoin = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!email.certificationCheck) {\n      alert('이메일 인증을 진행해주세요.');\n    } else if (nickname.state !== 'check') {\n      alert('닉네임이 중복되었거나 형식이 맞지 않습니다.');\n    } else if (passwd.state !== 'check') {\n      alert('비밀번호 형식이 맞지 않습니다.');\n    } else if (passwdCheck.state !== 'check') {\n      alert('비밀번호가 일치하지 않습니다.');\n    } else if (address.zipcode === '') {\n      alert('주소를 입력해주세요.');\n    } else if (!agreement.agree1 || !agreement.agree2) {\n      alert('필수 약관 항목에 동의해주세요.');\n    } else {\n      await joinRequestAsync(email.value, nickname.value, passwd.value, `${address.baseAddress} ${address.detailAddress}`);\n      alert('회원가입이 완료되었습니다.');\n      history.push('/');\n    }\n  };\n\n  return (\n    <Positional>\n      <Header>\n        <BackLink to=\"/\">\n          <BackLogo src=\"/images/icons/back.png\" />\n        </BackLink>\n        <h1>회원가입</h1>\n      </Header>\n      <Main>\n        <JoinForm method=\"post\" onSubmit={onsubmitJoin}>\n          <JoinInputBox>\n            <label htmlFor=\"email\">이메일</label>\n            <JoinInput>\n              <Input required type=\"email\" id=\"email\" name=\"email\" onChange={onChangeText} value={email.value} disabled={email.duplicationCheck} />\n              <CheckLogo src={`/images/icons/${email.state}.png`} />\n              <CertificationRequest style={{ display: email.state === 'check' && !email.certificationCheck ? 'block' : 'none' }} type=\"button\" onClick={onClickEmailDuplication}>인증요청</CertificationRequest>\n            </JoinInput>\n            <CertificationBox ref={emailCertificationBox}>\n              <CertificationInputBox>\n                <CertificationInput name=\"certification\" onChange={onChangeCode} value={email.code} />\n                <CertificationButton type=\"button\" onClick={onClickEmailCertification}>확인</CertificationButton>\n              </CertificationInputBox>\n            </CertificationBox>\n            <InputMessage style={{ color: email.color }}>{email.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"nickname\">닉네임</label>\n            <JoinInput>\n              <Input required type=\"text\" maxLength={10} id=\"nickname\" name=\"nickname\" onChange={onChangeText} value={nickname.value} />\n              <CheckLogo src={`/images/icons/${nickname.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: nickname.color }}>{nickname.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwd\">비밀번호</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwd\" name=\"passwd\" onChange={onChangeText} value={passwd.value} />\n              <CheckLogo src={`/images/icons/${passwd.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwd.color }}>{passwd.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwdCheck\">비밀번호 확인</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwdCheck\" name=\"passwdCheck\" onChange={onChangeText} value={passwdCheck.value} />\n              <CheckLogo src={`/images/icons/${passwdCheck.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwdCheck.color }}>{passwdCheck.message}</InputMessage>\n          </JoinInputBox>\n          <AddressFormBox>\n            <label>주소</label>\n            <AddressSearchBox>\n              <AddressSearchInput disabled value={address.zipcode} />\n              <AddressSearchButton type=\"button\" onClick={() => setShowsModal(true)}>우편번호 검색</AddressSearchButton>\n            </AddressSearchBox>\n            <JoinInput>\n              <Input type=\"text\" disabled placeholder=\"상세 주소\" value={address.baseAddress} />\n            </JoinInput>\n            <JoinInput>\n              <Input type=\"text\" placeholder=\"나머지 주소\" onChange={onChangeDetailAddress} value={address.detailAddress} />\n            </JoinInput>\n          </AddressFormBox>\n          <AgreementBox>\n            <AllAgreeBox onClick={() => onClickAgree('all')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.all ? 'check' : 'check_default'}.png`} />\n              <AgreeText>전체 약관에 동의합니다.</AgreeText>\n            </AllAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree1')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree1 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>서비스 이용약관 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree2')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree2 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>개인정보 처리방침 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree3')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree3 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>이벤트 마케팅 수신 동의 <span>(선택)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n          </AgreementBox>\n          <ButtonWrapper>\n            <JoinButton type=\"submit\">회원가입</JoinButton>\n          </ButtonWrapper>\n        </JoinForm>\n      </Main>\n      <SearchModal style={{ display: showsModal ? 'flex' : 'none' }}>\n        <CloseButton src=\"/images/icons/x.png\" onClick={() => setShowsModal(false)} />\n        <DaumPostCode onComplete={onCompleteAddressSelect} />\n      </SearchModal>\n    </Positional>\n  );\n}\n\nexport default Join;\n",["239","240","241","242","243","244"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx",[],["245","246","247","248","249","250"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\AddPostPage.tsx",["251","252","253","254","255","256"],"import React, { useCallback, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { addBookPostRequest } from './addPostSlice';\nimport ImagePreView from './ImagePreView';\nimport ImageFileReaderPromise from '../../utils/imageFileReader';\nimport { getAladinBook } from '../../api/postBookApi';\nimport aladinIteminterface from '../../interfaces/AladinInterface';\nimport SearchBook from './SearchBook';\n\ninterface ParamTypes {\n  division: string\n}\ninterface ImageURLInterface {\n  id: string;\n  url: string;\n  image: Blob;\n}\nconst AddPostWrapper = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  max-width: 600px;\n`;\nconst AddPostHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 0px;\n`;\nconst Logo = styled.img`\n  width: 40px;\n`;\nconst DeleteImg = styled.img`\n  width: 20px;\n  align-self: flex-start;\n`;\nconst BookWrapper = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    width: 30%;\n    max-width: 200px;\n  }\n  border: 1px solid #e8e8e8;\n  margin: 10px 0px;\n`;\nconst BookDetail = styled.div`\n  margin-left: 20px;\n`;\nconst Category = styled.div`\n  font-size: 12px;\n  margin-bottom: 20px;\n`;\nconst BookTitle = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n  font-weight: 800;\n`;\nconst BookPrice = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n`;\nconst FormWrapper = styled.form`\n`;\nconst BookDetailInputWrapper = styled.div`\n  & input {\n    margin: 20px 0;\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n  }\n  & textArea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n    height: 80px;\n    resize: none;\n    overflow: scroll;\n  }\n`;\nconst AddPostButton = styled.button`\n  width: 100%;\n  border: 0;\n  background-color: #3960a6;\n  padding: 10px;\n  margin: 20px 0px;\n  border-radius: 5px;\n  color: white;\n  font-weight: 700;\n`;\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  background-color: #e9e9e9;\n  width: 100%;\n  margin: auto;\n  & input {\n    border:0;\n    width:80%;\n    background-color: inherit;\n  }\n  & button {\n    border: 0;\n  }\n  & img {\n    width: 20px;\n  }\n`;\nfunction AddPostPage():JSX.Element {\n  const [searchTitle, setSearchTitle] = useState<string>('');\n  const [searchResult, setSearchResult] = useState<aladinIteminterface[]>([]);\n  const [title, setTitle] = useState<string>('');\n  const [category, setCategory] = useState<string>('');\n  const [cid, setCid] = useState<number>();\n  const [thumbnail, setThumbnail] = useState<string>('');\n  const [images, setImages] = useState<ImageURLInterface[]>([]);\n  const [realPrice, setRealPrice] = useState<number>();\n  const [price, setPrice] = useState<string>('');\n  const [content, setContent] = useState<string>('');\n  const [isOpenSearchBox, setIsOpenSearchBox] = useState<boolean>(false);\n  const history = useHistory();\n\n  const { isAddBookPostLoading, isAddBookPostDone, isAddBookPostError } = useSelector((state) => state.addPostSlice);\n  const dispatch = useDispatch();\n\n  const { division } = useParams<ParamTypes>();\n  const upperCaseDivision:string = division.toUpperCase();\n\n  const ImageFileReader = async (file: Blob) => {\n    try {\n      const image: string = await ImageFileReaderPromise(file);\n      if (images.length < 2) {\n        setImages(images.concat({ id: uuidv4(), url: image, image: file }));\n      } else {\n        alert('최대 두장의 사진만 업로드 가능합니다.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const loadSearchResultBook = async () => {\n    getAladinBook(searchTitle).then(({ data }) => {\n      const a = data.replace(/\\\\/ig, '\\\\\\\\', /;/g, '');\n      const b = a.substr(0, a.length - 1);\n      const parseData = JSON.parse(b);\n      setSearchResult(parseData.item);\n      if (parseData.item.length === 0) {\n        alert('검색결과가 없습니다');\n      } else {\n        setIsOpenSearchBox(true);\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n  const handleChangeSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTitle(e.target.value);\n  };\n  const handleClickSearch = () => {\n    loadSearchResultBook();\n  };\n  const handleXButtonClick = () => {\n    history.push('/home');\n  };\n  const handleDeleteImage = useCallback((imageId: string) => {\n    const filteringImageFile = images.filter((image) => image.id !== imageId);\n    setImages([...filteringImageFile]);\n  }, [images]);\n  const handleChangePrice = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPrice(e.target.value);\n  }, []);\n  const handleChangeContent = useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setContent(e.target.value);\n  }, []);\n  const handleChangeImages = (e: any) => {\n    ImageFileReader(e.target.files[0]);\n  };\n  const handleClickItem = (item: aladinIteminterface) => {\n    setCategory(item.categoryName);\n    setTitle(item.title);\n    setCid(item.categoryId);\n    setThumbnail(item.cover);\n    setRealPrice(item.priceStandard);\n    setIsOpenSearchBox(false);\n  };\n  const handleSubmitPost = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    console.log(cid);\n    e.preventDefault();\n    const formData = new FormData();\n    for (let i = 0; i < images.length; i++) {\n      formData.append('file', images[i].image); // 사용자가 등록한 이미지\n    }\n    formData.append('category', category); // category\n    formData.append('cid', String(cid)); // 알라딘에서 받은 정보\n    formData.append('title', title); // 알라딘에서 받은 정보\n    formData.append('image', thumbnail); // 알라딘에서 받은 정보\n    formData.append('rprice', String(realPrice)); // 알라딘에서 받은 정보\n    formData.append('content', content); // 사용자가 입력한 정보\n    formData.append('tprice', price); // 사용자가 입력한 정보\n    formData.append('division', upperCaseDivision); // 사용자가 입력한 정보\n\n    console.log(formData.keys(), formData.getAll('file'));\n\n    dispatch(addBookPostRequest({ data: formData }));\n\n    if (!isAddBookPostLoading && isAddBookPostDone) {\n      setContent('');\n      setImages([]);\n      setPrice('');\n      history.push('/home');\n    } else if (!isAddBookPostLoading && isAddBookPostError !== null) {\n      alert('글 업로드에 실패했습니다.');\n    }\n  }, [category, cid, content, dispatch, history, images, isAddBookPostDone, isAddBookPostError, isAddBookPostLoading, price, realPrice, thumbnail, title, upperCaseDivision]);\n  return (\n    <>\n      <AddPostWrapper>\n        {isOpenSearchBox && <SearchBook searchResult={searchResult} onClickItem={handleClickItem} />}\n        <AddPostHeader>\n          <Logo src=\"/images/icons/logo.jpeg\" alt=\"logo\" />\n          <button type=\"button\" onClick={handleXButtonClick}>\n            <DeleteImg src=\"/images/icons/x.png\" alt=\"x_button\" />\n          </button>\n        </AddPostHeader>\n        <SearchInput>\n          <input placeholder=\"책 이름을 검색해보세요!\" onChange={handleChangeSearch} />\n          <button type=\"button\" onClick={handleClickSearch}>\n            <img src=\"/images/icons/search.png\" alt=\"search_icon\" />\n          </button>\n        </SearchInput>\n        <BookWrapper>\n          {\n          title\n            ? (\n              <>\n                <img src={thumbnail} alt=\"thumbnail\" />\n                <BookDetail>\n                  <Category>{category}</Category>\n                  <BookTitle>{title}</BookTitle>\n                  <BookPrice>{realPrice} 원</BookPrice>\n                </BookDetail>\n              </>\n            )\n            : <div>책을 검색해서 등록하세요!</div>\n        }\n        </BookWrapper>\n        <FormWrapper encType=\"multipart/form-data\" onSubmit={handleSubmitPost}>\n          <ImagePreView onChangeImage={handleChangeImages} images={images} onDelete={handleDeleteImage} />\n          <BookDetailInputWrapper>\n            <input type=\"text\" pattern=\"[0-9]+\" placeholder=\"₩ 가격입력\" onChange={handleChangePrice} value={price} />\n            <textarea onChange={handleChangeContent} value={content} placeholder=\"상품설명을 입력하세요\" />\n          </BookDetailInputWrapper>\n          <AddPostButton type=\"submit\">등록하기</AddPostButton>\n        </FormWrapper>\n      </AddPostWrapper>\n    </>\n  );\n}\n\nexport default AddPostPage;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mypage\\MyPage.tsx",[],["257","258","259","260","261","262"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\market\\Market.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts",["263","264","265","266"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\SearchBook.tsx",[],["267","268","269","270","271","272"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\mockdata.ts",[],["273","274","275","276","277","278"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts",[],["279","280","281","282","283","284"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mySlaeArticle\\MySaleArticle.tsx",["285"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../utils/numberArrayUtill';\r\nimport { getMySaleArticleRequest } from './mySaleArticleSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MySaleItems = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: auto;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MySaleItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: 10em;\r\n  margin-right: 1em;\r\n  border-radius: 10px;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 3vw;\r\n    font-weight: bold;\r\n    padding: 0.5em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 3vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4.5vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 4.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 13.656px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 13.656px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 20.484px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction MySaleArticle():JSX.Element | null {\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { mySaleArticle, totalPage, isGetMyPurchaseArticlesLoading } = useSelector((state) => state.mySaleArticleSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getMySaleArticleRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>판매목록</h1>\r\n        </Header>\r\n        {\r\n          (totalPage === 0\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>등록한 판매글이 없습니다.</h2>\r\n                  <p>다 보신 책들을 나누어 보아요.</p>\r\n                  <button type=\"button\">책 판매하러 가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MySaleItems>\r\n                  {\r\n                    mySaleArticle.map((item: myArticleInterface) => (\r\n                      <MySaleItem key={item.articleId}>\r\n                        <ItemImage src={item.thumbnail} />\r\n                        <ItemInfo>\r\n                          <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                          <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                          <h2 className=\"my_title\">{item.title}</h2>\r\n                          <p className=\"my_price\">{item.tprice}</p>\r\n                        </ItemInfo>\r\n                      </MySaleItem>\r\n                    ))\r\n                  }\r\n                </MySaleItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/sales?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/sales?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/sales?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            ))\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MySaleArticle;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\chattingApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx",["286","287"],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PostList from '../features/postList/PostList';\nimport MyPage from '../features/mypage/MyPage';\n\ninterface AppLayoutInterface {\n  children: JSX.Element;\n  activeId: number;\n}\ninterface MenuItemProps {\n  active: boolean,\n}\n\nconst AppLayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 100px;\n  max-width: 600px;\n  margin: 0 auto;\n`;\nconst MenuWrapper = styled.div`\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: white;\n  max-width: 600px;\n  margin: 0 auto;\n`;\nconst MenuList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  padding: 15px 0px;\n  border-top: 1px solid #bababa;\n  & a {\n    color: inherit;\n    text-decoration: none\n  }\n`;\nconst MenuItem = styled.li<MenuItemProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: ${(props) => props.active && '#3960a6'};\n  & div {\n    font-size: 0.8rem;\n    margin-top: 10px;\n  }\n  & img {\n    display: block;\n    width:30px;\n  }\n`;\n\nfunction AppLayout({ children, activeId }: AppLayoutInterface):JSX.Element {\n  const [active, setActive] = useState<number>(activeId);\n  const tabTitle = [\n    ['/images/icons/home.png', '/images/icons/home_active.png', '홈', 'home'],\n    ['/../images/icons/chat.png', '/images/icons/chat_active.png', '채팅', 'chatting'],\n    ['/../images/icons/market.png', '/images/icons/market_active.png', '마켓', 'market'],\n    ['/../images/icons/my.png', '/images/icons/my_active.png', 'MY', 'mypage'],\n  ];\n  const onClickMenuHandler = (id:number) => {\n    setActive(id);\n  };\n  return (\n    <AppLayoutWrapper>\n      {children}\n      <MenuWrapper>\n        <MenuList>\n          {tabTitle.map((str, index) => (\n            <NavLink to={str[3]} key={str[2]}>\n              <MenuItem\n                key={str[2]}\n                onClick={() => onClickMenuHandler(index)}\n                active={active === index}\n              >\n                <img src={active === index ? str[1] : str[0]} alt=\"icon\" />\n                <div>{str[2]}</div>\n              </MenuItem>\n            </NavLink>\n          ))}\n        </MenuList>\n      </MenuWrapper>\n    </AppLayoutWrapper>\n  );\n}\n\nexport default AppLayout;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts",["288","289","290","291"],"import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { articleInterface } from '../../interfaces/PostList.interface';\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    bookPost: [],\n    hasMorePost: true,\n    filtering: { division: 'sales', category: '' },\n\n    isLoadBookPostLoading: false,\n    isLoadBookPostDone: false,\n    isLoadBookPostError: false,\n\n    isLoadScrollBookPostLoading: false,\n    isLoadScrollPostDone: false,\n    isLoadScrollPostError: null,\n\n    isDeleteBookPostLoading: false,\n    isDeleteBookPostDone: false,\n    isDeleteBookPostError: null,\n  },\n  reducers: {\n    loadBookPostRequest(state, action) {\n      state.isLoadBookPostLoading = true;\n      state.isLoadScrollBookPostLoading = false;\n      state.hasMorePost = true;\n      state.filtering.division = action.payload.filtering.division;\n      state.filtering.category = action.payload.filtering.category;\n    },\n    loadBookPostSuccess(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostDone = true;\n      state.bookPost = action.payload.data;\n    },\n    loadBookPostError(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostError = action.payload;\n    },\n    loadScrollBookPostRequest(state, action) {\n      state.isLoadScrollBookPostLoading = true;\n    },\n    loadScrollBookPostSuccess(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostDone = true;\n      state.bookPost = state.bookPost.concat(action.payload.data);\n      state.hasMorePost = action.payload.data.length === 10;\n    },\n    loadScrollBookPostError(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostError = action.payload;\n    },\n    deleteBookPostRequest(state, action) {\n      state.isDeleteBookPostLoading = true;\n    },\n    deleteBookPostSuccess(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostDone = true;\n      state.bookPost.filter((post:articleInterface) => post.articleId !== action.payload);\n    },\n    deleteBookPostError(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  loadBookPostRequest,\n  loadBookPostSuccess,\n  loadBookPostError,\n  loadScrollBookPostRequest,\n  loadScrollBookPostSuccess,\n  loadScrollBookPostError,\n  deleteBookPostRequest,\n  deleteBookPostSuccess,\n  deleteBookPostError,\n} = postSlice.actions;\n\nexport default postSlice.reducer;\n",["292","293","294","295","296","297"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\chatting\\ChattingList.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts",["298","299","300"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\Review.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx",["301"],"import React from 'react';\nimport { List, AutoSizer } from 'react-virtualized';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport CategoryFormatUtil from '../../utils/categoryFormatUtil';\nimport { loadScrollBookPostRequest } from './postSlice';\n\ninterface IndexInterface {\n  index: number;\n  style?: any;\n}\ninterface OnScrollParams {\n  clientHeight: number;\n  clientWidth: number;\n  scrollHeight: number;\n  scrollLeft: number;\n  scrollTop: number;\n  scrollWidth: number;\n}\nconst ListWrapper = styled.div`\n  display: flex;\n  max-width: 100%;\n  flex-wrap: wrap;\n  margin-top: 150px;\n  overflow: hidden;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 200px;\n  flex-basis: 50%;\n  padding:10px;\n  border-top: 1px solid #e8e8e8;\n  & img {\n    width: 150px;\n    height: 150px;\n    border-radius: 10px;\n  }\n`;\nconst ContentExplanation = styled.div`\n  padding: 0px 20px;\n  & h3 {\n    overflow:hidden;\n    padding: 10px 0px;\n  }\n`;\nconst Categoty = styled.div`\n  font-size: 9px;\n`;\nfunction InfiniteScrollList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, hasMorePost, isLoadScrollBookPostLoading } = useSelector((state) => state.postSlice);\n  const scrollListener = (params:OnScrollParams) => {\n    if (params.scrollTop + params.clientHeight >= params.scrollHeight - 300) {\n      if (hasMorePost && !isLoadScrollBookPostLoading) {\n        const LastId = bookPost[bookPost.length - 1].articleId;\n        dispatch(loadScrollBookPostRequest({ lastId: LastId }));\n      }\n    }\n  };\n\n  const rowRanderer = ({ index, style }: IndexInterface) => {\n    const post = bookPost[index];\n    return (\n      <div style={style}>\n        <NavLink to={`post/${post.articleId}`}>\n          <Content key={post.articleId}>\n            <img src={post.image} alt=\"\" />\n            <ContentExplanation>\n              <Categoty>{CategoryFormatUtil(post.category)}</Categoty>\n              <h3>{post.title}</h3>\n              <h3>{post.tprice}원</h3>\n            </ContentExplanation>\n          </Content>\n        </NavLink>\n      </div>\n    );\n  };\n\n  return (\n    <ListWrapper>\n      <AutoSizer disableHeight>\n        {({ width }) => (\n          <List\n            rowCount={bookPost.length} // 항목의 개수\n            height={700} // 실제 렌더링 되는 높이범위\n            rowHeight={200} // 항목의높이\n            width={width} // 항목의 너비\n            rowRenderer={rowRanderer} // 항목렌더링할때쓰는 함수\n            onScroll={scrollListener} // scroll 함수\n            overscanRowCount={10} // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\n          />\n        )}\n      </AutoSizer>\n    </ListWrapper>\n  );\n}\n\nexport default InfiniteScrollList;\n",["302","303","304","305","306","307"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts",["308","309","310","311"],"import { PayloadAction } from '@reduxjs/toolkit';\nimport { all, takeLatest, put, fork, call, throttle, select } from 'redux-saga/effects';\nimport { AddBookPostInterface } from '../../interfaces/PostList.interface';\nimport { generateDummyPost } from '../../interfaces/mockdata';\nimport { addBookPostAPI, deleteBookPostAPI, getBookPostAPI, getBookPostDetailViewAPI } from '../../api/postBookApi';\nimport { loadBookPostRequest, loadBookPostSuccess, loadBookPostError,\n  loadScrollBookPostRequest, loadScrollBookPostSuccess, loadScrollBookPostError, deleteBookPostSuccess, deleteBookPostError, deleteBookPostRequest } from './postSlice';\n\ninterface loadBookPost {\n  filtering: { division:string, category:string },\n  lastId?: number\n}\n\nfunction* loadBookPost(action: PayloadAction<loadBookPost>) {\n  try {\n    const result = yield call(getBookPostAPI, action.payload.filtering);\n    // const result = generateDummyPost(10);\n    console.log(result.data);\n    yield put(loadBookPostSuccess(result.data));\n  } catch (error) {\n    yield put(loadBookPostError({ error }));\n  }\n}\nfunction* loadScrollBookPost(action: PayloadAction<loadBookPost>) {\n  try {\n    const { filtering } = yield select((state) => state.postSlice);\n    console.log(filtering);\n    const result = yield call(getBookPostAPI, filtering, action.payload.lastId);\n    // const result = generateDummyPost(10);\n    console.log(result.data);\n    yield put(loadScrollBookPostSuccess(result.data));\n  } catch (error) {\n    yield put(loadScrollBookPostError({ error }));\n  }\n}\nfunction* deleteBookPost(action: PayloadAction<number>) {\n  try {\n    yield call(deleteBookPostAPI, action.payload);\n    yield put(deleteBookPostSuccess(action.payload));\n  } catch (error) {\n    yield put(deleteBookPostError({ error: error.response.data }));\n  }\n}\nfunction* watchLoadBookPost() {\n  yield takeLatest(loadBookPostRequest, loadBookPost);\n}\nfunction* watchloadScrollBookPost() {\n  yield throttle(2000, loadScrollBookPostRequest, loadScrollBookPost);\n}\nfunction* watchdeleteBookPost() {\n  yield takeLatest(deleteBookPostRequest, deleteBookPost);\n}\n\nexport default function* postSaga():Generator {\n  yield all([\n    fork(watchloadScrollBookPost),\n    fork(watchLoadBookPost),\n    fork(watchdeleteBookPost),\n  ]);\n}\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\imageFileReader.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx",["312","313","314"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts",["315"],"import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",["316","317","318","319","320","321"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx",["322","323","324","325","326"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { LOGIN_ERROR, SERVER_ERROR } from '../../api/userApi';\nimport LoginForm from './LoginForm';\nimport SocialLogin from './SocialLogin';\nimport { postLogoutRequest } from './userSlice';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Layout = styled.div`\n  width: 100%;\n  max-width: 600px;\n  min-width: 300px;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TitleBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1.7em;\n`;\n\nconst Logo = styled.img`\n  width: auto;\n  height: 18vw;\n  @media screen and (min-width: 460px) {\n    height: 82.8px;\n  }\n`;\n\nconst LinkBox = styled.div`\n  width: 19em;\n  font-size: 4vw;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2em;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n    margin-bottom: 36.8px;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  font-weight: 500;\n  text-decoration: none;\n  color: #707070;\n`;\n\nfunction Login():JSX.Element {\n  const { isLoginSucceed, isLoginError } = useSelector((state) => state.userSlice);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(postLogoutRequest({}));\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Layout>\n        <TitleBox>\n          <Logo src=\"/images/icons/title_logo.jpg\" />\n        </TitleBox>\n        <LoginForm />\n        <LinkBox>\n          <StyledLink to=\"/join\">회원가입</StyledLink>\n          <StyledLink to=\"/home\">비회원 둘러보기</StyledLink>\n        </LinkBox>\n        <SocialLogin />\n      </Layout>\n    </Wrapper>\n  );\n}\n\nexport default Login;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\wishList\\WishList.tsx",["327","328"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\modifyProfile\\ModifyProfile.tsx",["329","330","331","332","333","334"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts",["335"],"import axios, { AxiosResponse } from 'axios';\nimport { Console } from 'console';\nimport { AddBookPostInterface } from '../interfaces/PostList.interface';\n\nexport function getAladinBook(title: string):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/ttb/api/ItemSearch.aspx?ttbkey=ttbehaakdl1816001&QueryType=Title&Query=${title}&output=js`);\n}\n// 일반사용자 판매/구매글 추가\nexport function addBookPostAPI(data: AddBookPostInterface):Promise<AxiosResponse> {\n  console.log(data);\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  };\n  return axios.post('http://local.corsmarket.ml/api/article', data, config);\n}\nexport function deleteBookPostAPI(id: number):Promise<AxiosResponse> {\n  return axios.delete(`http://local.corsmarket.ml/api/article/${id}`);\n}\n// 일반사용자 판매/구매글 리스트 불러오기\nexport function getBookPostAPI(filtering:{ division:string, category:string }, id?: number):Promise<AxiosResponse> {\n  console.log(filtering);\n  return axios.get(`http://local.corsmarket.ml/api/articles/${filtering.division}`, {\n    params: {\n      category: filtering.category, lastId: id,\n    },\n  });\n}\n// 일반사용자 판매/구매글 상세페이지 불러오기\nexport function getBookPostDetailViewAPI(postId: number):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/api/article/${postId}`);\n}\n// 마켓리스트 불러오기\nexport function getMarketListAPI():Promise<AxiosResponse> {\n  return axios.get('http://local.corsmarket.ml/api/market');\n}\nexport function deletePostAPI(id: number):Promise<AxiosResponse> {\n  return axios.get('http://local.corsmarket.ml/api/market/delete',\n    { params: { articleId: id } });\n}\n// 마켓글 불러오기\nexport function getMarketBookAPI(marketId: number):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/api/market/${marketId}`);\n}\n// 해당 마켓에 판매글 추가\nexport function addMarketBookPostAPI(marketId: number):Promise<AxiosResponse> {\n  return axios.post(`http://local.corsmarket.ml/api/market/${marketId}`);\n}\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSlice.ts",["336","337","338","339","340","341","342","343"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\AddPostButton.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\Notice.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts",[],["344","345","346","347","348","349"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts",["350"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\chatting\\Chatting.tsx",["351","352","353","354","355","356"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSlice.ts",["357","358"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\ImagePreView.tsx",["359","360"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\MyPurchaseArticle.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts",["361"],{"ruleId":"362","severity":1,"message":"363","line":463,"column":7,"nodeType":"364","messageId":"365","endLine":463,"endColumn":35},{"ruleId":"362","severity":1,"message":"363","line":506,"column":7,"nodeType":"364","messageId":"365","endLine":506,"endColumn":35},{"ruleId":"362","severity":1,"message":"363","line":573,"column":7,"nodeType":"364","messageId":"365","endLine":573,"endColumn":31},{"ruleId":"362","severity":1,"message":"363","line":575,"column":7,"nodeType":"364","messageId":"365","endLine":575,"endColumn":40},{"ruleId":"362","severity":1,"message":"363","line":577,"column":7,"nodeType":"364","messageId":"365","endLine":577,"endColumn":33},{"ruleId":"362","severity":1,"message":"363","line":579,"column":7,"nodeType":"364","messageId":"365","endLine":579,"endColumn":32},{"ruleId":"362","severity":1,"message":"363","line":581,"column":7,"nodeType":"364","messageId":"365","endLine":581,"endColumn":27},{"ruleId":"362","severity":1,"message":"363","line":583,"column":7,"nodeType":"364","messageId":"365","endLine":583,"endColumn":33},{"ruleId":"362","severity":1,"message":"363","line":586,"column":7,"nodeType":"364","messageId":"365","endLine":586,"endColumn":30},{"ruleId":"366","replacedBy":"367"},{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","replacedBy":"371"},{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","replacedBy":"377"},{"ruleId":"366","replacedBy":"378"},{"ruleId":"368","replacedBy":"379"},{"ruleId":"370","replacedBy":"380"},{"ruleId":"372","replacedBy":"381"},{"ruleId":"374","replacedBy":"382"},{"ruleId":"376","replacedBy":"383"},{"ruleId":"384","severity":1,"message":"385","line":1,"column":30,"nodeType":"386","messageId":"387","endLine":1,"endColumn":36},{"ruleId":"384","severity":1,"message":"388","line":4,"column":10,"nodeType":"386","messageId":"387","endLine":4,"endColumn":14},{"ruleId":"362","severity":1,"message":"363","line":139,"column":9,"nodeType":"364","messageId":"365","endLine":139,"endColumn":39},{"ruleId":"362","severity":1,"message":"363","line":152,"column":9,"nodeType":"364","messageId":"365","endLine":152,"endColumn":28},{"ruleId":"389","severity":1,"message":"390","line":179,"column":34,"nodeType":"391","messageId":"392","endLine":179,"endColumn":37,"suggestions":"393"},{"ruleId":"362","severity":1,"message":"363","line":216,"column":7,"nodeType":"364","messageId":"365","endLine":216,"endColumn":30},{"ruleId":"366","replacedBy":"394"},{"ruleId":"368","replacedBy":"395"},{"ruleId":"370","replacedBy":"396"},{"ruleId":"372","replacedBy":"397"},{"ruleId":"374","replacedBy":"398"},{"ruleId":"376","replacedBy":"399"},{"ruleId":"384","severity":1,"message":"400","line":43,"column":12,"nodeType":"386","messageId":"387","endLine":43,"endColumn":18},{"ruleId":"384","severity":1,"message":"400","line":55,"column":12,"nodeType":"386","messageId":"387","endLine":55,"endColumn":18},{"ruleId":"384","severity":1,"message":"401","line":55,"column":36,"nodeType":"386","messageId":"387","endLine":55,"endColumn":41},{"ruleId":"384","severity":1,"message":"402","line":63,"column":12,"nodeType":"386","messageId":"387","endLine":63,"endColumn":15},{"ruleId":"366","replacedBy":"403"},{"ruleId":"368","replacedBy":"404"},{"ruleId":"370","replacedBy":"405"},{"ruleId":"372","replacedBy":"406"},{"ruleId":"374","replacedBy":"407"},{"ruleId":"376","replacedBy":"408"},{"ruleId":"366","replacedBy":"409"},{"ruleId":"368","replacedBy":"410"},{"ruleId":"370","replacedBy":"411"},{"ruleId":"372","replacedBy":"412"},{"ruleId":"374","replacedBy":"413"},{"ruleId":"376","replacedBy":"414"},{"ruleId":"366","replacedBy":"415"},{"ruleId":"368","replacedBy":"416"},{"ruleId":"370","replacedBy":"417"},{"ruleId":"372","replacedBy":"418"},{"ruleId":"374","replacedBy":"419"},{"ruleId":"376","replacedBy":"420"},{"ruleId":"384","severity":1,"message":"421","line":199,"column":37,"nodeType":"386","messageId":"387","endLine":199,"endColumn":67},{"ruleId":"384","severity":1,"message":"422","line":4,"column":8,"nodeType":"386","messageId":"387","endLine":4,"endColumn":16},{"ruleId":"384","severity":1,"message":"423","line":5,"column":8,"nodeType":"386","messageId":"387","endLine":5,"endColumn":14},{"ruleId":"384","severity":1,"message":"424","line":1,"column":10,"nodeType":"386","messageId":"387","endLine":1,"endColumn":24},{"ruleId":"384","severity":1,"message":"425","line":1,"column":39,"nodeType":"386","messageId":"387","endLine":1,"endColumn":52},{"ruleId":"384","severity":1,"message":"426","line":40,"column":38,"nodeType":"386","messageId":"387","endLine":40,"endColumn":44},{"ruleId":"384","severity":1,"message":"426","line":53,"column":34,"nodeType":"386","messageId":"387","endLine":53,"endColumn":40},{"ruleId":"366","replacedBy":"427"},{"ruleId":"368","replacedBy":"428"},{"ruleId":"370","replacedBy":"429"},{"ruleId":"372","replacedBy":"430"},{"ruleId":"374","replacedBy":"431"},{"ruleId":"376","replacedBy":"432"},{"ruleId":"384","severity":1,"message":"402","line":8,"column":12,"nodeType":"386","messageId":"387","endLine":8,"endColumn":15},{"ruleId":"384","severity":1,"message":"402","line":22,"column":12,"nodeType":"386","messageId":"387","endLine":22,"endColumn":15},{"ruleId":"384","severity":1,"message":"402","line":36,"column":12,"nodeType":"386","messageId":"387","endLine":36,"endColumn":15},{"ruleId":"389","severity":1,"message":"390","line":11,"column":11,"nodeType":"391","messageId":"392","endLine":11,"endColumn":14,"suggestions":"433"},{"ruleId":"366","replacedBy":"434"},{"ruleId":"368","replacedBy":"435"},{"ruleId":"370","replacedBy":"436"},{"ruleId":"372","replacedBy":"437"},{"ruleId":"374","replacedBy":"438"},{"ruleId":"376","replacedBy":"439"},{"ruleId":"384","severity":1,"message":"440","line":3,"column":10,"nodeType":"386","messageId":"387","endLine":3,"endColumn":30},{"ruleId":"384","severity":1,"message":"441","line":4,"column":10,"nodeType":"386","messageId":"387","endLine":4,"endColumn":27},{"ruleId":"384","severity":1,"message":"442","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":24},{"ruleId":"384","severity":1,"message":"443","line":5,"column":61,"nodeType":"386","messageId":"387","endLine":5,"endColumn":85},{"ruleId":"384","severity":1,"message":"444","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":26},{"ruleId":"362","severity":1,"message":"363","line":91,"column":9,"nodeType":"364","messageId":"365","endLine":91,"endColumn":33},{"ruleId":"362","severity":1,"message":"363","line":93,"column":9,"nodeType":"364","messageId":"365","endLine":93,"endColumn":30},{"ruleId":"445","severity":1,"message":"446","line":3,"column":25,"nodeType":"447","messageId":"448","endLine":3,"endColumn":57},{"ruleId":"366","replacedBy":"449"},{"ruleId":"368","replacedBy":"450"},{"ruleId":"370","replacedBy":"451"},{"ruleId":"372","replacedBy":"452"},{"ruleId":"374","replacedBy":"453"},{"ruleId":"376","replacedBy":"454"},{"ruleId":"384","severity":1,"message":"455","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":21},{"ruleId":"384","severity":1,"message":"456","line":5,"column":23,"nodeType":"386","messageId":"387","endLine":5,"endColumn":35},{"ruleId":"384","severity":1,"message":"457","line":62,"column":11,"nodeType":"386","messageId":"387","endLine":62,"endColumn":25},{"ruleId":"384","severity":1,"message":"458","line":62,"column":27,"nodeType":"386","messageId":"387","endLine":62,"endColumn":39},{"ruleId":"384","severity":1,"message":"459","line":64,"column":9,"nodeType":"386","messageId":"387","endLine":64,"endColumn":16},{"ruleId":"362","severity":1,"message":"363","line":235,"column":7,"nodeType":"364","messageId":"365","endLine":235,"endColumn":53},{"ruleId":"362","severity":1,"message":"363","line":238,"column":7,"nodeType":"364","messageId":"365","endLine":238,"endColumn":28},{"ruleId":"362","severity":1,"message":"363","line":238,"column":7,"nodeType":"364","messageId":"365","endLine":238,"endColumn":24},{"ruleId":"362","severity":1,"message":"363","line":371,"column":7,"nodeType":"364","messageId":"365","endLine":371,"endColumn":28},{"ruleId":"362","severity":1,"message":"363","line":373,"column":7,"nodeType":"364","messageId":"365","endLine":373,"endColumn":29},{"ruleId":"362","severity":1,"message":"363","line":375,"column":7,"nodeType":"364","messageId":"365","endLine":375,"endColumn":30},{"ruleId":"362","severity":1,"message":"363","line":377,"column":7,"nodeType":"364","messageId":"365","endLine":377,"endColumn":32},{"ruleId":"362","severity":1,"message":"363","line":390,"column":9,"nodeType":"364","messageId":"365","endLine":390,"endColumn":28},{"ruleId":"384","severity":1,"message":"460","line":2,"column":10,"nodeType":"386","messageId":"387","endLine":2,"endColumn":17},{"ruleId":"384","severity":1,"message":"426","line":38,"column":31,"nodeType":"386","messageId":"387","endLine":38,"endColumn":37},{"ruleId":"384","severity":1,"message":"426","line":41,"column":37,"nodeType":"386","messageId":"387","endLine":41,"endColumn":43},{"ruleId":"384","severity":1,"message":"426","line":54,"column":32,"nodeType":"386","messageId":"387","endLine":54,"endColumn":38},{"ruleId":"384","severity":1,"message":"426","line":66,"column":39,"nodeType":"386","messageId":"387","endLine":66,"endColumn":45},{"ruleId":"384","severity":1,"message":"426","line":78,"column":37,"nodeType":"386","messageId":"387","endLine":78,"endColumn":43},{"ruleId":"384","severity":1,"message":"426","line":81,"column":44,"nodeType":"386","messageId":"387","endLine":81,"endColumn":50},{"ruleId":"384","severity":1,"message":"426","line":89,"column":40,"nodeType":"386","messageId":"387","endLine":89,"endColumn":46},{"ruleId":"384","severity":1,"message":"426","line":92,"column":47,"nodeType":"386","messageId":"387","endLine":92,"endColumn":53},{"ruleId":"366","replacedBy":"461"},{"ruleId":"368","replacedBy":"462"},{"ruleId":"370","replacedBy":"463"},{"ruleId":"372","replacedBy":"464"},{"ruleId":"374","replacedBy":"465"},{"ruleId":"376","replacedBy":"466"},{"ruleId":"445","severity":1,"message":"446","line":4,"column":28,"nodeType":"447","messageId":"448","endLine":4,"endColumn":60},{"ruleId":"384","severity":1,"message":"467","line":158,"column":21,"nodeType":"386","messageId":"387","endLine":158,"endColumn":33},{"ruleId":"468","severity":1,"message":"469","line":166,"column":24,"nodeType":"470","messageId":"471","endLine":166,"endColumn":33},{"ruleId":"384","severity":1,"message":"472","line":166,"column":34,"nodeType":"386","messageId":"387","endLine":166,"endColumn":39},{"ruleId":"468","severity":1,"message":"469","line":181,"column":27,"nodeType":"470","messageId":"471","endLine":181,"endColumn":36},{"ruleId":"384","severity":1,"message":"472","line":181,"column":37,"nodeType":"386","messageId":"387","endLine":181,"endColumn":42},{"ruleId":"389","severity":1,"message":"390","line":187,"column":29,"nodeType":"391","messageId":"392","endLine":187,"endColumn":32,"suggestions":"473"},{"ruleId":"384","severity":1,"message":"426","line":11,"column":31,"nodeType":"386","messageId":"387","endLine":11,"endColumn":37},{"ruleId":"384","severity":1,"message":"426","line":15,"column":31,"nodeType":"386","messageId":"387","endLine":15,"endColumn":37},{"ruleId":"384","severity":1,"message":"474","line":1,"column":38,"nodeType":"386","messageId":"387","endLine":1,"endColumn":46},{"ruleId":"389","severity":1,"message":"390","line":11,"column":22,"nodeType":"391","messageId":"392","endLine":11,"endColumn":25,"suggestions":"475"},{"ruleId":"445","severity":1,"message":"446","line":1,"column":26,"nodeType":"447","messageId":"448","endLine":1,"endColumn":42},"no-alert","Unexpected alert.","CallExpression","unexpected","lines-around-directive",["476"],"no-spaced-func",["477"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["476"],["477"],[],[],[],[],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["478","479"],["476"],["477"],[],[],[],[],"'result' is defined but never used.","'error' is defined but never used.","'res' is defined but never used.",["476"],["477"],[],[],[],[],["476"],["477"],[],[],[],[],["476"],["477"],[],[],[],[],"'isGetMyPurchaseArticlesLoading' is assigned a value but never used.","'PostList' is defined but never used.","'MyPage' is defined but never used.","'createSelector' is defined but never used.","'PayloadAction' is defined but never used.","'action' is defined but never used.",["476"],["477"],[],[],[],[],["480","481"],["476"],["477"],[],[],[],[],"'AddBookPostInterface' is defined but never used.","'generateDummyPost' is defined but never used.","'addBookPostAPI' is defined but never used.","'getBookPostDetailViewAPI' is defined but never used.","'postLoginRequest' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["476"],["477"],[],[],[],[],"'LOGIN_ERROR' is defined but never used.","'SERVER_ERROR' is defined but never used.","'isLoginSucceed' is assigned a value but never used.","'isLoginError' is assigned a value but never used.","'history' is assigned a value but never used.","'Console' is defined but never used.",["476"],["477"],[],[],[],[],"'userNickname' is defined but never used.","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","'frame' is defined but never used.",["482","483"],"'useState' is defined but never used.",["484","485"],"padding-line-between-statements","func-call-spacing",{"messageId":"486","fix":"487","desc":"488"},{"messageId":"489","fix":"490","desc":"491"},{"messageId":"486","fix":"492","desc":"488"},{"messageId":"489","fix":"493","desc":"491"},{"messageId":"486","fix":"494","desc":"488"},{"messageId":"489","fix":"495","desc":"491"},{"messageId":"486","fix":"496","desc":"488"},{"messageId":"489","fix":"497","desc":"491"},"suggestUnknown",{"range":"498","text":"499"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"498","text":"500"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"501","text":"499"},{"range":"501","text":"500"},{"range":"502","text":"499"},{"range":"502","text":"500"},{"range":"503","text":"499"},{"range":"503","text":"500"},[4902,4905],"unknown","never",[397,400],[4332,4335],[235,238]]