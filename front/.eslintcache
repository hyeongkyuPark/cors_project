[{"/home/workspace/cors_project/front/src/rootSaga.ts":"1","/home/workspace/cors_project/front/src/reportWebVitals.ts":"2"},{"size":251,"mtime":1612153805880,"results":"3","hashOfConfig":"4"},{"size":440,"mtime":1611894711314,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"aysyzx",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/workspace/cors_project/front/src/rootSaga.ts",["11"],"import { all, fork } from 'redux-saga/effects';\r\n\r\nimport postSaga from './features/postList/postSaga';\r\nimport loginSaga from './features/login/LoginSaga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(postSaga), fork(loginSaga)]);\r\n}\r\n","/home/workspace/cors_project/front/src/reportWebVitals.ts",["12"],{"ruleId":"13","severity":1,"message":"14","line":6,"column":16,"nodeType":"15","messageId":"16","endLine":6,"endColumn":36},{"ruleId":"13","severity":1,"message":"14","line":3,"column":25,"nodeType":"17","messageId":"16","endLine":3,"endColumn":57},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","ArrowFunctionExpression"]