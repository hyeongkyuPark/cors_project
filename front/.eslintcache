[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSaga.ts":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\myPurchaseArticleSaga.ts":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\myPurchaseArticleSlice.ts":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\MyPurchaseArticle.tsx":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mySlaeArticle\\mySaleArticleSaga.ts":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mySlaeArticle\\mySaleArticleSlice.ts":"12","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx":"13","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSlice.ts":"14","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSaga.ts":"15","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\Notice.tsx":"16","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx":"17","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx":"18","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts":"19","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\Review.tsx":"20","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts":"21","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx":"22","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\modifyProfile\\ModifyProfile.tsx":"23","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx":"24","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSlice.ts":"25","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx":"26","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx":"27","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts":"28","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\mockdata.ts":"29","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx":"30","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts":"31","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx":"32","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx":"33"},{"size":2543,"mtime":1613272432316,"results":"34","hashOfConfig":"35"},{"size":191,"mtime":1613346897167,"results":"36","hashOfConfig":"35"},{"size":1137,"mtime":1613272432292,"results":"37","hashOfConfig":"35"},{"size":343,"mtime":1613272432332,"results":"38","hashOfConfig":"35"},{"size":1565,"mtime":1613272432279,"results":"39","hashOfConfig":"35"},{"size":3715,"mtime":1613354114840,"results":"40","hashOfConfig":"35"},{"size":2025,"mtime":1613349365371,"results":"41","hashOfConfig":"35"},{"size":1010,"mtime":1613349487826,"results":"42","hashOfConfig":"35"},{"size":1173,"mtime":1613349539966,"results":"43","hashOfConfig":"35"},{"size":8869,"mtime":1613349549386,"results":"44","hashOfConfig":"35"},{"size":960,"mtime":1613349568751,"results":"45","hashOfConfig":"35"},{"size":1097,"mtime":1613349578414,"results":"46","hashOfConfig":"35"},{"size":2249,"mtime":1613349602329,"results":"47","hashOfConfig":"35"},{"size":4096,"mtime":1613349707437,"results":"48","hashOfConfig":"35"},{"size":852,"mtime":1613349764185,"results":"49","hashOfConfig":"35"},{"size":4724,"mtime":1613349784090,"results":"50","hashOfConfig":"35"},{"size":2894,"mtime":1613272432311,"results":"51","hashOfConfig":"35"},{"size":2138,"mtime":1613350131405,"results":"52","hashOfConfig":"35"},{"size":712,"mtime":1613347137089,"results":"53","hashOfConfig":"35"},{"size":3260,"mtime":1613347167616,"results":"54","hashOfConfig":"35"},{"size":1508,"mtime":1613347024544,"results":"55","hashOfConfig":"35"},{"size":3604,"mtime":1613272432308,"results":"56","hashOfConfig":"35"},{"size":11798,"mtime":1613354238790,"results":"57","hashOfConfig":"35"},{"size":833,"mtime":1613347448704,"results":"58","hashOfConfig":"35"},{"size":924,"mtime":1613272432281,"results":"59","hashOfConfig":"35"},{"size":18387,"mtime":1613346897117,"results":"60","hashOfConfig":"35"},{"size":1741,"mtime":1613347237514,"results":"61","hashOfConfig":"35"},{"size":463,"mtime":1613346897111,"results":"62","hashOfConfig":"35"},{"size":1218,"mtime":1613347167619,"results":"63","hashOfConfig":"35"},{"size":4775,"mtime":1613272432275,"results":"64","hashOfConfig":"35"},{"size":894,"mtime":1613272432271,"results":"65","hashOfConfig":"35"},{"size":1414,"mtime":1613272432278,"results":"66","hashOfConfig":"35"},{"size":3373,"mtime":1613272432309,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"sthwp6",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts",["148","149","150","151"],"import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { articleInterface } from '../../interfaces/PostList.interface';\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    bookPost: [],\n    hasMorePost: true,\n    filtering: { division: 'sales', category: '' },\n\n    isLoadBookPostLoading: false,\n    isLoadBookPostDone: false,\n    isLoadBookPostError: false,\n\n    isLoadScrollBookPostLoading: false,\n    isLoadScrollPostDone: false,\n    isLoadScrollPostError: null,\n\n    isDeleteBookPostLoading: false,\n    isDeleteBookPostDone: false,\n    isDeleteBookPostError: null,\n  },\n  reducers: {\n    loadBookPostRequest(state, action) {\n      state.isLoadBookPostLoading = true;\n      state.isLoadScrollBookPostLoading = false;\n      state.hasMorePost = true;\n      state.filtering.division = action.payload.division;\n      state.filtering.category = action.payload.category;\n    },\n    loadBookPostSuccess(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostDone = true;\n      state.bookPost = action.payload;\n    },\n    loadBookPostError(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostError = action.payload.error;\n    },\n    loadScrollBookPostRequest(state, action) {\n      state.isLoadScrollBookPostLoading = true;\n    },\n    loadScrollBookPostSuccess(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostDone = true;\n      state.bookPost = state.bookPost.concat(action.payload);\n      state.hasMorePost = state.bookPost.length === 10;\n    },\n    loadScrollBookPostError(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostError = action.payload.error;\n    },\n    deleteBookPostRequest(state, action) {\n      state.isDeleteBookPostLoading = true;\n    },\n    deleteBookPostSuccess(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostDone = true;\n      state.bookPost.filter((post:articleInterface) => post.articleId !== action.payload);\n    },\n    deleteBookPostError(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  loadBookPostRequest,\n  loadBookPostSuccess,\n  loadBookPostError,\n  loadScrollBookPostRequest,\n  loadScrollBookPostSuccess,\n  loadScrollBookPostError,\n  deleteBookPostRequest,\n  deleteBookPostSuccess,\n  deleteBookPostError,\n} = postSlice.actions;\n\nexport default postSlice.reducer;\n",["152","153","154","155","156","157"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts",["158"],"const numberArrayUtill = (num: number) => {\r\n  const result = [];\r\n\r\n  for (let i = 1; i <= num; i++) {\r\n    result.push(i);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport default numberArrayUtill;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx",[],["159","160","161","162","163","164"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts",[],["165","166","167","168","169","170"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts",["171","172","173"],"import axios, { AxiosResponse } from 'axios';\r\nimport { memberInterface, modifyProfileInterface } from '../interfaces/UserInterface';\r\n\r\nexport function postLoginAsync(user: { email: string, passwd: string }): Promise<memberInterface> {\r\n  return axios({\r\n    method: 'post',\r\n    url: '/api/login',\r\n    params: {\r\n      email: user.email,\r\n      passwd: user.passwd,\r\n    },\r\n  }).then((result) => {\r\n    const { userId, nickname, profile_img: profileImg, latitude, longitude, role, articlelist, wishlist } = result.headers;\r\n\r\n    console.log(result.headers);\r\n\r\n    const loginUser: memberInterface = {\r\n      userId,\r\n      nickname,\r\n      profileImg,\r\n      latitude,\r\n      longitude,\r\n      role,\r\n      articles: articlelist === undefined ? [] : JSON.parse(articlelist),\r\n      wishList: wishlist === undefined ? [] : JSON.parse(wishlist),\r\n    };\r\n    return loginUser;\r\n  }).catch((error) => {\r\n    if (error.response.status !== 400) {\r\n      throw new Error('서버 통신 에러');\r\n    }\r\n    return error;\r\n  });\r\n}\r\n\r\nexport function socialLoginAsync(social: string): Promise<boolean> {\r\n  return axios({\r\n    method: 'post',\r\n    url: `/oauth2/authorization/${social}`,\r\n  }).then((result) => true).catch((error) => {\r\n    if (error.response.status !== 400) {\r\n      throw new Error('서버 통신 에러');\r\n    }\r\n    return false;\r\n  });\r\n}\r\n\r\nexport function logoutAsync(): Promise<boolean> {\r\n  return axios({\r\n    method: 'post',\r\n    url: '/api/logout',\r\n  }).then((result) => true).catch((error) => {\r\n    if (error.response.status !== 400) {\r\n      throw new Error('서버 통신 에러');\r\n    }\r\n    return false;\r\n  });\r\n}\r\n\r\nexport function modifyProfileAsync(modifyProfile: modifyProfileInterface): Promise<AxiosResponse> {\r\n  return axios({\r\n    method: 'put',\r\n    url: '/api/change/profile',\r\n    params: modifyProfile,\r\n  }).then((res) => true).catch((error) => {\r\n    if (error.response.status !== 400) {\r\n      throw new Error('서버통신에러');\r\n    }\r\n    return error;\r\n  });\r\n}\r\n",["174","175","176","177","178","179"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\myPurchaseArticleSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\myPurchaseArticleSlice.ts",["180"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\myPurchaseArticle\\MyPurchaseArticle.tsx",[],["181","182","183","184","185","186"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mySlaeArticle\\mySaleArticleSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mySlaeArticle\\mySaleArticleSlice.ts",["187"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst mySaleArticleSlice = createSlice({\r\n  name: 'myArticle',\r\n  initialState: {\r\n    mySaleArticle: [],\r\n    totalPage: 0,\r\n    isGetMySaleArticlesLoading: false, // 내 판매글 가져오기\r\n    isGetMySaleArticlesSuccess: false,\r\n    isGetMySaleArticlesError: null,\r\n  },\r\n  reducers: {\r\n    getMySaleArticleRequest: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = true;\r\n    },\r\n    getMySaleArticleRequestSuccess: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesSuccess = true;\r\n      state.mySaleArticle = action.payload.myAricleList;\r\n      state.totalPage = action.payload.pageTotal;\r\n    },\r\n    getMySaleArticleRequestError: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getMySaleArticleRequest,\r\n  getMySaleArticleRequestSuccess,\r\n  getMySaleArticleRequestError,\r\n} = mySaleArticleSlice.actions;\r\n\r\nexport default mySaleArticleSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSlice.ts",["188","189","190","191","192","193","194","195","196"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { memberInterface } from '../../interfaces/UserInterface';\r\n\r\nconst initialUser: memberInterface = {\r\n  userId: '',\r\n  nickname: '', // 닉네임\r\n  profileImg: '', // 프로필 이미지\r\n  latitude: 0, // 위도\r\n  longitude: 0, // 경도\r\n  role: '', // 권한\r\n  articles: [], // 아이디 만\r\n  wishList: [], // 아이디 만\r\n};\r\n\r\nconst initialState = {\r\n  user: initialUser,\r\n  isLoginLoading: false, // 로그인\r\n  isLoginSucceed: false,\r\n  isLoginError: null,\r\n  isLogoutLoading: false, // 로그아웃\r\n  isLogoutSucceed: false,\r\n  isLogoutError: null,\r\n  isModifyProfileLoading: false, // 프로필 수정\r\n  isModifyProfileSuccess: false,\r\n  isModifyProfileError: null,\r\n  isAddWishListLoading: false, // 찜하기\r\n  isAddWishListSuccess: false,\r\n  isAddWishListError: null,\r\n  isRemoveWishListLoading: false, // 찜 해제하기\r\n  isRemoveWishListSuccess: false,\r\n  isRemoveWishListError: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    postLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n      state.isLoginSucceed = false;\r\n      state.isLoginError = null;\r\n    },\r\n    postSocialLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n      state.isLoginSucceed = false;\r\n      state.isLoginError = null;\r\n    },\r\n    postLoginRequestSuccess: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginSucceed = true;\r\n      state.user = action.payload;\r\n    },\r\n    postLoginRequestError: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginError = action.payload;\r\n    },\r\n    postLogoutRequest: (state, action) => {\r\n      state.isLogoutLoading = true;\r\n      state.isLogoutSucceed = false;\r\n      state.isLogoutError = null;\r\n    },\r\n    postLogoutRequestSuccess: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutSucceed = true;\r\n      state.isLogoutError = null;\r\n      state = initialState;\r\n    },\r\n    postLogoutRequestError: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutSucceed = false;\r\n      state.isLogoutError = action.payload;\r\n    },\r\n    postModifyProfileRequest: (state, action) => {\r\n      state.isModifyProfileLoading = true;\r\n    },\r\n    postModifyProfileRequestSuccess: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileSuccess = true;\r\n      state.user.nickname = action.payload;\r\n    },\r\n    postModifyProfileRequestError: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileError = action.payload;\r\n    },\r\n    postAddWishListRequest: (state, action) => {\r\n      state.isAddWishListLoading = true;\r\n    },\r\n    postAddWishListRequestSuccess: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListSuccess = true;\r\n    },\r\n    postAddWishListRequestError: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListError = action.payload;\r\n    },\r\n    postRemoveWishListRequest: (state, action) => {\r\n      state.isRemoveWishListLoading = true;\r\n    },\r\n    postRemoveWishListRequestSuccess: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListSuccess = true;\r\n    },\r\n    postRemoveWishListRequestError: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  postModifyProfileRequest,\r\n  postModifyProfileRequestSuccess,\r\n  postModifyProfileRequestError,\r\n  postAddWishListRequest,\r\n  postAddWishListRequestSuccess,\r\n  postAddWishListRequestError,\r\n  postRemoveWishListRequest,\r\n  postRemoveWishListRequestSuccess,\r\n  postRemoveWishListRequestError,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n",["197","198","199","200","201","202"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\Notice.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx",["203"],"import React from 'react';\nimport { List, AutoSizer } from 'react-virtualized';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport CategoryFormatUtil from '../../utils/categoryFormatUtil';\nimport { loadScrollBookPostRequest } from './postSlice';\n\ninterface IndexInterface {\n  index: number;\n  style?: any;\n}\ninterface OnScrollParams {\n  clientHeight: number;\n  clientWidth: number;\n  scrollHeight: number;\n  scrollLeft: number;\n  scrollTop: number;\n  scrollWidth: number;\n}\nconst ListWrapper = styled.div`\n  display: flex;\n  max-width: 100%;\n  flex-wrap: wrap;\n  margin-top: 150px;\n  overflow: hidden;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 200px;\n  flex-basis: 50%;\n  padding:10px;\n  border-top: 1px solid #e8e8e8;\n  & img {\n    width: 150px;\n    height: 150px;\n    border-radius: 10px;\n  }\n`;\nconst ContentExplanation = styled.div`\n  padding: 0px 20px;\n  & h3 {\n    overflow:hidden;\n    padding: 10px 0px;\n  }\n`;\nconst Categoty = styled.div`\n  font-size: 9px;\n`;\nfunction InfiniteScrollList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, hasMorePost, isLoadScrollBookPostLoading } = useSelector((state) => state.postSlice);\n\n  const scrollListener = (params:OnScrollParams) => {\n    if (params.scrollTop + params.clientHeight >= params.scrollHeight - 300) {\n      console.log(hasMorePost, !isLoadScrollBookPostLoading);\n      if (hasMorePost && !isLoadScrollBookPostLoading) {\n        const LastId = bookPost[bookPost.length - 1].articleId;\n        dispatch(loadScrollBookPostRequest(LastId));\n      }\n    }\n  };\n\n  const rowRanderer = ({ index, style }: IndexInterface) => {\n    const post = bookPost[index];\n    return (\n      <div style={style}>\n        <NavLink to={`post/${post.articleId}`}>\n          <Content key={post.articleId}>\n            <img src={post.image} alt=\"\" />\n            <ContentExplanation>\n              <Categoty>{CategoryFormatUtil(post.category)}</Categoty>\n              <h3>{post.title}</h3>\n              <h3>{post.tprice}원</h3>\n            </ContentExplanation>\n          </Content>\n        </NavLink>\n      </div>\n    );\n  };\n\n  return (\n    <ListWrapper>\n      <AutoSizer disableHeight>\n        {({ width }) => (\n          <List\n            rowCount={bookPost.length} // 항목의 개수\n            height={800} // 실제 렌더링 되는 높이범위\n            rowHeight={200} // 항목의높이\n            width={width} // 항목의 너비\n            rowRenderer={rowRanderer} // 항목렌더링할때쓰는 함수\n            onScroll={scrollListener} // scroll 함수\n            overscanRowCount={2} // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\n          />\n        )}\n      </AutoSizer>\n    </ListWrapper>\n  );\n}\n\nexport default InfiniteScrollList;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx",["204"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport LoginForm from './LoginForm';\nimport SocialLogin from './SocialLogin';\nimport { postLogoutRequest } from './userSlice';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Layout = styled.div`\n  width: 100%;\n  max-width: 600px;\n  min-width: 300px;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TitleBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1.7em;\n`;\n\nconst Logo = styled.img`\n  width: auto;\n  height: 18vw;\n  @media screen and (min-width: 460px) {\n    height: 82.8px;\n  }\n`;\n\nconst LinkBox = styled.div`\n  width: 19em;\n  font-size: 4vw;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2em;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n    margin-bottom: 36.8px;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  font-weight: 500;\n  text-decoration: none;\n  color: #707070;\n`;\n\nfunction Login():JSX.Element {\n  const { isLoginSucceed, isLoginError } = useSelector((state) => state.userSlice);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(postLogoutRequest({}));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isLoginError !== null) {\n      alert(isLoginError);\n    }\n    console.log(2);\n  }, [isLoginError]);\n\n  useEffect(() => {\n    if (isLoginSucceed) {\n      history.push('/home');\n    }\n    console.log(3);\n  }, [isLoginSucceed, history]);\n\n  return (\n    <Wrapper>\n      <Layout>\n        <TitleBox>\n          <Logo src=\"/images/icons/title_logo.jpg\" />\n        </TitleBox>\n        <LoginForm />\n        <LinkBox>\n          <StyledLink to=\"/join\">회원가입</StyledLink>\n          <StyledLink to=\"/home\">비회원 둘러보기</StyledLink>\n        </LinkBox>\n        <SocialLogin />\n      </Layout>\n    </Wrapper>\n  );\n}\n\nexport default Login;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\Review.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\modifyProfile\\ModifyProfile.tsx",["205","206","207","208","209","210"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { nicknameDuplicationAsync } from '../../api/joinApi';\r\nimport { postModifyProfileRequest } from '../login/userSlice';\r\n\r\nconst FormLayout = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 17.216px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n    & h1 {\r\n      font-size: 19.368px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  left: 1em;\r\n  width: 2em;\r\n  height: 2em;\r\n`;\r\n\r\nconst ModifyButton = styled.button`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  font-size: 3vw;\r\n  right: 1em;\r\n  padding: 0.2em 0.7em;\r\n  border: 2px solid #3162C7;\r\n  outline: none;\r\n  border-radius: 50px;\r\n  color: #3162C7;\r\n  background: none;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 12.912px;\r\n  }\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 2.5em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImg = styled.div`\r\n  width: 100%;\r\n  height: 11em;\r\n  background: #000;\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n  }\r\n`;\r\n\r\nconst ProfileImg = styled.img`\r\n  position: absolute;\r\n  bottom: -1.5em;\r\n  width:5.5em;\r\n  height: 5.5em;\r\n  background: #464646;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst InputBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90vw;\r\n  margin-bottom: 2em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 387.350px;\r\n  }\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  & label {\r\n      font-size: 3.5vw;\r\n      margin-bottom: 1em;\r\n  }\r\n\r\n  & p {\r\n      font-size: 3vw;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n      margin-bottom: 1em;\r\n  }\r\n\r\n  @media screen and (min-width: 430px) {\r\n    & label {\r\n      font-size: 15.064px;\r\n    }\r\n    & p {\r\n      font-size: 12.912px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  background:  #fffdfd;\r\n  border-radius: 8px;\r\n  box-shadow: 3px 3px 10px #cecece;\r\n  padding: 0.5em 0;\r\n  margin-bottom: 0.5em;\r\n\r\n  & input {\r\n      font-size: 4vw;\r\n      width: 18em;\r\n      padding: 0 1em;\r\n      background: none;\r\n      border: none;\r\n      outline: none;\r\n  }\r\n\r\n  & img {\r\n      width: 1.5em;\r\n      height: 1.5em;\r\n      margin-right: 1em;\r\n  }\r\n\r\n  @media screen and (min-width: 430px) {\r\n    & input {\r\n      font-size: 17.216px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RemoveBox = styled.div`\r\n    width: 90vw;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    & p {\r\n      font-size: 3.5vw;\r\n      color: gray;\r\n    }\r\n\r\n    & button {\r\n        font-size: 3.8vw;\r\n        font-weight: bold;\r\n        background: none;\r\n        border: none;\r\n        outline: none;\r\n        text-decoration: underline;\r\n    }\r\n\r\n    @media screen and (min-width: 430px) {\r\n      width: 387.35px;\r\n      & p {\r\n        font-size: 15.064px;\r\n      }\r\n      & button {\r\n        font-size: 16.35px;\r\n      }\r\n    }\r\n`;\r\n\r\nfunction ModifyProfile():JSX.Element {\r\n  const { user, isModifyProfileError } = useSelector((state) => state.userSlice);\r\n  const { nickname, profileImg } = user;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [modifyInputs, setModifInputs] = useState({\r\n    nickname: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    passwd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    newPasswd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    newPasswdCheck: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isModifyProfileError === '비밀번호 불일치') {\r\n      setModifInputs((input) => ({\r\n        ...input,\r\n        passwd: {\r\n          ...input.passwd,\r\n          message: '비밀번호가 일치하지 않습니다.',\r\n          state: 'fail',\r\n          color: 'red',\r\n        },\r\n      }));\r\n    } else if (isModifyProfileError !== null) {\r\n      alert('서버 통신 에러');\r\n    }\r\n  }, [isModifyProfileError]);\r\n\r\n  const onChangeInuts = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    let passwdChekInput: {\r\n      value: string,\r\n      state: string,\r\n      message: string,\r\n      color: string,\r\n    } = {\r\n      value: '',\r\n      state: '',\r\n      message: '',\r\n      color: '',\r\n    };\r\n\r\n    switch (name) {\r\n      case 'nickname':\r\n        if (value === nickname) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              value,\r\n              state: 'none',\r\n              message: '',\r\n            },\r\n          });\r\n        } else if (value.length < 4) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              value,\r\n              state: 'fail',\r\n              message: '닉네임을 4자 이상 입력해주세요.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n          });\r\n        }\r\n        break;\r\n      case 'passwd':\r\n        setModifInputs({\r\n          ...modifyInputs,\r\n          passwd: {\r\n            ...modifyInputs.passwd,\r\n            value,\r\n            state: 'check',\r\n          },\r\n        });\r\n        break;\r\n      case 'newPasswd':\r\n        if (modifyInputs.newPasswdCheck.value !== '' && modifyInputs.newPasswdCheck.value !== value) {\r\n          passwdChekInput = {\r\n            ...modifyInputs.newPasswdCheck,\r\n            state: 'fail',\r\n            message: '비밀번호가 일치하지 않습니다.',\r\n            color: 'red',\r\n          };\r\n        } else {\r\n          passwdChekInput = {\r\n            ...modifyInputs.newPasswdCheck,\r\n            state: 'check',\r\n            message: '',\r\n          };\r\n        }\r\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              ...modifyInputs.newPasswd,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              value,\r\n              state: 'fail',\r\n              message: '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.',\r\n              color: 'red',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        }\r\n        break;\r\n      case 'newPasswdCheck':\r\n        if (modifyInputs.newPasswd.value === value) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswdCheck: {\r\n              ...modifyInputs.newPasswdCheck,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswdCheck: {\r\n              value,\r\n              state: 'fail',\r\n              message: '비밀번호가 일치하지 않습니다.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmitModifyProfile = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (modifyInputs.nickname.state !== 'check') {\r\n      alert('닉네임을 확인해주세요.');\r\n    } else if (modifyInputs.passwd.state !== 'check') {\r\n      alert('비밀번호를 확인해주세요.');\r\n    } else if (modifyInputs.newPasswd.state !== 'check') {\r\n      alert('새비밀번호를 확인해주세요.');\r\n    } else if (modifyInputs.newPasswdCheck.state !== 'check') {\r\n      alert('비밀번호가 일치하지 않습니다.');\r\n    } else {\r\n      try {\r\n        const result = await nicknameDuplicationAsync(modifyInputs.nickname.value);\r\n        console.log(result);\r\n        if (result) {\r\n          dispatch(postModifyProfileRequest({\r\n            modifyProfile: { nickname: modifyInputs.nickname.value, passwd: modifyInputs.passwd.value, newPasswd: modifyInputs.newPasswd.value, intro: 'test' },\r\n            modifyInputs,\r\n            setModifInputs,\r\n          }));\r\n        }\r\n      } catch {\r\n        alert('서버통신중 에러발생');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormLayout method=\"post\" onSubmit={onSubmitModifyProfile}>\r\n      <Header>\r\n        <BackImg src=\"/images/icons/back.png\" onClick={() => history.push('/mypage')} />\r\n        <h1>프로필 편집</h1>\r\n        <ModifyButton type=\"submit\">완료</ModifyButton>\r\n      </Header>\r\n      <ImageBox>\r\n        <BackgroundImg />\r\n        <ProfileImg src={profileImg} />\r\n      </ImageBox>\r\n      <InputBox>\r\n        <InputGroup>\r\n          <label htmlFor=\"nickname\">닉네임</label>\r\n          <Input>\r\n            <input type=\"text\" onChange={onChangeInuts} id=\"nickname\" name=\"nickname\" value={modifyInputs.nickname.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.nickname.color }}>{modifyInputs.nickname.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"passwd\">현재 비밀번호</label>\r\n          <Input>\r\n            <input id=\"passwd\" name=\"passwd\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.passwd.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.passwd.color }}>{modifyInputs.passwd.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"newPasswd\">새 비밀번호</label>\r\n          <Input>\r\n            <input id=\"newPasswd\" name=\"newPasswd\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.newPasswd.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.newPasswd.color }}>{modifyInputs.newPasswd.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"newPasswdCheck\">새 비밀번호 확인</label>\r\n          <Input>\r\n            <input id=\"newPasswdCheck\" name=\"newPasswdCheck\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.newPasswdCheck.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.newPasswdCheck.color }}>{modifyInputs.newPasswdCheck.message}</p>\r\n        </InputGroup>\r\n      </InputBox>\r\n      <RemoveBox>\r\n        <p>회원정보를 삭제하시겠어요?</p>\r\n        <button type=\"button\">회원 탈퇴</button>\r\n      </RemoveBox>\r\n    </FormLayout>\r\n  );\r\n}\r\n\r\nexport default ModifyProfile;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSlice.ts",["211"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx",["212","213","214","215","216","217","218","219","220"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\review\\mockdata.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx",[],{"ruleId":"221","severity":1,"message":"222","line":1,"column":10,"nodeType":"223","messageId":"224","endLine":1,"endColumn":24},{"ruleId":"221","severity":1,"message":"225","line":1,"column":39,"nodeType":"223","messageId":"224","endLine":1,"endColumn":52},{"ruleId":"221","severity":1,"message":"226","line":40,"column":38,"nodeType":"223","messageId":"224","endLine":40,"endColumn":44},{"ruleId":"221","severity":1,"message":"226","line":53,"column":34,"nodeType":"223","messageId":"224","endLine":53,"endColumn":40},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":1,"column":26,"nodeType":"241","messageId":"242","endLine":1,"endColumn":42},{"ruleId":"227","replacedBy":"243"},{"ruleId":"229","replacedBy":"244"},{"ruleId":"231","replacedBy":"245"},{"ruleId":"233","replacedBy":"246"},{"ruleId":"235","replacedBy":"247"},{"ruleId":"237","replacedBy":"248"},{"ruleId":"227","replacedBy":"249"},{"ruleId":"229","replacedBy":"250"},{"ruleId":"231","replacedBy":"251"},{"ruleId":"233","replacedBy":"252"},{"ruleId":"235","replacedBy":"253"},{"ruleId":"237","replacedBy":"254"},{"ruleId":"221","severity":1,"message":"255","line":40,"column":12,"nodeType":"223","messageId":"224","endLine":40,"endColumn":18},{"ruleId":"221","severity":1,"message":"255","line":52,"column":12,"nodeType":"223","messageId":"224","endLine":52,"endColumn":18},{"ruleId":"221","severity":1,"message":"256","line":65,"column":12,"nodeType":"223","messageId":"224","endLine":65,"endColumn":15},{"ruleId":"227","replacedBy":"257"},{"ruleId":"229","replacedBy":"258"},{"ruleId":"231","replacedBy":"259"},{"ruleId":"233","replacedBy":"260"},{"ruleId":"235","replacedBy":"261"},{"ruleId":"237","replacedBy":"262"},{"ruleId":"221","severity":1,"message":"226","line":13,"column":42,"nodeType":"223","messageId":"224","endLine":13,"endColumn":48},{"ruleId":"227","replacedBy":"263"},{"ruleId":"229","replacedBy":"264"},{"ruleId":"231","replacedBy":"265"},{"ruleId":"233","replacedBy":"266"},{"ruleId":"235","replacedBy":"267"},{"ruleId":"237","replacedBy":"268"},{"ruleId":"221","severity":1,"message":"226","line":13,"column":38,"nodeType":"223","messageId":"224","endLine":13,"endColumn":44},{"ruleId":"221","severity":1,"message":"226","line":38,"column":31,"nodeType":"223","messageId":"224","endLine":38,"endColumn":37},{"ruleId":"221","severity":1,"message":"226","line":43,"column":37,"nodeType":"223","messageId":"224","endLine":43,"endColumn":43},{"ruleId":"221","severity":1,"message":"226","line":57,"column":32,"nodeType":"223","messageId":"224","endLine":57,"endColumn":38},{"ruleId":"221","severity":1,"message":"226","line":62,"column":39,"nodeType":"223","messageId":"224","endLine":62,"endColumn":45},{"ruleId":"221","severity":1,"message":"226","line":73,"column":39,"nodeType":"223","messageId":"224","endLine":73,"endColumn":45},{"ruleId":"221","severity":1,"message":"226","line":85,"column":37,"nodeType":"223","messageId":"224","endLine":85,"endColumn":43},{"ruleId":"221","severity":1,"message":"226","line":88,"column":44,"nodeType":"223","messageId":"224","endLine":88,"endColumn":50},{"ruleId":"221","severity":1,"message":"226","line":96,"column":40,"nodeType":"223","messageId":"224","endLine":96,"endColumn":46},{"ruleId":"221","severity":1,"message":"226","line":99,"column":47,"nodeType":"223","messageId":"224","endLine":99,"endColumn":53},{"ruleId":"227","replacedBy":"269"},{"ruleId":"229","replacedBy":"270"},{"ruleId":"231","replacedBy":"271"},{"ruleId":"233","replacedBy":"272"},{"ruleId":"235","replacedBy":"273"},{"ruleId":"237","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":11,"column":11,"nodeType":"277","messageId":"278","endLine":11,"endColumn":14,"suggestions":"279"},{"ruleId":"280","severity":1,"message":"281","line":71,"column":7,"nodeType":"282","messageId":"283","endLine":71,"endColumn":26},{"ruleId":"280","severity":1,"message":"281","line":238,"column":7,"nodeType":"282","messageId":"283","endLine":238,"endColumn":24},{"ruleId":"280","severity":1,"message":"281","line":371,"column":7,"nodeType":"282","messageId":"283","endLine":371,"endColumn":28},{"ruleId":"280","severity":1,"message":"281","line":373,"column":7,"nodeType":"282","messageId":"283","endLine":373,"endColumn":29},{"ruleId":"280","severity":1,"message":"281","line":375,"column":7,"nodeType":"282","messageId":"283","endLine":375,"endColumn":30},{"ruleId":"280","severity":1,"message":"281","line":377,"column":7,"nodeType":"282","messageId":"283","endLine":377,"endColumn":32},{"ruleId":"280","severity":1,"message":"281","line":390,"column":9,"nodeType":"282","messageId":"283","endLine":390,"endColumn":28},{"ruleId":"221","severity":1,"message":"226","line":12,"column":38,"nodeType":"223","messageId":"224","endLine":12,"endColumn":44},{"ruleId":"280","severity":1,"message":"281","line":463,"column":7,"nodeType":"282","messageId":"283","endLine":463,"endColumn":35},{"ruleId":"280","severity":1,"message":"281","line":506,"column":7,"nodeType":"282","messageId":"283","endLine":506,"endColumn":35},{"ruleId":"280","severity":1,"message":"281","line":573,"column":7,"nodeType":"282","messageId":"283","endLine":573,"endColumn":31},{"ruleId":"280","severity":1,"message":"281","line":575,"column":7,"nodeType":"282","messageId":"283","endLine":575,"endColumn":40},{"ruleId":"280","severity":1,"message":"281","line":577,"column":7,"nodeType":"282","messageId":"283","endLine":577,"endColumn":33},{"ruleId":"280","severity":1,"message":"281","line":579,"column":7,"nodeType":"282","messageId":"283","endLine":579,"endColumn":32},{"ruleId":"280","severity":1,"message":"281","line":581,"column":7,"nodeType":"282","messageId":"283","endLine":581,"endColumn":27},{"ruleId":"280","severity":1,"message":"281","line":583,"column":7,"nodeType":"282","messageId":"283","endLine":583,"endColumn":33},{"ruleId":"280","severity":1,"message":"281","line":586,"column":7,"nodeType":"282","messageId":"283","endLine":586,"endColumn":30},"@typescript-eslint/no-unused-vars","'createSelector' is defined but never used.","Identifier","unusedVar","'PayloadAction' is defined but never used.","'action' is defined but never used.","lines-around-directive",["284"],"no-spaced-func",["285"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["284"],["285"],[],[],[],[],["284"],["285"],[],[],[],[],"'result' is defined but never used.","'res' is defined but never used.",["284"],["285"],[],[],[],[],["284"],["285"],[],[],[],[],["284"],["285"],[],[],[],[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["286","287"],"no-alert","Unexpected alert.","CallExpression","unexpected","padding-line-between-statements","func-call-spacing",{"messageId":"288","fix":"289","desc":"290"},{"messageId":"291","fix":"292","desc":"293"},"suggestUnknown",{"range":"294","text":"295"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"294","text":"296"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[397,400],"unknown","never"]