[{"/home/workspace/cors_market/www/cors/front/src/index.tsx":"1","/home/workspace/cors_market/www/cors/front/src/features/detailPostView/detailViewSlice.ts":"2","/home/workspace/cors_market/www/cors/front/src/features/detailPostView/detailViewSaga.ts":"3","/home/workspace/cors_market/www/cors/front/src/features/addPost/addPostSaga.ts":"4","/home/workspace/cors_market/www/cors/front/src/styles/GlobalStyles.ts":"5","/home/workspace/cors_market/www/cors/front/src/features/login/Login.tsx":"6","/home/workspace/cors_market/www/cors/front/src/features/postList/PostList.tsx":"7","/home/workspace/cors_market/www/cors/front/src/components/NotFound.tsx":"8","/home/workspace/cors_market/www/cors/front/src/features/join/Join.tsx":"9","/home/workspace/cors_market/www/cors/front/src/api/userApi.ts":"10","/home/workspace/cors_market/www/cors/front/src/api/chattingApi.ts":"11","/home/workspace/cors_market/www/cors/front/src/features/detailPostView/DetailPostContent.tsx":"12","/home/workspace/cors_market/www/cors/front/src/features/addPost/SearchBook.tsx":"13","/home/workspace/cors_market/www/cors/front/src/features/postList/InfiniteScrollList.tsx":"14","/home/workspace/cors_market/www/cors/front/src/features/postList/Header.tsx":"15","/home/workspace/cors_market/www/cors/front/src/utils/categoryFormatUtil.ts":"16","/home/workspace/cors_market/www/cors/front/src/App.tsx":"17","/home/workspace/cors_market/www/cors/front/src/rootSaga.ts":"18","/home/workspace/cors_market/www/cors/front/src/features/login/userSlice.ts":"19","/home/workspace/cors_market/www/cors/front/src/features/login/userSaga.ts":"20","/home/workspace/cors_market/www/cors/front/src/features/detailPostView/DetailPostView.tsx":"21","/home/workspace/cors_market/www/cors/front/src/features/chatting/ChattingList.tsx":"22","/home/workspace/cors_market/www/cors/front/src/reportWebVitals.ts":"23"},{"size":865,"mtime":1611935355603,"results":"24","hashOfConfig":"25"},{"size":956,"mtime":1613280477320,"results":"26","hashOfConfig":"25"},{"size":817,"mtime":1613280477316,"results":"27","hashOfConfig":"25"},{"size":922,"mtime":1613280477254,"results":"28","hashOfConfig":"25"},{"size":375,"mtime":1612832072809,"results":"29","hashOfConfig":"25"},{"size":1448,"mtime":1612832072777,"results":"30","hashOfConfig":"25"},{"size":1069,"mtime":1613280477876,"results":"31","hashOfConfig":"25"},{"size":180,"mtime":1613280477217,"results":"32","hashOfConfig":"25"},{"size":17442,"mtime":1612832072775,"results":"33","hashOfConfig":"25"},{"size":1384,"mtime":1613280477207,"results":"34","hashOfConfig":"25"},{"size":101,"mtime":1613295516426,"results":"35","hashOfConfig":"25"},{"size":5065,"mtime":1613280477298,"results":"36","hashOfConfig":"25"},{"size":1303,"mtime":1613280477244,"results":"37","hashOfConfig":"25"},{"size":2945,"mtime":1613280477370,"results":"38","hashOfConfig":"25"},{"size":3528,"mtime":1613280477367,"results":"39","hashOfConfig":"25"},{"size":586,"mtime":1612832072811,"results":"40","hashOfConfig":"25"},{"size":1343,"mtime":1613280477193,"results":"41","hashOfConfig":"25"},{"size":431,"mtime":1612832072807,"results":"42","hashOfConfig":"25"},{"size":5786,"mtime":1612832072781,"results":"43","hashOfConfig":"25"},{"size":3666,"mtime":1612832072780,"results":"44","hashOfConfig":"25"},{"size":1509,"mtime":1613280477312,"results":"45","hashOfConfig":"25"},{"size":2292,"mtime":1613280477260,"results":"46","hashOfConfig":"25"},{"size":440,"mtime":1611560536010,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oq40te",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/workspace/cors_market/www/cors/front/src/index.tsx",[],"/home/workspace/cors_market/www/cors/front/src/features/detailPostView/detailViewSlice.ts",["96"],"/home/workspace/cors_market/www/cors/front/src/features/detailPostView/detailViewSaga.ts",[],"/home/workspace/cors_market/www/cors/front/src/features/addPost/addPostSaga.ts",[],"/home/workspace/cors_market/www/cors/front/src/styles/GlobalStyles.ts",[],"/home/workspace/cors_market/www/cors/front/src/features/login/Login.tsx",[],["97","98","99","100","101","102"],"/home/workspace/cors_market/www/cors/front/src/features/postList/PostList.tsx",[],"/home/workspace/cors_market/www/cors/front/src/components/NotFound.tsx",[],"/home/workspace/cors_market/www/cors/front/src/features/join/Join.tsx",["103","104","105","106","107","108","109"],"import React, { useRef, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport DaumPostCode, { AddressData } from 'react-daum-postcode';\r\nimport { emailCertificationAsync, emailDuplicationAsync, joinRequestAsync, nicknameDuplicationAsync } from '../../api/joinApi';\r\n\r\nconst Positional = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n`;\r\n\r\nconst Main = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  padding: 1.5em 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  overflow: auto;\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst JoinForm = styled.form`\r\n  width: 90vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  & > div:last-child {\r\n    margin-bottom: 1.5em;\r\n  }\r\n  `;\r\n\r\nconst JoinInputBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1em;\r\n  & label {\r\n    font-size: 3.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  `;\r\n\r\nconst JoinInput = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.5em 0.5em;\r\n  background: #f9f9f9;\r\n  box-shadow: 3px 3px 10px #c4c4c4;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  font-size: 4vw;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nconst CheckLogo = styled.img`\r\n  width: 1.2em;\r\n  height: 1.2em;\r\n  flex-grow: 1;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst CertificationRequest = styled.button`\r\n  position: absolute;\r\n  right: 0;\r\n  font-size: 3vw;\r\n  font-weight: bold;\r\n  padding: 1em 1.5em;\r\n  background: #265290;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  outline: none;\r\n`;\r\n\r\nconst CertificationBox = styled.div`\r\n  display: none;\r\n  flex-direction: column;\r\n  margin-top: 0.5em;\r\n`;\r\n\r\nconst CertificationInputBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst CertificationInput = styled.input`\r\n  width: 10em;\r\n  font-size: 4vw;\r\n  padding: 0.5em 1em;\r\n  margin-right: 0.5em;\r\n  background: #f9f9f9;\r\n  box-shadow: 3px 3px 10px #c4c4c4;\r\n  border-radius: 5px;\r\n  border: none;\r\n  outline: none;\r\n`;\r\nconst CertificationButton = styled.button`\r\n  font-size: 4vw;\r\n  font-weight: bold;\r\n  padding: 0.5em 1em;\r\n  background: #265290;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  outline: none;\r\n`;\r\n\r\nconst InputMessage = styled.p`\r\n  font-size: 2vw;\r\n  margin-top: 1em;\r\n`;\r\n\r\nconst SearchModal = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  display: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #5c5c5c55;\r\n`;\r\n\r\nconst CloseButton = styled.img`\r\n  position: absolute;\r\n  width: 1.5em;\r\n  height: 1.5em;\r\n  top: 0.4em;\r\n  right: 0.4em;\r\n  font-size: 6vw;\r\n`;\r\n\r\nconst AddressFormBox = styled.div`\r\n  margin-bottom: 2em;\r\n  & label {\r\n    display: block;\r\n    font-size: 3.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & ${JoinInput}:not(:last-child) {\r\n    margin-bottom: 1em;\r\n  }\r\n  & ${JoinInput} {\r\n    padding: 0.5em;\r\n  }\r\n`;\r\n\r\nconst AddressSearchBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1em;\r\n`;\r\nconst AddressSearchInput = styled.input`\r\n  width: 10em;\r\n  padding: 0.6em 0.5em;\r\n  background: #f9f9f9;\r\n  box-shadow: 3px 3px 10px #c4c4c4;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 5px;\r\n  margin-right: 0.5em;\r\n  font-size: 4vw;\r\n`;\r\nconst AddressSearchButton = styled.button`\r\n  padding: 0.7em;\r\n  background: #265290;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 5px;\r\n  font-size: 3.5vw;\r\n`;\r\n\r\nconst AgreementBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90vw;\r\n  margin-bottom: 2.5em;\r\n`;\r\nconst AllAgreeBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 4.5vw;\r\n  font-weight: bold;\r\n  margin-bottom: 1em;\r\n`;\r\nconst AgreeCheckBox = styled.img`\r\n  width: 1.5em;\r\n  height: 1.5em;\r\n  margin-right: 0.5em;\r\n`;\r\nconst AgreeText = styled.div`\r\n  & span {\r\n    color: #265290;\r\n  }\r\n`;\r\n\r\nconst SubAgreeBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst AgreeDetail = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  position: absolute;\r\n  right: 0;\r\n  transform: rotate(-90deg);\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst JoinButton = styled.button`\r\n  width: 80vw;\r\n  font-size: 4.5vw;\r\n  padding: 0.8em 0;\r\n  text-align: center;\r\n  color: #fff;\r\n  background: #265290;\r\n  border: none;\r\n  outline: none;\r\n  margin-bottom: 1.5em;\r\n`;\r\n\r\nfunction Join():JSX.Element {\r\n  const initialInputs = {\r\n    email: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n      duplicationCheck: false,\r\n      code: '',\r\n      certificationCheck: false,\r\n    },\r\n    nickname: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    passwd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    passwdCheck: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    address: {\r\n      zipcode: '',\r\n      baseAddress: '',\r\n      detailAddress: '',\r\n    },\r\n    agreement: {\r\n      all: false,\r\n      agree1: false,\r\n      agree2: false,\r\n      agree3: false,\r\n    },\r\n  };\r\n\r\n  const [showsModal, setShowsModal] = useState(false);\r\n  const [inputs, setInputs] = useState(initialInputs);\r\n  const emailCertificationBox = useRef<HTMLInputElement>(null);\r\n  const history = useHistory();\r\n\r\n  const {\r\n    email,\r\n    nickname,\r\n    passwd,\r\n    passwdCheck,\r\n    address,\r\n    agreement,\r\n  } = inputs;\r\n\r\n  const inputChange = (name: 'email' | 'nickname' | 'passwd' | 'passwdCheck', value: string, state: 'check' | 'fail' | 'none', message: string, color: 'red' | 'blue') => {\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: {\r\n        ...inputs[name],\r\n        value,\r\n        state,\r\n        message,\r\n        color,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onChangeText = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'email':\r\n        if (/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(value)) {\r\n          inputChange(name, value, 'check', '', 'blue');\r\n        } else {\r\n          inputChange(name, value, 'fail', '이메일 형식이 아닙니다.', 'red');\r\n        }\r\n        break;\r\n      case 'nickname':\r\n        if (value.length < 4) {\r\n          inputChange(name, value, 'fail', '닉네임을 4자 이상 입력해주세요.', 'red');\r\n        } else {\r\n          try {\r\n            await nicknameDuplicationAsync(value);\r\n            inputChange(name, value, 'check', '', 'blue');\r\n          } catch {\r\n            inputChange(name, value, 'fail', '이미 사용중인 닉네임입니다.', 'red');\r\n          }\r\n        }\r\n        break;\r\n      case 'passwd':\r\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\r\n          inputChange(name, value, 'check', '', 'blue');\r\n        } else {\r\n          inputChange(name, value, 'fail', '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.', 'red');\r\n        }\r\n        break;\r\n      case 'passwdCheck':\r\n        if (value === passwd.value) {\r\n          inputChange(name, value, 'check', '', 'blue');\r\n        } else {\r\n          inputChange(name, value, 'fail', '비밀번호가 일치하지 않습니다.', 'red');\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onClickEmailDuplication = async () => {\r\n    try {\r\n      await emailDuplicationAsync(email.value);\r\n      setInputs({\r\n        ...inputs,\r\n        email: {\r\n          ...email,\r\n          duplicationCheck: true,\r\n        },\r\n      });\r\n      if (emailCertificationBox.current != null) {\r\n        emailCertificationBox.current.style.display = 'flex';\r\n      }\r\n    } catch {\r\n      setInputs({\r\n        ...inputs,\r\n        email: {\r\n          ...email,\r\n          message: '이미 사용중인 이메일입니다.',\r\n          color: 'red',\r\n          duplicationCheck: false,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const onChangeCode = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputs({\r\n      ...inputs,\r\n      email: {\r\n        ...email,\r\n        code: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onClickEmailCertification = async () => {\r\n    try {\r\n      await emailCertificationAsync(email.value, email.code);\r\n      setInputs({\r\n        ...inputs,\r\n        email: {\r\n          ...email,\r\n          message: '인증이 완료되었습니다.',\r\n          color: 'blue',\r\n          certificationCheck: true,\r\n        },\r\n      });\r\n      if (emailCertificationBox.current != null) {\r\n        emailCertificationBox.current.style.display = 'none';\r\n      }\r\n    } catch {\r\n      setInputs({\r\n        ...inputs,\r\n        email: {\r\n          ...email,\r\n          message: '코드를 확인해주세요.',\r\n          color: 'red',\r\n          certificationCheck: false,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const onCompleteAddressSelect = (data: AddressData) => {\r\n    setInputs({\r\n      ...inputs,\r\n      address: {\r\n        ...address,\r\n        zipcode: data.zonecode,\r\n        baseAddress: data.jibunAddress,\r\n      },\r\n    });\r\n    setShowsModal(false);\r\n  };\r\n\r\n  const onChangeDetailAddress = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputs({\r\n      ...inputs,\r\n      address: {\r\n        ...address,\r\n        detailAddress: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onClickAgree = (agree: 'all' | 'agree1' | 'agree2' | 'agree3') => {\r\n    if (agree === 'all') {\r\n      setInputs({\r\n        ...inputs,\r\n        agreement: {\r\n          all: !agreement.all,\r\n          agree1: !agreement.all,\r\n          agree2: !agreement.all,\r\n          agree3: !agreement.all,\r\n        },\r\n      });\r\n    } else {\r\n      const resultArr: boolean[] = [];\r\n\r\n      Object.keys(agreement).forEach((key) => {\r\n        if (key !== 'all' && (key === 'agree1' || key === 'agree2' || key === 'agree3')) {\r\n          if (key === agree) {\r\n            resultArr.push(!agreement[key]);\r\n          } else {\r\n            resultArr.push(agreement[key]);\r\n          }\r\n        }\r\n      });\r\n\r\n      if (agree === 'agree1' || agree === 'agree2' || agree === 'agree3') {\r\n        setInputs({\r\n          ...inputs,\r\n          agreement: {\r\n            ...agreement,\r\n            all: resultArr.every((value) => value === true),\r\n            [agree]: !agreement[agree],\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onsubmitJoin = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!email.certificationCheck) {\r\n      alert('이메일 인증을 진행해주세요.');\r\n    } else if (nickname.state !== 'check') {\r\n      alert('닉네임이 중복되었거나 형식이 맞지 않습니다.');\r\n    } else if (passwd.state !== 'check') {\r\n      alert('비밀번호 형식이 맞지 않습니다.');\r\n    } else if (passwdCheck.state !== 'check') {\r\n      alert('비밀번호가 일치하지 않습니다.');\r\n    } else if (address.zipcode === '') {\r\n      alert('주소를 입력해주세요.');\r\n    } else if (!agreement.agree1 || !agreement.agree2) {\r\n      alert('필수 약관 항목에 동의해주세요.');\r\n    } else {\r\n      await joinRequestAsync(email.value, nickname.value, passwd.value, `${address.baseAddress} ${address.detailAddress}`);\r\n      alert('회원가입이 완료되었습니다.');\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Positional>\r\n      <Header>\r\n        <BackLink to=\"/\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>회원가입</h1>\r\n      </Header>\r\n      <Main>\r\n        <JoinForm method=\"post\" onSubmit={onsubmitJoin}>\r\n          <JoinInputBox>\r\n            <label htmlFor=\"email\">이메일</label>\r\n            <JoinInput>\r\n              <Input required type=\"email\" id=\"email\" name=\"email\" onChange={onChangeText} value={email.value} disabled={email.duplicationCheck} />\r\n              <CheckLogo src={`/images/icons/${email.state}.png`} />\r\n              <CertificationRequest style={{ display: email.state === 'check' && !email.certificationCheck ? 'block' : 'none' }} type=\"button\" onClick={onClickEmailDuplication}>인증요청</CertificationRequest>\r\n            </JoinInput>\r\n            <CertificationBox ref={emailCertificationBox}>\r\n              <CertificationInputBox>\r\n                <CertificationInput name=\"certification\" onChange={onChangeCode} value={email.code} />\r\n                <CertificationButton type=\"button\" onClick={onClickEmailCertification}>확인</CertificationButton>\r\n              </CertificationInputBox>\r\n            </CertificationBox>\r\n            <InputMessage style={{ color: email.color }}>{email.message}</InputMessage>\r\n          </JoinInputBox>\r\n          <JoinInputBox>\r\n            <label htmlFor=\"nickname\">닉네임</label>\r\n            <JoinInput>\r\n              <Input required type=\"text\" maxLength={10} id=\"nickname\" name=\"nickname\" onChange={onChangeText} value={nickname.value} />\r\n              <CheckLogo src={`/images/icons/${nickname.state}.png`} />\r\n            </JoinInput>\r\n            <InputMessage style={{ color: nickname.color }}>{nickname.message}</InputMessage>\r\n          </JoinInputBox>\r\n          <JoinInputBox>\r\n            <label htmlFor=\"passwd\">비밀번호</label>\r\n            <JoinInput>\r\n              <Input maxLength={20} required type=\"password\" id=\"passwd\" name=\"passwd\" onChange={onChangeText} value={passwd.value} />\r\n              <CheckLogo src={`/images/icons/${passwd.state}.png`} />\r\n            </JoinInput>\r\n            <InputMessage style={{ color: passwd.color }}>{passwd.message}</InputMessage>\r\n          </JoinInputBox>\r\n          <JoinInputBox>\r\n            <label htmlFor=\"passwdCheck\">비밀번호 확인</label>\r\n            <JoinInput>\r\n              <Input maxLength={20} required type=\"password\" id=\"passwdCheck\" name=\"passwdCheck\" onChange={onChangeText} value={passwdCheck.value} />\r\n              <CheckLogo src={`/images/icons/${passwdCheck.state}.png`} />\r\n            </JoinInput>\r\n            <InputMessage style={{ color: passwdCheck.color }}>{passwdCheck.message}</InputMessage>\r\n          </JoinInputBox>\r\n          <AddressFormBox>\r\n            <label>주소</label>\r\n            <AddressSearchBox>\r\n              <AddressSearchInput disabled value={address.zipcode} />\r\n              <AddressSearchButton type=\"button\" onClick={() => setShowsModal(true)}>우편번호 검색</AddressSearchButton>\r\n            </AddressSearchBox>\r\n            <JoinInput>\r\n              <Input type=\"text\" disabled placeholder=\"상세 주소\" value={address.baseAddress} />\r\n            </JoinInput>\r\n            <JoinInput>\r\n              <Input type=\"text\" placeholder=\"나머지 주소\" onChange={onChangeDetailAddress} value={address.detailAddress} />\r\n            </JoinInput>\r\n          </AddressFormBox>\r\n          <AgreementBox>\r\n            <AllAgreeBox onClick={() => onClickAgree('all')}>\r\n              <AgreeCheckBox src={`/images/icons/${agreement.all ? 'check' : 'check_default'}.png`} />\r\n              <AgreeText>전체 약관에 동의합니다.</AgreeText>\r\n            </AllAgreeBox>\r\n            <SubAgreeBox onClick={() => onClickAgree('agree1')}>\r\n              <AgreeCheckBox src={`/images/icons/${agreement.agree1 ? 'check' : 'check_default'}.png`} />\r\n              <AgreeText>서비스 이용약관 <span>(필수)</span></AgreeText>\r\n              <AgreeDetail src=\"/images/icons/back.png\" />\r\n            </SubAgreeBox>\r\n            <SubAgreeBox onClick={() => onClickAgree('agree2')}>\r\n              <AgreeCheckBox src={`/images/icons/${agreement.agree2 ? 'check' : 'check_default'}.png`} />\r\n              <AgreeText>개인정보 처리방침 <span>(필수)</span></AgreeText>\r\n              <AgreeDetail src=\"/images/icons/back.png\" />\r\n            </SubAgreeBox>\r\n            <SubAgreeBox onClick={() => onClickAgree('agree3')}>\r\n              <AgreeCheckBox src={`/images/icons/${agreement.agree3 ? 'check' : 'check_default'}.png`} />\r\n              <AgreeText>이벤트 마케팅 수신 동의 <span>(선택)</span></AgreeText>\r\n              <AgreeDetail src=\"/images/icons/back.png\" />\r\n            </SubAgreeBox>\r\n          </AgreementBox>\r\n          <ButtonWrapper>\r\n            <JoinButton type=\"submit\">회원가입</JoinButton>\r\n          </ButtonWrapper>\r\n        </JoinForm>\r\n      </Main>\r\n      <SearchModal style={{ display: showsModal ? 'flex' : 'none' }}>\r\n        <CloseButton src=\"/images/icons/x.png\" onClick={() => setShowsModal(false)} />\r\n        <DaumPostCode onComplete={onCompleteAddressSelect} />\r\n      </SearchModal>\r\n    </Positional>\r\n  );\r\n}\r\n\r\nexport default Join;\r\n","/home/workspace/cors_market/www/cors/front/src/api/userApi.ts",[],"/home/workspace/cors_market/www/cors/front/src/api/chattingApi.ts",[],"/home/workspace/cors_market/www/cors/front/src/features/detailPostView/DetailPostContent.tsx",[],"/home/workspace/cors_market/www/cors/front/src/features/addPost/SearchBook.tsx",[],"/home/workspace/cors_market/www/cors/front/src/features/postList/InfiniteScrollList.tsx",["110"],"/home/workspace/cors_market/www/cors/front/src/features/postList/Header.tsx",[],"/home/workspace/cors_market/www/cors/front/src/utils/categoryFormatUtil.ts",["111"],"/home/workspace/cors_market/www/cors/front/src/App.tsx",[],"/home/workspace/cors_market/www/cors/front/src/rootSaga.ts",[],"/home/workspace/cors_market/www/cors/front/src/features/login/userSlice.ts",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"/home/workspace/cors_market/www/cors/front/src/features/login/userSaga.ts",["128","129","130"],"/home/workspace/cors_market/www/cors/front/src/features/detailPostView/DetailPostView.tsx",[],"/home/workspace/cors_market/www/cors/front/src/features/chatting/ChattingList.tsx",[],"/home/workspace/cors_market/www/cors/front/src/reportWebVitals.ts",["131"],{"ruleId":"132","severity":1,"message":"133","line":12,"column":38,"nodeType":"134","messageId":"135","endLine":12,"endColumn":44},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":503,"column":7,"nodeType":"150","messageId":"151","endLine":503,"endColumn":31},{"ruleId":"148","severity":1,"message":"149","line":505,"column":7,"nodeType":"150","messageId":"151","endLine":505,"endColumn":40},{"ruleId":"148","severity":1,"message":"149","line":507,"column":7,"nodeType":"150","messageId":"151","endLine":507,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":509,"column":7,"nodeType":"150","messageId":"151","endLine":509,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":511,"column":7,"nodeType":"150","messageId":"151","endLine":511,"endColumn":27},{"ruleId":"148","severity":1,"message":"149","line":513,"column":7,"nodeType":"150","messageId":"151","endLine":513,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":516,"column":7,"nodeType":"150","messageId":"151","endLine":516,"endColumn":30},{"ruleId":"152","severity":1,"message":"153","line":11,"column":11,"nodeType":"154","messageId":"155","endLine":11,"endColumn":14,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":4,"column":28,"nodeType":"159","messageId":"160","endLine":4,"endColumn":60},{"ruleId":"132","severity":1,"message":"133","line":44,"column":31,"nodeType":"134","messageId":"135","endLine":44,"endColumn":37},{"ruleId":"132","severity":1,"message":"133","line":47,"column":37,"nodeType":"134","messageId":"135","endLine":47,"endColumn":43},{"ruleId":"132","severity":1,"message":"133","line":59,"column":32,"nodeType":"134","messageId":"135","endLine":59,"endColumn":38},{"ruleId":"132","severity":1,"message":"133","line":62,"column":39,"nodeType":"134","messageId":"135","endLine":62,"endColumn":45},{"ruleId":"132","severity":1,"message":"133","line":71,"column":39,"nodeType":"134","messageId":"135","endLine":71,"endColumn":45},{"ruleId":"132","severity":1,"message":"133","line":74,"column":46,"nodeType":"134","messageId":"135","endLine":74,"endColumn":52},{"ruleId":"132","severity":1,"message":"133","line":82,"column":33,"nodeType":"134","messageId":"135","endLine":82,"endColumn":39},{"ruleId":"132","severity":1,"message":"133","line":85,"column":40,"nodeType":"134","messageId":"135","endLine":85,"endColumn":46},{"ruleId":"132","severity":1,"message":"133","line":93,"column":37,"nodeType":"134","messageId":"135","endLine":93,"endColumn":43},{"ruleId":"132","severity":1,"message":"133","line":96,"column":44,"nodeType":"134","messageId":"135","endLine":96,"endColumn":50},{"ruleId":"132","severity":1,"message":"133","line":104,"column":40,"nodeType":"134","messageId":"135","endLine":104,"endColumn":46},{"ruleId":"132","severity":1,"message":"133","line":107,"column":47,"nodeType":"134","messageId":"135","endLine":107,"endColumn":53},{"ruleId":"132","severity":1,"message":"133","line":115,"column":38,"nodeType":"134","messageId":"135","endLine":115,"endColumn":44},{"ruleId":"132","severity":1,"message":"133","line":118,"column":45,"nodeType":"134","messageId":"135","endLine":118,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":126,"column":42,"nodeType":"134","messageId":"135","endLine":126,"endColumn":48},{"ruleId":"132","severity":1,"message":"133","line":129,"column":49,"nodeType":"134","messageId":"135","endLine":129,"endColumn":55},{"ruleId":"132","severity":1,"message":"161","line":1,"column":44,"nodeType":"134","messageId":"135","endLine":1,"endColumn":54},{"ruleId":"152","severity":1,"message":"153","line":27,"column":103,"nodeType":"154","messageId":"155","endLine":27,"endColumn":106,"suggestions":"162"},{"ruleId":"148","severity":1,"message":"149","line":42,"column":5,"nodeType":"150","messageId":"151","endLine":42,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":3,"column":25,"nodeType":"159","messageId":"160","endLine":3,"endColumn":57},"@typescript-eslint/no-unused-vars","'action' is defined but never used.","Identifier","unusedVar","lines-around-directive",["163"],"no-spaced-func",["164"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-alert","Unexpected alert.","CallExpression","unexpected","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["165","166"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","'getContext' is defined but never used.",["167","168"],"padding-line-between-statements","func-call-spacing",{"messageId":"169","fix":"170","desc":"171"},{"messageId":"172","fix":"173","desc":"174"},{"messageId":"169","fix":"175","desc":"171"},{"messageId":"172","fix":"176","desc":"174"},"suggestUnknown",{"range":"177","text":"178"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"177","text":"179"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"180","text":"178"},{"range":"180","text":"179"},[407,410],"unknown","never",[832,835]]