[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSlice.ts":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSaga.ts":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\mockdata.ts":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx":"12","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts":"13","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx":"14","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx":"15","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx":"16","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx":"17","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts":"18","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts":"19"},{"size":682,"mtime":1612790771656,"results":"20","hashOfConfig":"21"},{"size":16825,"mtime":1612794419325,"results":"22","hashOfConfig":"21"},{"size":5786,"mtime":1612790771674,"results":"23","hashOfConfig":"21"},{"size":1611,"mtime":1612332820848,"results":"24","hashOfConfig":"21"},{"size":987,"mtime":1612790771658,"results":"25","hashOfConfig":"21"},{"size":3203,"mtime":1612332820842,"results":"26","hashOfConfig":"21"},{"size":3609,"mtime":1612790898005,"results":"27","hashOfConfig":"21"},{"size":9826,"mtime":1612332820847,"results":"28","hashOfConfig":"21"},{"size":833,"mtime":1612789505469,"results":"29","hashOfConfig":"21"},{"size":214,"mtime":1612332820862,"results":"30","hashOfConfig":"21"},{"size":1378,"mtime":1612793898721,"results":"31","hashOfConfig":"21"},{"size":2002,"mtime":1612790347782,"results":"32","hashOfConfig":"21"},{"size":440,"mtime":1611271238964,"results":"33","hashOfConfig":"21"},{"size":3016,"mtime":1612332820840,"results":"34","hashOfConfig":"21"},{"size":1999,"mtime":1612794323074,"results":"35","hashOfConfig":"21"},{"size":1337,"mtime":1612332820845,"results":"36","hashOfConfig":"21"},{"size":963,"mtime":1612790988823,"results":"37","hashOfConfig":"21"},{"size":1622,"mtime":1612332820849,"results":"38","hashOfConfig":"21"},{"size":1380,"mtime":1612790771659,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s7se5s",{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx",["89","90","91","92","93","94","95"],"import React, { useRef, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DaumPostCode, { AddressData } from 'react-daum-postcode';\nimport { emailCertificationAsync, emailDuplicationAsync, joinRequestAsync, nicknameDuplicationAsync } from '../../api/joinApi';\n\nconst Positional = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  font-size: 4.5vw;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  border-bottom: 1px solid #e0e0e0;\n  padding: 0.8em 0;\n  & h1 {\n    font-size: 4.5vw;\n    font-weight: 400;\n  }\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 1.5em 0;\n  display: flex;\n  justify-content: center;\n  overflow: auto;\n`;\n\nconst BackLink = styled(Link)`\n  position: absolute;\n  left: 0.5em;\n`;\n\nconst BackLogo = styled.img`\n  width: 1.8em;\n  height: 1.8em;\n`;\n\nconst JoinForm = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  & > div:last-child {\n    margin-bottom: 1.5em;\n  }\n  `;\n\nconst JoinInputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1em;\n  & label {\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  `;\n\nconst JoinInput = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 0.5em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 4vw;\n  background: none;\n  border: none;\n  outline: none;\n`;\n\nconst CheckLogo = styled.img`\n  width: 1.2em;\n  height: 1.2em;\n  flex-grow: 1;\n  flex-shrink: 0;\n`;\n\nconst CertificationRequest = styled.button`\n  position: absolute;\n  right: 0;\n  font-size: 3vw;\n  font-weight: bold;\n  padding: 1em 1.5em;\n  background: #265290;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n`;\n\nconst CertificationBox = styled.div`\n  display: none;\n  flex-direction: column;\n  margin-top: 0.5em;\n`;\n\nconst CertificationInputBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CertificationInput = styled.input`\n  width: 10em;\n  font-size: 4vw;\n  padding: 0.5em 1em;\n  margin-right: 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n`;\nconst CertificationButton = styled.button`\n  font-size: 4vw;\n  font-weight: bold;\n  padding: 0.5em 1em;\n  background: #265290;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n`;\n\nconst InputMessage = styled.p`\n  font-size: 2vw;\n  margin-top: 1em;\n`;\n\nconst SearchModal = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  background: #5c5c5c55;\n`;\n\nconst CloseButton = styled.img`\n  position: absolute;\n  width: 1.5em;\n  height: 1.5em;\n  top: 0.4em;\n  right: 0.4em;\n  font-size: 6vw;\n`;\n\nconst AddressFormBox = styled.div`\n  margin-bottom: 2em;\n  & label {\n    display: block;\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  & ${JoinInput}:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  & ${JoinInput} {\n    padding: 0.5em;\n  }\n`;\n\nconst AddressSearchBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1em;\n`;\nconst AddressSearchInput = styled.input`\n  width: 10em;\n  padding: 0.6em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  margin-right: 0.5em;\n  font-size: 4vw;\n`;\nconst AddressSearchButton = styled.button`\n  padding: 0.7em;\n  background: #265290;\n  color: #fff;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  font-size: 3.5vw;\n`;\n\nconst AgreementBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90vw;\n  margin-bottom: 2.5em;\n`;\nconst AllAgreeBox = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 4.5vw;\n  font-weight: bold;\n  margin-bottom: 1em;\n`;\nconst AgreeCheckBox = styled.img`\n  width: 1.5em;\n  height: 1.5em;\n  margin-right: 0.5em;\n`;\nconst AgreeText = styled.div`\n  & span {\n    color: #265290;\n  }\n`;\n\nconst SubAgreeBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-size: 4vw;\n  margin-bottom: 1em;\n`;\n\nconst AgreeDetail = styled.img`\n  width: 1em;\n  height: 1em;\n  position: absolute;\n  right: 0;\n  transform: rotate(-90deg);\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst JoinButton = styled.button`\n  width: 80vw;\n  font-size: 4.5vw;\n  padding: 0.8em 0;\n  text-align: center;\n  color: #fff;\n  background: #265290;\n  border: none;\n  outline: none;\n  margin-bottom: 1.5em;\n`;\n\nfunction Join():JSX.Element {\n  const initialInputs = {\n    email: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n      duplicationCheck: false,\n      code: '',\n      certificationCheck: false,\n    },\n    nickname: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwd: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwdCheck: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    address: {\n      zipcode: '',\n      baseAddress: '',\n      detailAddress: '',\n    },\n    agreement: {\n      all: false,\n      agree1: false,\n      agree2: false,\n      agree3: false,\n    },\n  };\n\n  const [showsModal, setShowsModal] = useState(false);\n  const [inputs, setInputs] = useState(initialInputs);\n  const emailCertificationBox = useRef<HTMLInputElement>(null);\n  const history = useHistory();\n\n  const {\n    email,\n    nickname,\n    passwd,\n    passwdCheck,\n    address,\n    agreement,\n  } = inputs;\n\n  const inputChange = (name: 'email' | 'nickname' | 'passwd' | 'passwdCheck', value: string, state: 'check' | 'fail' | 'none', message: string, color: 'red' | 'blue') => {\n    setInputs({\n      ...inputs,\n      [name]: {\n        ...inputs[name],\n        value,\n        state,\n        message,\n        color,\n      },\n    });\n  };\n\n  const onChangeText = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        if (/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '이메일 형식이 아닙니다.', 'red');\n        }\n        break;\n      case 'nickname':\n        if (value.length < 4) {\n          inputChange(name, value, 'fail', '닉네임을 4자 이상 입력해주세요.', 'red');\n        } else {\n          try {\n            await nicknameDuplicationAsync(value);\n            inputChange(name, value, 'check', '', 'blue');\n          } catch {\n            inputChange(name, value, 'fail', '이미 사용중인 닉네임입니다.', 'red');\n          }\n        }\n        break;\n      case 'passwd':\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.', 'red');\n        }\n        break;\n      case 'passwdCheck':\n        if (value === passwd.value) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '비밀번호가 일치하지 않습니다.', 'red');\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onClickEmailDuplication = async () => {\n    try {\n      await emailDuplicationAsync(email.value);\n      setInputs({\n        ...inputs,\n        email: {\n          ...email,\n          duplicationCheck: true,\n        },\n      });\n      if (emailCertificationBox.current != null) {\n        emailCertificationBox.current.style.display = 'flex';\n      }\n    } catch {\n      setInputs({\n        ...inputs,\n        email: {\n          ...email,\n          message: '이미 사용중인 이메일입니다.',\n          color: 'red',\n          duplicationCheck: false,\n        },\n      });\n    }\n  };\n\n  const onChangeCode = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      email: {\n        ...email,\n        code: e.target.value,\n      },\n    });\n  };\n\n  const onClickEmailCertification = async () => {\n    try {\n      await emailCertificationAsync(email.value, email.code);\n      setInputs({\n        ...inputs,\n        email: {\n          ...email,\n          message: '인증이 완료되었습니다.',\n          color: 'blue',\n          certificationCheck: true,\n        },\n      });\n      if (emailCertificationBox.current != null) {\n        emailCertificationBox.current.style.display = 'none';\n      }\n    } catch {\n      setInputs({\n        ...inputs,\n        email: {\n          ...email,\n          message: '코드를 확인해주세요.',\n          color: 'red',\n          certificationCheck: false,\n        },\n      });\n    }\n  };\n\n  const onCompleteAddressSelect = (data: AddressData) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        zipcode: data.zonecode,\n        baseAddress: data.jibunAddress,\n      },\n    });\n    setShowsModal(false);\n  };\n\n  const onChangeDetailAddress = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        detailAddress: e.target.value,\n      },\n    });\n  };\n\n  const onClickAgree = (agree: 'all' | 'agree1' | 'agree2' | 'agree3') => {\n    if (agree === 'all') {\n      setInputs({\n        ...inputs,\n        agreement: {\n          all: !agreement.all,\n          agree1: !agreement.all,\n          agree2: !agreement.all,\n          agree3: !agreement.all,\n        },\n      });\n    } else {\n      const resultArr: boolean[] = [];\n\n      Object.keys(agreement).forEach((key) => {\n        if (key !== 'all' && (key === 'agree1' || key === 'agree2' || key === 'agree3')) {\n          if (key === agree) {\n            resultArr.push(!agreement[key]);\n          } else {\n            resultArr.push(agreement[key]);\n          }\n        }\n      });\n\n      if (agree === 'agree1' || agree === 'agree2' || agree === 'agree3') {\n        setInputs({\n          ...inputs,\n          agreement: {\n            ...agreement,\n            all: resultArr.every((value) => value === true),\n            [agree]: !agreement[agree],\n          },\n        });\n      }\n    }\n  };\n\n  const onsubmitJoin = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!email.certificationCheck) {\n      alert('이메일 인증을 진행해주세요.');\n    } else if (nickname.state !== 'check') {\n      alert('닉네임이 중복되었거나 형식이 맞지 않습니다.');\n    } else if (passwd.state !== 'check') {\n      alert('비밀번호 형식이 맞지 않습니다.');\n    } else if (passwdCheck.state !== 'check') {\n      alert('비밀번호가 일치하지 않습니다.');\n    } else if (address.zipcode === '') {\n      alert('주소를 입력해주세요.');\n    } else if (!agreement.agree1 || !agreement.agree2) {\n      alert('필수 약관 항목에 동의해주세요.');\n    } else {\n      await joinRequestAsync(email.value, nickname.value, passwd.value, `${address.baseAddress} ${address.detailAddress}`);\n      alert('회원가입이 완료되었습니다.');\n      history.push('/');\n    }\n  };\n\n  return (\n    <Positional>\n      <Header>\n        <BackLink to=\"/\">\n          <BackLogo src=\"/images/icons/back.png\" />\n        </BackLink>\n        <h1>회원가입</h1>\n      </Header>\n      <Main>\n        <JoinForm method=\"post\" onSubmit={onsubmitJoin}>\n          <JoinInputBox>\n            <label htmlFor=\"email\">이메일</label>\n            <JoinInput>\n              <Input required type=\"email\" id=\"email\" name=\"email\" onChange={onChangeText} value={email.value} disabled={email.duplicationCheck} />\n              <CheckLogo src={`/images/icons/${email.state}.png`} />\n              <CertificationRequest style={{ display: email.state === 'check' && !email.certificationCheck ? 'block' : 'none' }} type=\"button\" onClick={onClickEmailDuplication}>인증요청</CertificationRequest>\n            </JoinInput>\n            <CertificationBox ref={emailCertificationBox}>\n              <CertificationInputBox>\n                <CertificationInput name=\"certification\" onChange={onChangeCode} value={email.code} />\n                <CertificationButton type=\"button\" onClick={onClickEmailCertification}>확인</CertificationButton>\n              </CertificationInputBox>\n            </CertificationBox>\n            <InputMessage style={{ color: email.color }}>{email.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"nickname\">닉네임</label>\n            <JoinInput>\n              <Input required type=\"text\" maxLength={10} id=\"nickname\" name=\"nickname\" onChange={onChangeText} value={nickname.value} />\n              <CheckLogo src={`/images/icons/${nickname.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: nickname.color }}>{nickname.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwd\">비밀번호</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwd\" name=\"passwd\" onChange={onChangeText} value={passwd.value} />\n              <CheckLogo src={`/images/icons/${passwd.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwd.color }}>{passwd.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwdCheck\">비밀번호 확인</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwdCheck\" name=\"passwdCheck\" onChange={onChangeText} value={passwdCheck.value} />\n              <CheckLogo src={`/images/icons/${passwdCheck.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwdCheck.color }}>{passwdCheck.message}</InputMessage>\n          </JoinInputBox>\n          <AddressFormBox>\n            <label>주소</label>\n            <AddressSearchBox>\n              <AddressSearchInput disabled value={address.zipcode} />\n              <AddressSearchButton type=\"button\" onClick={() => setShowsModal(true)}>우편번호 검색</AddressSearchButton>\n            </AddressSearchBox>\n            <JoinInput>\n              <Input type=\"text\" disabled placeholder=\"상세 주소\" value={address.baseAddress} />\n            </JoinInput>\n            <JoinInput>\n              <Input type=\"text\" placeholder=\"나머지 주소\" onChange={onChangeDetailAddress} value={address.detailAddress} />\n            </JoinInput>\n          </AddressFormBox>\n          <AgreementBox>\n            <AllAgreeBox onClick={() => onClickAgree('all')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.all ? 'check' : 'check_default'}.png`} />\n              <AgreeText>전체 약관에 동의합니다.</AgreeText>\n            </AllAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree1')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree1 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>서비스 이용약관 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree2')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree2 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>개인정보 처리방침 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree3')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree3 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>이벤트 마케팅 수신 동의 <span>(선택)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n          </AgreementBox>\n          <ButtonWrapper>\n            <JoinButton type=\"submit\">회원가입</JoinButton>\n          </ButtonWrapper>\n        </JoinForm>\n      </Main>\n      <SearchModal style={{ display: showsModal ? 'flex' : 'none' }}>\n        <CloseButton src=\"/images/icons/x.png\" onClick={() => setShowsModal(false)} />\n        <DaumPostCode onComplete={onCompleteAddressSelect} />\n      </SearchModal>\n    </Positional>\n  );\n}\n\nexport default Join;\n",["96","97","98","99","100","101"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSlice.ts",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { memberInterface } from '../../interfaces/UserInterface';\r\n\r\nconst initialUser: memberInterface = {\r\n  nickname: '', // 닉네임\r\n  profileImg: '', // 프로필 이미지\r\n  latitude: 0, // 위도\r\n  longitude: 0, // 경도\r\n  role: '', // 권한\r\n  articles: [], // 아이디 만\r\n  wishList: [], // 아이디 만\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: initialUser,\r\n    isLoginLoading: false, // 로그인\r\n    isLoginSucceed: false,\r\n    isLoginError: null,\r\n    isLogoutLoading: false, // 로그아웃\r\n    isLogoutSucceed: false,\r\n    isLogoutError: null,\r\n    isModifyProfileLoading: false, // 프로필 수정\r\n    isModifyProfileSuccess: false,\r\n    isModifyProfileError: null,\r\n    isGetWishListLoading: false, // 내 찜목록 가져오기\r\n    isGetWishListSuccess: false,\r\n    isGetWishListError: null,\r\n    isAddWishListLoading: false, // 찜하기\r\n    isAddWishListSuccess: false,\r\n    isAddWishListError: null,\r\n    isRemoveWishListLoading: false, // 찜 해제하기\r\n    isRemoveWishListSuccess: false,\r\n    isRemoveWishListError: null,\r\n    isGetMySaleArticlesLoading: false, // 내 판매글 가져오기\r\n    isGetMySaleArticlesSuccess: false,\r\n    isGetMySaleArticlesError: null,\r\n    isGetMyPurchaseArticlesLoading: false, // 내 구매글 가져오기\r\n    isGetMyPurchaseArticlesSuccess: false,\r\n    isGetMyPurchaseArticlesError: null,\r\n  },\r\n  reducers: {\r\n    postLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n    },\r\n    postSocialLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n    },\r\n    postLoginRequestSuccess: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginSucceed = true;\r\n      state.user = action.payload;\r\n    },\r\n    postLoginRequestError: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginError = action.payload;\r\n    },\r\n    postLogoutRequest: (state, action) => {\r\n      state.isLogoutLoading = true;\r\n    },\r\n    postLogoutRequestSuccess: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutSucceed = true;\r\n      state.user = initialUser;\r\n    },\r\n    postLogoutRequestError: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutError = action.payload;\r\n    },\r\n    postModifyProfileRequest: (state, action) => {\r\n      state.isModifyProfileLoading = true;\r\n    },\r\n    postModifyProfileRequestSuccess: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileSuccess = true;\r\n    },\r\n    postModifyProfileRequestError: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileError = action.payload;\r\n    },\r\n    getWishListRequest: (state, action) => {\r\n      state.isGetWishListLoading = true;\r\n    },\r\n    getWishListRequestSuccess: (state, action) => {\r\n      state.isGetWishListLoading = false;\r\n      state.isGetWishListSuccess = true;\r\n    },\r\n    getWishListRequestError: (state, action) => {\r\n      state.isGetWishListLoading = false;\r\n      state.isGetWishListError = action.payload;\r\n    },\r\n    postAddWishListRequest: (state, action) => {\r\n      state.isAddWishListLoading = true;\r\n    },\r\n    postAddWishListRequestSuccess: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListSuccess = true;\r\n    },\r\n    postAddWishListRequestError: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListError = action.payload;\r\n    },\r\n    postRemoveWishListRequest: (state, action) => {\r\n      state.isRemoveWishListLoading = true;\r\n    },\r\n    postRemoveWishListRequestSuccess: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListSuccess = true;\r\n    },\r\n    postRemoveWishListRequestError: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListError = action.payload;\r\n    },\r\n    getMySaleArticleRequest: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = true;\r\n    },\r\n    getMySaleArticleRequestSuccess: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesSuccess = true;\r\n    },\r\n    getMySaleArticleRequestError: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesError = action.payload;\r\n    },\r\n    getMyPurchaseArticleRequest: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = true;\r\n    },\r\n    getMyPurchaseArticleRequestSuccess: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = false;\r\n      state.isGetMyPurchaseArticlesSuccess = true;\r\n    },\r\n    getMyPurchaseArticleRequestError: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = false;\r\n      state.isGetMyPurchaseArticlesError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  postModifyProfileRequest,\r\n  postModifyProfileRequestSuccess,\r\n  postModifyProfileRequestError,\r\n  getWishListRequest,\r\n  getWishListRequestSuccess,\r\n  getWishListRequestError,\r\n  postAddWishListRequest,\r\n  postAddWishListRequestSuccess,\r\n  postAddWishListRequestError,\r\n  postRemoveWishListRequest,\r\n  postRemoveWishListRequestSuccess,\r\n  postRemoveWishListRequestError,\r\n  getMySaleArticleRequest,\r\n  getMySaleArticleRequestSuccess,\r\n  getMySaleArticleRequestError,\r\n  getMyPurchaseArticleRequest,\r\n  getMyPurchaseArticleRequestSuccess,\r\n  getMyPurchaseArticleRequestError,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n",["118","119","120","121","122","123"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts",["124"],"import { PayloadAction } from '@reduxjs/toolkit';\nimport { all, takeLatest, put, fork, call } from 'redux-saga/effects';\nimport { addPostInterface } from '../../interfaces/PostList.interface';\nimport PostList, { PurchasePostList } from './mockdata';\n\nimport { addBookPostAPI, getBookPostAPI } from '../../api/postBookApi';\nimport { loadBookPostRequest, loadBookPostSuccess, loadBookPostError, addBookPostRequest, addBookPostError, addBookPostSuccess } from './postSlice';\n\ninterface addBookPostPayloadInterface {\n  data: addPostInterface\n}\ninterface loadSaleBookPost {\n  division: 'purchase' | 'sale',\n  categoty?: string\n}\nfunction* loadBookPost(action: PayloadAction<loadSaleBookPost>) {\n  try {\n    // const result = yield call(getBookPostAPI, action.payload.division);\n    let result = PostList;\n    if (action.payload.division === 'purchase') {\n      result = PurchasePostList;\n    }\n    yield put(loadBookPostSuccess(result));\n  } catch (err) {\n    yield put(loadBookPostError({ error: err.response.data }));\n  }\n}\nfunction* addBookPost(action: PayloadAction<addBookPostPayloadInterface>) {\n  try {\n    const result = yield call(addBookPostAPI, action.payload.data);\n    yield put(addBookPostSuccess({ result }));\n  } catch (err) {\n    yield put(addBookPostError({ error: err.response.data }));\n  }\n}\n\nfunction* watchLoadBookPost() {\n  yield takeLatest(loadBookPostRequest, loadBookPost);\n}\nfunction* watchAddBookPost() {\n  yield takeLatest(addBookPostRequest, addBookPost);\n}\n\nexport default function* postSaga():Generator {\n  yield all([\n    fork(watchAddBookPost),\n    fork(watchLoadBookPost),\n  ]);\n}\n",["125","126","127","128","129","130"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts",[],["131","132","133","134","135","136"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSaga.ts",["137"],"import { all, call, fork, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {\r\n  logoutAsync,\r\n  modifyProfileAsync,\r\n  postLoginAsync,\r\n  socialLoginAsync,\r\n} from '../../api/userApi';\r\nimport {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  postModifyProfileRequest,\r\n  getWishListRequest,\r\n  postAddWishListRequest,\r\n  postRemoveWishListRequest,\r\n  getMySaleArticleRequest,\r\n  getMyPurchaseArticleRequest,\r\n  postModifyProfileRequestError,\r\n  postModifyProfileRequestSuccess,\r\n} from './userSlice';\r\nimport { modifyProfileInterface } from '../../interfaces/UserInterface';\r\n\r\nfunction* postLoginRequestSaga(action: { payload: { email: string, passwd: string } }) {\r\n  try {\r\n    const loginUser = yield call(postLoginAsync, action.payload);\r\n    console.log(loginUser);\r\n    yield put({\r\n      type: postLoginRequestSuccess,\r\n      payload: loginUser,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error,\r\n    });\r\n    alert('로그인 정보를 확인하세요.');\r\n  }\r\n}\r\n\r\nfunction* postSocialLoginRequestSaga(action: { payload: { social: string } }) {\r\n  try {\r\n    yield call(socialLoginAsync, action.payload.social);\r\n\r\n    yield put({\r\n      type: postLoginRequestSuccess,\r\n      payload: 'social',\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postLogoutRequestSaga() {\r\n  try {\r\n    yield call(logoutAsync);\r\n\r\n    yield put({\r\n      type: postLogoutRequestSuccess,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLogoutRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postModifyProfileRequestSaga(action: {payload: modifyProfileInterface}) {\r\n  try {\r\n    yield call(modifyProfileAsync, action.payload);\r\n\r\n    yield put({\r\n      type: postModifyProfileRequestSuccess,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postModifyProfileRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* getWishListRequestSaga() {\r\n  yield console.log('찜목록 불러오기');\r\n}\r\n\r\nfunction* postAddWishListRequestSaga() {\r\n  yield console.log('찜하기');\r\n}\r\n\r\nfunction* postRemoveWishListRequestSaga() {\r\n  yield console.log('찜 해제하기');\r\n}\r\n\r\nfunction* getMySaleArticleRequestSaga() {\r\n  yield console.log('내 판매글 불러오기');\r\n}\r\n\r\nfunction* getMyPurchaseArticleRequestSaga() {\r\n  yield console.log('내 구매글 불러오기');\r\n}\r\n\r\nfunction* watchLogin(): Generator {\r\n  yield takeLatest(postLoginRequest, postLoginRequestSaga);\r\n  yield takeLatest(postSocialLoginRequest, postSocialLoginRequestSaga);\r\n  yield takeLatest(postLogoutRequest, postLogoutRequestSaga);\r\n}\r\n\r\nfunction* watchProfile(): Generator {\r\n  yield takeLatest(postModifyProfileRequest, postModifyProfileRequestSaga);\r\n}\r\n\r\nfunction* watchWishList(): Generator {\r\n  yield takeLatest(getWishListRequest, getWishListRequestSaga);\r\n  yield takeLatest(postAddWishListRequest, postAddWishListRequestSaga);\r\n  yield takeLatest(postRemoveWishListRequest, postRemoveWishListRequestSaga);\r\n}\r\n\r\nfunction* watchMyArticles(): Generator {\r\n  yield takeLatest(getMySaleArticleRequest, getMySaleArticleRequestSaga);\r\n  yield takeLatest(getMyPurchaseArticleRequest, getMyPurchaseArticleRequestSaga);\r\n}\r\n\r\nexport default function* loginSaga(): Generator {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchProfile),\r\n    fork(watchWishList),\r\n    fork(watchMyArticles),\r\n  ]);\r\n}\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\mockdata.ts",["138"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts",["139"],"import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",["140","141","142","143","144","145"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx",["146"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx",["147","148","149"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts",["150","151","152","153","154","155","156","157"],"import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport PostList, { dummyBookPost } from './mockdata';\nimport { articleInterface } from '../../interfaces/PostList.interface';\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    bookPost: [],\n    isLoadBookPostLoading: false,\n    isLoadBookPostDone: false,\n    isLoadBookPostError: false,\n    isAddBookPostLoading: false,\n    isAddBookPostDone: false,\n    isAddBookPostError: null,\n  },\n  reducers: {\n    loadBookPostRequest(state, action) {\n      state.isLoadBookPostLoading = true;\n    },\n    loadBookPostSuccess(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostDone = true;\n      state.bookPost = action.payload.data;\n    },\n    loadBookPostError(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostError = action.payload.error;\n    },\n    addBookPostRequest(state, action) {\n      state.isAddBookPostLoading = true;\n      state.isAddBookPostDone = false;\n    },\n    addBookPostSuccess(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = true;\n      // state.bookPost.unshift(dummyBookPost(action.payload));\n    },\n    addBookPostError(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = false;\n      state.isAddBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  loadBookPostRequest,\n  loadBookPostSuccess,\n  loadBookPostError,\n  addBookPostRequest,\n  addBookPostError,\n  addBookPostSuccess,\n} = postSlice.actions;\n\nexport default postSlice.reducer;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts",[],{"ruleId":"158","severity":1,"message":"159","line":503,"column":7,"nodeType":"160","messageId":"161","endLine":503,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":505,"column":7,"nodeType":"160","messageId":"161","endLine":505,"endColumn":40},{"ruleId":"158","severity":1,"message":"159","line":507,"column":7,"nodeType":"160","messageId":"161","endLine":507,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":509,"column":7,"nodeType":"160","messageId":"161","endLine":509,"endColumn":32},{"ruleId":"158","severity":1,"message":"159","line":511,"column":7,"nodeType":"160","messageId":"161","endLine":511,"endColumn":27},{"ruleId":"158","severity":1,"message":"159","line":513,"column":7,"nodeType":"160","messageId":"161","endLine":513,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":516,"column":7,"nodeType":"160","messageId":"161","endLine":516,"endColumn":30},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":44,"column":31,"nodeType":"176","messageId":"177","endLine":44,"endColumn":37},{"ruleId":"174","severity":1,"message":"175","line":47,"column":37,"nodeType":"176","messageId":"177","endLine":47,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":59,"column":32,"nodeType":"176","messageId":"177","endLine":59,"endColumn":38},{"ruleId":"174","severity":1,"message":"175","line":62,"column":39,"nodeType":"176","messageId":"177","endLine":62,"endColumn":45},{"ruleId":"174","severity":1,"message":"175","line":71,"column":39,"nodeType":"176","messageId":"177","endLine":71,"endColumn":45},{"ruleId":"174","severity":1,"message":"175","line":74,"column":46,"nodeType":"176","messageId":"177","endLine":74,"endColumn":52},{"ruleId":"174","severity":1,"message":"175","line":82,"column":33,"nodeType":"176","messageId":"177","endLine":82,"endColumn":39},{"ruleId":"174","severity":1,"message":"175","line":85,"column":40,"nodeType":"176","messageId":"177","endLine":85,"endColumn":46},{"ruleId":"174","severity":1,"message":"175","line":93,"column":37,"nodeType":"176","messageId":"177","endLine":93,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":96,"column":44,"nodeType":"176","messageId":"177","endLine":96,"endColumn":50},{"ruleId":"174","severity":1,"message":"175","line":104,"column":40,"nodeType":"176","messageId":"177","endLine":104,"endColumn":46},{"ruleId":"174","severity":1,"message":"175","line":107,"column":47,"nodeType":"176","messageId":"177","endLine":107,"endColumn":53},{"ruleId":"174","severity":1,"message":"175","line":115,"column":38,"nodeType":"176","messageId":"177","endLine":115,"endColumn":44},{"ruleId":"174","severity":1,"message":"175","line":118,"column":45,"nodeType":"176","messageId":"177","endLine":118,"endColumn":51},{"ruleId":"174","severity":1,"message":"175","line":126,"column":42,"nodeType":"176","messageId":"177","endLine":126,"endColumn":48},{"ruleId":"174","severity":1,"message":"175","line":129,"column":49,"nodeType":"176","messageId":"177","endLine":129,"endColumn":55},{"ruleId":"162","replacedBy":"178"},{"ruleId":"164","replacedBy":"179"},{"ruleId":"166","replacedBy":"180"},{"ruleId":"168","replacedBy":"181"},{"ruleId":"170","replacedBy":"182"},{"ruleId":"172","replacedBy":"183"},{"ruleId":"174","severity":1,"message":"184","line":6,"column":26,"nodeType":"176","messageId":"177","endLine":6,"endColumn":40},{"ruleId":"162","replacedBy":"185"},{"ruleId":"164","replacedBy":"186"},{"ruleId":"166","replacedBy":"187"},{"ruleId":"168","replacedBy":"188"},{"ruleId":"170","replacedBy":"189"},{"ruleId":"172","replacedBy":"190"},{"ruleId":"162","replacedBy":"191"},{"ruleId":"164","replacedBy":"192"},{"ruleId":"166","replacedBy":"193"},{"ruleId":"168","replacedBy":"194"},{"ruleId":"170","replacedBy":"195"},{"ruleId":"172","replacedBy":"196"},{"ruleId":"158","severity":1,"message":"159","line":41,"column":5,"nodeType":"160","messageId":"161","endLine":41,"endColumn":28},{"ruleId":"197","severity":1,"message":"198","line":307,"column":30,"nodeType":"199","messageId":"200","endLine":307,"endColumn":60},{"ruleId":"197","severity":1,"message":"198","line":3,"column":25,"nodeType":"199","messageId":"200","endLine":3,"endColumn":57},{"ruleId":"162","replacedBy":"201"},{"ruleId":"164","replacedBy":"202"},{"ruleId":"166","replacedBy":"203"},{"ruleId":"168","replacedBy":"204"},{"ruleId":"170","replacedBy":"205"},{"ruleId":"172","replacedBy":"206"},{"ruleId":"174","severity":1,"message":"207","line":63,"column":38,"nodeType":"176","messageId":"177","endLine":63,"endColumn":46},{"ruleId":"174","severity":1,"message":"208","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":24},{"ruleId":"174","severity":1,"message":"209","line":3,"column":39,"nodeType":"176","messageId":"177","endLine":3,"endColumn":50},{"ruleId":"174","severity":1,"message":"210","line":4,"column":10,"nodeType":"176","messageId":"177","endLine":4,"endColumn":20},{"ruleId":"174","severity":1,"message":"211","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":24},{"ruleId":"174","severity":1,"message":"212","line":1,"column":39,"nodeType":"176","messageId":"177","endLine":1,"endColumn":52},{"ruleId":"174","severity":1,"message":"213","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":16},{"ruleId":"174","severity":1,"message":"214","line":2,"column":20,"nodeType":"176","messageId":"177","endLine":2,"endColumn":33},{"ruleId":"174","severity":1,"message":"215","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":17,"column":32,"nodeType":"176","messageId":"177","endLine":17,"endColumn":38},{"ruleId":"174","severity":1,"message":"175","line":29,"column":31,"nodeType":"176","messageId":"177","endLine":29,"endColumn":37},{"ruleId":"174","severity":1,"message":"175","line":33,"column":31,"nodeType":"176","messageId":"177","endLine":33,"endColumn":37},"no-alert","Unexpected alert.","CallExpression","unexpected","lines-around-directive",["216"],"no-spaced-func",["217"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'action' is defined but never used.","Identifier","unusedVar",["216"],["217"],[],[],[],[],"'getBookPostAPI' is defined but never used.",["216"],["217"],[],[],[],[],["216"],["217"],[],[],[],[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["216"],["217"],[],[],[],[],"'isOppend' is defined but never used.","'RootStateOrAny' is defined but never used.","'useSelector' is defined but never used.","'useHistory' is defined but never used.","'createSelector' is defined but never used.","'PayloadAction' is defined but never used.","'PostList' is defined but never used.","'dummyBookPost' is defined but never used.","'articleInterface' is defined but never used.","padding-line-between-statements","func-call-spacing"]