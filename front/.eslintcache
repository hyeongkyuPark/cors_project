[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginSlice.ts":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx":"12","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts":"13","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\mockdata.ts":"14","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts":"15","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\loginAPI.ts":"16","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginSaga.ts":"17","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\joinSlice.ts":"18","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\joinSaga.ts":"19","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts":"20","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts":"21","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx":"22","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts":"23"},{"size":1622,"mtime":1612332820849,"results":"24","hashOfConfig":"25"},{"size":926,"mtime":1612332820837,"results":"26","hashOfConfig":"25"},{"size":1099,"mtime":1612332820835,"results":"27","hashOfConfig":"25"},{"size":1611,"mtime":1612332820848,"results":"28","hashOfConfig":"25"},{"size":1893,"mtime":1612332820830,"results":"29","hashOfConfig":"25"},{"size":865,"mtime":1611877801056,"results":"30","hashOfConfig":"25"},{"size":606,"mtime":1612142358681,"results":"31","hashOfConfig":"25"},{"size":3016,"mtime":1612332820840,"results":"32","hashOfConfig":"25"},{"size":974,"mtime":1612164425335,"results":"33","hashOfConfig":"25"},{"size":3203,"mtime":1612164425357,"results":"34","hashOfConfig":"25"},{"size":1337,"mtime":1612332820845,"results":"35","hashOfConfig":"25"},{"size":14935,"mtime":1612343046662,"results":"36","hashOfConfig":"25"},{"size":286,"mtime":1612164909049,"results":"37","hashOfConfig":"25"},{"size":9826,"mtime":1612332820847,"results":"38","hashOfConfig":"25"},{"size":308,"mtime":1612185752905,"results":"39","hashOfConfig":"25"},{"size":613,"mtime":1612167703531,"results":"40","hashOfConfig":"25"},{"size":2836,"mtime":1612164425346,"results":"41","hashOfConfig":"25"},{"size":5385,"mtime":1612330183032,"results":"42","hashOfConfig":"25"},{"size":3452,"mtime":1612330765741,"results":"43","hashOfConfig":"25"},{"size":225,"mtime":1611877801064,"results":"44","hashOfConfig":"25"},{"size":987,"mtime":1612329728514,"results":"45","hashOfConfig":"25"},{"size":2085,"mtime":1611877801026,"results":"46","hashOfConfig":"25"},{"size":440,"mtime":1611271238964,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1s7se5s",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts",["107","108","109","110","111","112","113","114"],"import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport PostList, { dummyBookPost } from './mockdata';\nimport { articleInterface } from '../../interfaces/PostList.interface';\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    bookPost: [],\n    isLoadBookPostLoading: false,\n    isLoadBookPostDone: false,\n    isLoadBookPostError: false,\n    isAddBookPostLoading: false,\n    isAddBookPostDone: false,\n    isAddBookPostError: null,\n  },\n  reducers: {\n    loadBookPostRequest(state, action) {\n      state.isLoadBookPostLoading = true;\n    },\n    loadBookPostSuccess(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostDone = true;\n      state.bookPost = action.payload.data;\n    },\n    loadBookPostError(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostError = action.payload.error;\n    },\n    addBookPostRequest(state, action) {\n      state.isAddBookPostLoading = true;\n      state.isAddBookPostDone = false;\n    },\n    addBookPostSuccess(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = true;\n      // state.bookPost.unshift(dummyBookPost(action.payload));\n    },\n    addBookPostError(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = false;\n      state.isAddBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  loadBookPostRequest,\n  loadBookPostSuccess,\n  loadBookPostError,\n  addBookPostRequest,\n  addBookPostError,\n  addBookPostSuccess,\n} = postSlice.actions;\n\nexport default postSlice.reducer;\n",["115","116","117","118","119","120"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginSlice.ts",["121","122"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst loginSlice = createSlice({\r\n  name: 'login',\r\n  initialState: {\r\n    user: null,\r\n    loginLoading: false,\r\n    loginSucceed: false,\r\n    loginError: null,\r\n  },\r\n  reducers: {\r\n    postLogin: (state, action) => ({\r\n      ...state,\r\n      loginLoading: true,\r\n      loginSucceed: false,\r\n      loginError: null,\r\n    }),\r\n    postSocialLogin: (state, action) => ({\r\n      ...state,\r\n      loginLoading: true,\r\n      loginSucceed: false,\r\n      loginError: null,\r\n    }),\r\n    postLoginSuccess: (state, action) => {\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        loginLoading: false,\r\n        loginSucceed: true,\r\n        loginError: null,\r\n        user: action.payload,\r\n      };\r\n    },\r\n    postLoginError: (state, action) => ({\r\n      ...state,\r\n      loginLoading: false,\r\n      loginSucceed: false,\r\n      loginError: action.payload,\r\n    }),\r\n  },\r\n});\r\nexport const {\r\n  postLogin,\r\n  postSocialLogin,\r\n  postLoginSuccess,\r\n  postLoginError } = loginSlice.actions;\r\nexport default loginSlice.reducer;\r\n",["123","124","125","126","127","128"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts",["129"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx",[],["130","131","132","133","134","135"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx",[],["136","137","138","139","140","141"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx",["142"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx",["143","144","145","146","147","148","149","150"],"import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DaumPostCode, { AddressData } from 'react-daum-postcode';\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\nimport {\n  onChangeText,\n  nicknameDuplicateCheck,\n  emailCertificationRequest,\n  emailCertificationCheck,\n  emailTypeCheckNone,\n  emailTypeCheckOk,\n  emailTypeCheckFail,\n  passwdCheckOk,\n  passwdCheckFail,\n  passwdSameOk,\n  passwdSameFail,\n  setAddress,\n  setAddressDetail,\n  setAllAgreeClick,\n  setAllAgree,\n  setAgree,\n  joinRequest,\n} from './joinSlice';\nimport checkIcon from './images/check.png';\n\nconst Positional = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  font-size: 4.5vw;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  border-bottom: 1px solid #e0e0e0;\n  padding: 0.8em 0;\n  & h1 {\n    font-size: 4.5vw;\n    font-weight: 400;\n  }\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 1.5em 0;\n  display: flex;\n  justify-content: center;\n  overflow: auto;\n`;\n\nconst BackLink = styled(Link)`\n  position: absolute;\n  left: 0.5em;\n`;\n\nconst BackLogo = styled.img`\n  width: 1.8em;\n  height: 1.8em;\n`;\n\nconst JoinForm = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  & > div:last-child {\n    margin-bottom: 1.5em;\n  }\n  `;\n\nconst JoinInputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1em;\n  & label {\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  `;\n\nconst JoinInput = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 0.5em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 4vw;\n  background: none;\n  border: none;\n  outline: none;\n`;\n\nconst CheckLogo = styled.img`\n  width: 1.2em;\n  height: 1.2em;\n  flex-grow: 1;\n  flex-shrink: 0;\n`;\n\nconst CertificationRequest = styled.button`\n  position: absolute;\n  right: 0;\n  font-size: 3vw;\n  font-weight: bold;\n  padding: 1em 1.5em;\n  background: #6f96e9;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n`;\n\nconst CertificationBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 0.5em;\n`;\n\nconst CertificationInputBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CertificationInput = styled.input`\n  width: 10em;\n  font-size: 4vw;\n  padding: 0.5em 1em;\n  margin-right: 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n`;\nconst CertificationButton = styled.button`\n  font-size: 4vw;\n  font-weight: bold;\n  padding: 0.5em 1em;\n  background: #6f96e9;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n`;\n\nconst CerticationMessage = styled.p`\n  font-size: 2vw;\n  margin-top: 1em;\n`;\n\nconst InputMessage = styled.p`\n  font-size: 2vw;\n  margin-top: 1em;\n`;\n\nconst SearchModal = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  background: #5c5c5c55;\n`;\n\nconst CloseButton = styled.img`\n  position: absolute;\n  width: 1.5em;\n  height: 1.5em;\n  top: 0.4em;\n  right: 0.4em;\n  font-size: 6vw;\n`;\n\nconst AddressFormBox = styled.div`\n  margin-bottom: 2em;\n  & label {\n    display: block;\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  & ${JoinInput}:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  & ${JoinInput} {\n    padding: 0.5em;\n  }\n`;\n\nconst AddressSearchBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1em;\n`;\nconst AddressSearchInput = styled.input`\n  width: 10em;\n  padding: 0.6em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  margin-right: 0.5em;\n  font-size: 4vw;\n`;\nconst AddressSearchButton = styled.button`\n  padding: 0.7em;\n  background: #6f96e9;\n  color: #fff;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  font-size: 3.5vw;\n`;\n\nconst AgreementBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90vw;\n  margin-bottom: 2.5em;\n`;\nconst AllAgreeBox = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 4.5vw;\n  font-weight: bold;\n  margin-bottom: 1em;\n`;\nconst AgreeCheckBox = styled.img`\n  width: 1.5em;\n  height: 1.5em;\n  margin-right: 0.5em;\n`;\nconst AgreeText = styled.div`\n  & span {\n    color: #6f96e9;\n  }\n`;\n\nconst SubAgreeBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-size: 4vw;\n  margin-bottom: 1em;\n  & label {\n    width: 1.5em;\n    height: 1.5em;\n    margin-right: 0.5em;\n    background: url(${checkIcon});\n    background-size: 100% 100%;\n    background-position: center center;\n  }\n`;\n\nconst AgreeDetail = styled.img`\n  width: 1em;\n  height: 1em;\n  position: absolute;\n  right: 0;\n  transform: rotate(-90deg);\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst JoinButton = styled.button`\n  width: 80vw;\n  font-size: 4.5vw;\n  padding: 0.8em 0;\n  text-align: center;\n  color: #fff;\n  background: #6f96e9;\n  border: none;\n  outline: none;\n  margin-bottom: 1.5em;\n`;\n\nfunction Join():JSX.Element {\n  const history = useHistory();\n  const [showsModal, setShowsModal] = useState(false);\n  const dispatch = useDispatch();\n  const { email,\n    certification,\n    nickname,\n    passwd,\n    passwdCheck,\n    emailDuplication,\n    emailCertification,\n    nicknameDuplication,\n    address,\n    agreement,\n  } = useSelector((state: RootStateOrAny) => state.joinSlice);\n\n  const onClickCertification = () => {\n    dispatch(emailCertificationRequest(email.value));\n  };\n\n  const onClickCertificationCheck = () => {\n    dispatch(emailCertificationCheck({ email: email.value, code: certification.value }));\n  };\n\n  const onClickOpenModal = () => {\n    setShowsModal(true);\n  };\n\n  const onClickCloseModal = () => {\n    setShowsModal(false);\n  };\n\n  const OnCompleteSelectAddress = (data: AddressData) => {\n    dispatch(setAddress({ zipCode: data.zonecode, address: data.jibunAddress }));\n    setShowsModal(false);\n  };\n\n  const onChangeAddressDetail = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setAddressDetail(e.target.value));\n  };\n\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    switch (e.target.name) {\n      case ('email'):\n        if (/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(e.target.value)) {\n          dispatch(emailTypeCheckOk({ type: '' }));\n        } else if (e.target.value) {\n          dispatch(emailTypeCheckFail({ type: '' }));\n        } else {\n          dispatch(emailTypeCheckNone({ type: '' }));\n        }\n        break;\n      case ('nickname'):\n        dispatch(nicknameDuplicateCheck({ nickname: e.target.value }));\n        break;\n      case ('passwd'):\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(e.target.value)) {\n          dispatch(passwdCheckOk({ type: '' }));\n        } else {\n          dispatch(passwdCheckFail({ type: '' }));\n        }\n        if (passwdCheck.status === 'check') {\n          dispatch(passwdSameFail({ type: '' }));\n        }\n        break;\n      case ('passwdCheck'):\n        if (e.target.value === passwd.value) {\n          dispatch(passwdSameOk({ type: '' }));\n        } else {\n          dispatch(passwdSameFail({ type: '' }));\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (e.target.name === 'email'\n      || e.target.name === 'certification'\n      || e.target.name === 'nickname'\n      || e.target.name === 'passwd'\n      || e.target.name === 'passwdCheck'\n    ) {\n      dispatch(onChangeText({ name: e.target.name, value: e.target.value }));\n    }\n  };\n\n  const onClickAllAgree = () => {\n    if (agreement.all) {\n      dispatch(setAllAgreeClick(false));\n    } else {\n      dispatch(setAllAgreeClick(true));\n    }\n  };\n\n  const onClickAgree = (name: string) => {\n    const resultArr: boolean[] = [];\n\n    Object.keys(agreement).forEach((key) => {\n      if (key !== 'all') {\n        if (key === name) {\n          resultArr.push(!agreement[key]);\n        } else {\n          resultArr.push(agreement[key]);\n        }\n      }\n    });\n\n    if (agreement.all) {\n      dispatch(setAllAgree(false));\n    } else if (resultArr.every((value) => value === true)) {\n      dispatch(setAllAgree(true));\n    }\n    if (name === 'agree1' || name === 'agree2' || name === 'agree3') {\n      dispatch(setAgree({ name, check: !agreement[name] }));\n    }\n  };\n\n  const onSubmitJoin = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!emailCertification) {\n      alert('이메일 인증을 진행해주세요.');\n    } else if (nickname.status !== 'check') {\n      alert('닉네임이 중복되었거나 형식이 맞지 않습니다.');\n    } else if (passwd.status !== 'check') {\n      alert('비밀번호 형식이 맞지 않습니다.');\n    } else if (passwdCheck.status !== 'check') {\n      alert('비밀번호가 일치하지 않습니다.');\n    } else if (address.zipCode === '') {\n      alert('주소를 입력해주세요.');\n    } else if (!agreement.agree1 || !agreement.agree2) {\n      alert('필수 약관 항목에 동의해주세요.');\n    } else {\n      dispatch(joinRequest({ email: email.value, passwd: passwd.value, nickname: nickname.value, address: `${address.addressBase} ${address.addressDetail}` }));\n      history.push('/');\n    }\n  };\n\n  return (\n    <Positional>\n      <Header>\n        <BackLink to=\"/\">\n          <BackLogo src=\"/images/icons/back.png\" />\n        </BackLink>\n        <h1>회원가입</h1>\n      </Header>\n      <Main>\n        <JoinForm method=\"post\" onSubmit={onSubmitJoin}>\n          <JoinInputBox>\n            <label htmlFor=\"email\">이메일</label>\n            <JoinInput>\n              <Input required type=\"email\" id=\"email\" name=\"email\" onChange={onChangeInput} value={email.value} disabled={emailDuplication} />\n              <CheckLogo src={`/images/icons/${email.status}.png`} />\n              <CertificationRequest style={{ display: email.status === 'check' && !emailCertification ? 'block' : 'none' }} type=\"button\" onClick={onClickCertification}>인증요청</CertificationRequest>\n            </JoinInput>\n            <CertificationBox style={{ display: emailDuplication && !emailCertification ? 'flex' : 'none' }}>\n              <CertificationInputBox>\n                <CertificationInput name=\"certification\" onChange={onChangeInput} value={certification.value} />\n                <CertificationButton type=\"button\" onClick={onClickCertificationCheck}>확인</CertificationButton>\n              </CertificationInputBox>\n            </CertificationBox>\n            <InputMessage style={{ color: email.color }}>{email.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"nickname\">닉네임</label>\n            <JoinInput>\n              <Input required type=\"text\" maxLength={10} id=\"nickname\" name=\"nickname\" onChange={onChangeInput} value={nickname.value} />\n              <CheckLogo src={`/images/icons/${nickname.status}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: nickname.color }}>{nickname.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwd\">비밀번호</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwd\" name=\"passwd\" onChange={onChangeInput} value={passwd.value} />\n              <CheckLogo src={`/images/icons/${passwd.status}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwd.color }}>{passwd.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwdCheck\">비밀번호 확인</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwdCheck\" name=\"passwdCheck\" onChange={onChangeInput} value={passwdCheck.value} />\n              <CheckLogo src={`/images/icons/${passwdCheck.status}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwdCheck.color }}>{passwdCheck.message}</InputMessage>\n          </JoinInputBox>\n          <AddressFormBox>\n            <label>주소</label>\n            <AddressSearchBox>\n              <AddressSearchInput disabled onClick={onClickOpenModal} value={address.zipCode} />\n              <AddressSearchButton type=\"button\" onClick={onClickOpenModal}>우편번호 검색</AddressSearchButton>\n            </AddressSearchBox>\n            <JoinInput>\n              <Input type=\"text\" disabled placeholder=\"상세 주소\" value={address.addressBase} />\n            </JoinInput>\n            <JoinInput>\n              <Input onChange={onChangeAddressDetail} type=\"text\" placeholder=\"나머지 주소\" value={address.addressDetail} />\n            </JoinInput>\n          </AddressFormBox>\n          <AgreementBox>\n            <AllAgreeBox onClick={onClickAllAgree}>\n              <AgreeCheckBox src={`/images/icons/${agreement.all ? 'check' : 'check_default'}.png`} />\n              <AgreeText>전체 약관에 동의합니다.</AgreeText>\n            </AllAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree1')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree1 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>서비스 이용약관 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree2')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree2 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>개인정보 처리방침 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree3')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree3 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>이벤트 마케팅 수신 동의 <span>(선택)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n          </AgreementBox>\n          <ButtonWrapper>\n            <JoinButton type=\"submit\">회원가입</JoinButton>\n          </ButtonWrapper>\n        </JoinForm>\n      </Main>\n      <SearchModal style={{ display: showsModal ? 'flex' : 'none' }}>\n        <CloseButton src=\"\" onClick={onClickCloseModal} />\n        <DaumPostCode onComplete={OnCompleteSelectAddress} />\n      </SearchModal>\n    </Positional>\n  );\n}\n\nexport default Join;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts",[],["151","152","153","154","155","156"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\mockdata.ts",["157"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts",["158"],"import { all, fork } from 'redux-saga/effects';\n\nimport postSaga from './features/postList/postSaga';\nimport loginSaga from './features/login/LoginSaga';\nimport joinSaga from './features/join/joinSaga';\n\nexport default function* rootSaga() {\n  yield all([fork(postSaga), fork(loginSaga), fork(joinSaga)]);\n}\n",["159","160","161","162","163","164"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\loginAPI.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginSaga.ts",["165"],"import cookie from 'react-cookies';\r\nimport { all, call, fork, ForkEffect, put, takeLatest } from 'redux-saga/effects';\r\nimport { postLogin, postSocialLogin, postLoginSuccess, postLoginError } from './LoginSlice';\r\nimport { postLoginAsync, socialLoginAsync } from '../../api/loginAPI';\r\n\r\nfunction* postLoginSaga(action: { payload: { email: string, passwd: string } }) {\r\n  try {\r\n    const token = yield call(postLoginAsync, action.payload);\r\n\r\n    if (token.accessToken === '' || token.refreshToken === '') {\r\n      console.log('로그인 실패');\r\n      throw new Error('유저 정보 불일치');\r\n    } else {\r\n      console.log('로그인 성공');\r\n      const accessExpires = new Date();\r\n      accessExpires.setTime(accessExpires.getTime() + 1000 * 60 * 60 * 2);\r\n      const refreshExpires = new Date();\r\n      refreshExpires.setTime(refreshExpires.getTime() + 1000 * 60 * 60 * 24);\r\n\r\n      cookie.save(\r\n        'access_token',\r\n        token.accessToken,\r\n        {\r\n          path: '/',\r\n          expires: accessExpires,\r\n        },\r\n      );\r\n      cookie.save(\r\n        'refresh_token',\r\n        token.refreshToken,\r\n        {\r\n          path: '/',\r\n          expires: refreshExpires,\r\n        },\r\n      );\r\n\r\n      yield put({\r\n        type: postLoginSuccess,\r\n        payload: action.payload,\r\n      });\r\n    }\r\n  } catch (e) {\r\n    yield put({\r\n      type: postLoginError,\r\n      payload: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postSocialLoginSaga(action: { payload: { social: string } }) {\r\n  try {\r\n    const token = yield call(socialLoginAsync, action.payload.social);\r\n\r\n    if (token.accessToken === '' || token.refreshToken === '') {\r\n      console.log('로그인 실패');\r\n      throw new Error('유저 정보 불일치');\r\n    } else {\r\n      console.log('로그인 성공');\r\n      const accessExpires = new Date();\r\n      accessExpires.setTime(accessExpires.getTime() + 1000 * 60 * 60 * 2);\r\n      const refreshExpires = new Date();\r\n      refreshExpires.setTime(refreshExpires.getTime() + 1000 * 60 * 60 * 24);\r\n\r\n      cookie.save(\r\n        'access_token',\r\n        token.accessToken,\r\n        {\r\n          path: '/',\r\n          expires: accessExpires,\r\n        },\r\n      );\r\n      cookie.save(\r\n        'refresh_token',\r\n        token.refreshToken,\r\n        {\r\n          path: '/',\r\n          expires: refreshExpires,\r\n        },\r\n      );\r\n\r\n      yield put({\r\n        type: postLoginSuccess,\r\n        payload: action.payload,\r\n      });\r\n    }\r\n  } catch (e) {\r\n    yield put({\r\n      type: postLoginError,\r\n      payload: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin(): Generator<ForkEffect<never>, void, unknown> {\r\n  yield takeLatest(postLogin, postLoginSaga);\r\n  yield takeLatest(postSocialLogin, postSocialLoginSaga);\r\n}\r\n\r\nexport default function* loginSaga() {\r\n  yield all([fork(watchLogin)]);\r\n}\r\n",["166","167","168","169","170","171"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\joinSlice.ts",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\joinSaga.ts",["189","190","191","192"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts",["193"],"import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",{"ruleId":"194","severity":1,"message":"195","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":24},{"ruleId":"194","severity":1,"message":"198","line":1,"column":39,"nodeType":"196","messageId":"197","endLine":1,"endColumn":52},{"ruleId":"194","severity":1,"message":"199","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"200","line":2,"column":20,"nodeType":"196","messageId":"197","endLine":2,"endColumn":33},{"ruleId":"194","severity":1,"message":"201","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":26},{"ruleId":"194","severity":1,"message":"202","line":17,"column":32,"nodeType":"196","messageId":"197","endLine":17,"endColumn":38},{"ruleId":"194","severity":1,"message":"202","line":29,"column":31,"nodeType":"196","messageId":"197","endLine":29,"endColumn":37},{"ruleId":"194","severity":1,"message":"202","line":33,"column":31,"nodeType":"196","messageId":"197","endLine":33,"endColumn":37},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"194","severity":1,"message":"202","line":12,"column":24,"nodeType":"196","messageId":"197","endLine":12,"endColumn":30},{"ruleId":"194","severity":1,"message":"202","line":18,"column":30,"nodeType":"196","messageId":"197","endLine":18,"endColumn":36},{"ruleId":"203","replacedBy":"215"},{"ruleId":"205","replacedBy":"216"},{"ruleId":"207","replacedBy":"217"},{"ruleId":"209","replacedBy":"218"},{"ruleId":"211","replacedBy":"219"},{"ruleId":"213","replacedBy":"220"},{"ruleId":"194","severity":1,"message":"221","line":6,"column":26,"nodeType":"196","messageId":"197","endLine":6,"endColumn":40},{"ruleId":"203","replacedBy":"222"},{"ruleId":"205","replacedBy":"223"},{"ruleId":"207","replacedBy":"224"},{"ruleId":"209","replacedBy":"225"},{"ruleId":"211","replacedBy":"226"},{"ruleId":"213","replacedBy":"227"},{"ruleId":"203","replacedBy":"228"},{"ruleId":"205","replacedBy":"229"},{"ruleId":"207","replacedBy":"230"},{"ruleId":"209","replacedBy":"231"},{"ruleId":"211","replacedBy":"232"},{"ruleId":"213","replacedBy":"233"},{"ruleId":"194","severity":1,"message":"234","line":63,"column":38,"nodeType":"196","messageId":"197","endLine":63,"endColumn":46},{"ruleId":"194","severity":1,"message":"235","line":160,"column":7,"nodeType":"196","messageId":"197","endLine":160,"endColumn":25},{"ruleId":"194","severity":1,"message":"236","line":309,"column":5,"nodeType":"196","messageId":"197","endLine":309,"endColumn":24},{"ruleId":"237","severity":1,"message":"238","line":419,"column":7,"nodeType":"239","messageId":"240","endLine":419,"endColumn":31},{"ruleId":"237","severity":1,"message":"238","line":421,"column":7,"nodeType":"239","messageId":"240","endLine":421,"endColumn":40},{"ruleId":"237","severity":1,"message":"238","line":423,"column":7,"nodeType":"239","messageId":"240","endLine":423,"endColumn":33},{"ruleId":"237","severity":1,"message":"238","line":425,"column":7,"nodeType":"239","messageId":"240","endLine":425,"endColumn":32},{"ruleId":"237","severity":1,"message":"238","line":427,"column":7,"nodeType":"239","messageId":"240","endLine":427,"endColumn":27},{"ruleId":"237","severity":1,"message":"238","line":429,"column":7,"nodeType":"239","messageId":"240","endLine":429,"endColumn":33},{"ruleId":"203","replacedBy":"241"},{"ruleId":"205","replacedBy":"242"},{"ruleId":"207","replacedBy":"243"},{"ruleId":"209","replacedBy":"244"},{"ruleId":"211","replacedBy":"245"},{"ruleId":"213","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":307,"column":30,"nodeType":"249","messageId":"250","endLine":307,"endColumn":60},{"ruleId":"247","severity":1,"message":"248","line":7,"column":16,"nodeType":"251","messageId":"250","endLine":7,"endColumn":36},{"ruleId":"203","replacedBy":"252"},{"ruleId":"205","replacedBy":"253"},{"ruleId":"207","replacedBy":"254"},{"ruleId":"209","replacedBy":"255"},{"ruleId":"211","replacedBy":"256"},{"ruleId":"213","replacedBy":"257"},{"ruleId":"247","severity":1,"message":"248","line":99,"column":16,"nodeType":"251","messageId":"250","endLine":99,"endColumn":37},{"ruleId":"203","replacedBy":"258"},{"ruleId":"205","replacedBy":"259"},{"ruleId":"207","replacedBy":"260"},{"ruleId":"209","replacedBy":"261"},{"ruleId":"211","replacedBy":"262"},{"ruleId":"213","replacedBy":"263"},{"ruleId":"194","severity":1,"message":"202","line":65,"column":32,"nodeType":"196","messageId":"197","endLine":65,"endColumn":38},{"ruleId":"194","severity":1,"message":"202","line":68,"column":31,"nodeType":"196","messageId":"197","endLine":68,"endColumn":37},{"ruleId":"194","severity":1,"message":"202","line":72,"column":31,"nodeType":"196","messageId":"197","endLine":72,"endColumn":37},{"ruleId":"194","severity":1,"message":"202","line":76,"column":29,"nodeType":"196","messageId":"197","endLine":76,"endColumn":35},{"ruleId":"194","severity":1,"message":"202","line":80,"column":31,"nodeType":"196","messageId":"197","endLine":80,"endColumn":37},{"ruleId":"194","severity":1,"message":"202","line":84,"column":33,"nodeType":"196","messageId":"197","endLine":84,"endColumn":39},{"ruleId":"194","severity":1,"message":"202","line":88,"column":38,"nodeType":"196","messageId":"197","endLine":88,"endColumn":44},{"ruleId":"194","severity":1,"message":"202","line":91,"column":36,"nodeType":"196","messageId":"197","endLine":91,"endColumn":42},{"ruleId":"194","severity":1,"message":"202","line":94,"column":33,"nodeType":"196","messageId":"197","endLine":94,"endColumn":39},{"ruleId":"194","severity":1,"message":"202","line":99,"column":35,"nodeType":"196","messageId":"197","endLine":99,"endColumn":41},{"ruleId":"194","severity":1,"message":"202","line":104,"column":35,"nodeType":"196","messageId":"197","endLine":104,"endColumn":41},{"ruleId":"194","severity":1,"message":"202","line":119,"column":26,"nodeType":"196","messageId":"197","endLine":119,"endColumn":32},{"ruleId":"194","severity":1,"message":"202","line":123,"column":28,"nodeType":"196","messageId":"197","endLine":123,"endColumn":34},{"ruleId":"194","severity":1,"message":"202","line":127,"column":25,"nodeType":"196","messageId":"197","endLine":127,"endColumn":31},{"ruleId":"194","severity":1,"message":"202","line":131,"column":27,"nodeType":"196","messageId":"197","endLine":131,"endColumn":33},{"ruleId":"194","severity":1,"message":"202","line":154,"column":24,"nodeType":"196","messageId":"197","endLine":154,"endColumn":30},{"ruleId":"194","severity":1,"message":"202","line":159,"column":26,"nodeType":"196","messageId":"197","endLine":159,"endColumn":32},{"ruleId":"237","severity":1,"message":"238","line":92,"column":13,"nodeType":"239","messageId":"240","endLine":92,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":96,"column":13,"nodeType":"239","messageId":"240","endLine":96,"endColumn":34},{"ruleId":"237","severity":1,"message":"238","line":103,"column":11,"nodeType":"239","messageId":"240","endLine":103,"endColumn":32},{"ruleId":"247","severity":1,"message":"248","line":118,"column":16,"nodeType":"251","messageId":"250","endLine":118,"endColumn":36},{"ruleId":"247","severity":1,"message":"248","line":3,"column":25,"nodeType":"249","messageId":"250","endLine":3,"endColumn":57},"@typescript-eslint/no-unused-vars","'createSelector' is defined but never used.","Identifier","unusedVar","'PayloadAction' is defined but never used.","'PostList' is defined but never used.","'dummyBookPost' is defined but never used.","'articleInterface' is defined but never used.","'action' is defined but never used.","lines-around-directive",["264"],"no-spaced-func",["265"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["264"],["265"],[],[],[],[],"'getBookPostAPI' is defined but never used.",["264"],["265"],[],[],[],[],["264"],["265"],[],[],[],[],"'isOppend' is defined but never used.","'CerticationMessage' is assigned a value but never used.","'nicknameDuplication' is assigned a value but never used.","no-alert","Unexpected alert.","CallExpression","unexpected",["264"],["265"],[],[],[],[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration",["264"],["265"],[],[],[],[],["264"],["265"],[],[],[],[],"padding-line-between-statements","func-call-spacing"]