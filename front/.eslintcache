[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSaga.ts":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\ChattingList.tsx":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSaga.ts":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSlice.ts":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSlice.ts":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSlice.ts":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\InfiniteScrollList.tsx":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\SearchBook.tsx":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostPage.tsx":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostContent.tsx":"12","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImagesZoom.tsx":"13","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\CategoryMenu.tsx":"14","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx":"15","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signUp\\Join.tsx":"16","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\modifyProfile\\ModifyProfile.tsx":"17","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\Notice.tsx":"18","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSlice.ts":"19","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts":"20","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSlice.ts":"21","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\MyPage.tsx":"22","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myMarket\\MyMarket.tsx":"23","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSaga.ts":"24","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\questionApi.ts":"25","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSaga.ts":"26","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSlice.ts":"27","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\Review.tsx":"28","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts":"29","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\LoginForm.tsx":"30","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\Header.tsx":"31","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\PostList.tsx":"32","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSlice.ts":"33","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts":"34","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts":"35","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImageSlide.tsx":"36","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSaga.ts":"37","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\AddQuestion.tsx":"38","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\ImagePreView.tsx":"39","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\question.tsx":"40","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx":"41","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts":"42","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSlice.ts":"43","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts":"44","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostView.tsx":"45","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\Login.tsx":"46","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\Chatting.tsx":"47","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\WishList.tsx":"48","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSaga.ts":"49","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts":"50","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NodataPage.tsx":"51","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSlice.ts":"52","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\chattingApi.ts":"53","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts":"54","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\QuestionDetail.tsx":"55","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\interfaces\\mockdata.ts":"56","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts":"57","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSaga.ts":"58","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostButton.tsx":"59","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts":"60","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishsApi.ts":"61","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts":"62","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\Loading.tsx":"63","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\MySaleArticle.tsx":"64","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts":"65","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts":"66","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\SocialLogin.tsx":"67","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\mockdata.ts":"68","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSaga.ts":"69","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\imageFileReader.ts":"70","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\historyUtil.ts":"71","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\MyPurchaseArticle.tsx":"72"},{"size":1573,"mtime":1613913363358,"results":"73","hashOfConfig":"74"},{"size":2856,"mtime":1613897076479,"results":"75","hashOfConfig":"74"},{"size":2206,"mtime":1613897076458,"results":"76","hashOfConfig":"74"},{"size":1495,"mtime":1613976606213,"results":"77","hashOfConfig":"74"},{"size":1173,"mtime":1613897048134,"results":"78","hashOfConfig":"74"},{"size":1097,"mtime":1613897048136,"results":"79","hashOfConfig":"74"},{"size":1003,"mtime":1613897048153,"results":"80","hashOfConfig":"74"},{"size":3018,"mtime":1613897076476,"results":"81","hashOfConfig":"74"},{"size":569,"mtime":1613272432329,"results":"82","hashOfConfig":"74"},{"size":1256,"mtime":1613897076467,"results":"83","hashOfConfig":"74"},{"size":8680,"mtime":1613897726467,"results":"84","hashOfConfig":"74"},{"size":5702,"mtime":1613897788146,"results":"85","hashOfConfig":"74"},{"size":1565,"mtime":1613897076474,"results":"86","hashOfConfig":"74"},{"size":3640,"mtime":1613897860272,"results":"87","hashOfConfig":"74"},{"size":3014,"mtime":1613974820920,"results":"88","hashOfConfig":"74"},{"size":18394,"mtime":1613897048180,"results":"89","hashOfConfig":"74"},{"size":15213,"mtime":1614047099912,"results":"90","hashOfConfig":"74"},{"size":5775,"mtime":1613897048138,"results":"91","hashOfConfig":"74"},{"size":3195,"mtime":1613897076480,"results":"92","hashOfConfig":"74"},{"size":424,"mtime":1613898149347,"results":"93","hashOfConfig":"74"},{"size":511,"mtime":1613975138422,"results":"94","hashOfConfig":"74"},{"size":5810,"mtime":1613899285045,"results":"95","hashOfConfig":"74"},{"size":1421,"mtime":1613913350166,"results":"96","hashOfConfig":"74"},{"size":565,"mtime":1613913478043,"results":"97","hashOfConfig":"74"},{"size":2053,"mtime":1613976559095,"results":"98","hashOfConfig":"74"},{"size":4524,"mtime":1614046924356,"results":"99","hashOfConfig":"74"},{"size":923,"mtime":1613897076472,"results":"100","hashOfConfig":"74"},{"size":3263,"mtime":1613897048147,"results":"101","hashOfConfig":"74"},{"size":2240,"mtime":1614046651442,"results":"102","hashOfConfig":"74"},{"size":2753,"mtime":1613897048176,"results":"103","hashOfConfig":"74"},{"size":3409,"mtime":1613897076476,"results":"104","hashOfConfig":"74"},{"size":1573,"mtime":1613897076480,"results":"105","hashOfConfig":"74"},{"size":1379,"mtime":1613897048142,"results":"106","hashOfConfig":"74"},{"size":2112,"mtime":1613542151465,"results":"107","hashOfConfig":"74"},{"size":441,"mtime":1613897048100,"results":"108","hashOfConfig":"74"},{"size":1414,"mtime":1613897076473,"results":"109","hashOfConfig":"74"},{"size":796,"mtime":1613897076471,"results":"110","hashOfConfig":"74"},{"size":5369,"mtime":1613994888451,"results":"111","hashOfConfig":"74"},{"size":1697,"mtime":1613897076465,"results":"112","hashOfConfig":"74"},{"size":6508,"mtime":1614065773896,"results":"113","hashOfConfig":"74"},{"size":2240,"mtime":1613543412598,"results":"114","hashOfConfig":"74"},{"size":1508,"mtime":1613542151465,"results":"115","hashOfConfig":"74"},{"size":4063,"mtime":1613897048181,"results":"116","hashOfConfig":"74"},{"size":358,"mtime":1613272432328,"results":"117","hashOfConfig":"74"},{"size":1478,"mtime":1613897076466,"results":"118","hashOfConfig":"74"},{"size":1957,"mtime":1613897048175,"results":"119","hashOfConfig":"74"},{"size":6784,"mtime":1613897076457,"results":"120","hashOfConfig":"74"},{"size":8190,"mtime":1613897048149,"results":"121","hashOfConfig":"74"},{"size":950,"mtime":1613897048152,"results":"122","hashOfConfig":"74"},{"size":191,"mtime":1613542151677,"results":"123","hashOfConfig":"74"},{"size":347,"mtime":1613897076455,"results":"124","hashOfConfig":"74"},{"size":2335,"mtime":1613982495589,"results":"125","hashOfConfig":"74"},{"size":108,"mtime":1613542151449,"results":"126","hashOfConfig":"74"},{"size":343,"mtime":1613272432332,"results":"127","hashOfConfig":"74"},{"size":6173,"mtime":1614065984468,"results":"128","hashOfConfig":"74"},{"size":3623,"mtime":1613897076456,"results":"129","hashOfConfig":"74"},{"size":440,"mtime":1611271238964,"results":"130","hashOfConfig":"74"},{"size":1051,"mtime":1613897048130,"results":"131","hashOfConfig":"74"},{"size":1476,"mtime":1613897076469,"results":"132","hashOfConfig":"74"},{"size":377,"mtime":1613897076481,"results":"133","hashOfConfig":"74"},{"size":483,"mtime":1613542151477,"results":"134","hashOfConfig":"74"},{"size":512,"mtime":1613542151477,"results":"135","hashOfConfig":"74"},{"size":652,"mtime":1613897076454,"results":"136","hashOfConfig":"74"},{"size":7911,"mtime":1613897048135,"results":"137","hashOfConfig":"74"},{"size":1364,"mtime":1613542151453,"results":"138","hashOfConfig":"74"},{"size":241,"mtime":1613542151673,"results":"139","hashOfConfig":"74"},{"size":1083,"mtime":1613993515095,"results":"140","hashOfConfig":"74"},{"size":1218,"mtime":1613897048146,"results":"141","hashOfConfig":"74"},{"size":1040,"mtime":1613897048134,"results":"142","hashOfConfig":"74"},{"size":346,"mtime":1613542151673,"results":"143","hashOfConfig":"74"},{"size":271,"mtime":1613897076483,"results":"144","hashOfConfig":"74"},{"size":7940,"mtime":1613897048131,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"sthwp6",{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"158"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"158"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"155"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"204"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"207"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"207"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"200"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"158"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"158"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"158"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"148"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"155"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"207"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"289"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"207"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"155"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"158"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"158"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"170"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx",[],["335","336","337","338","339","340"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSaga.ts",["341","342"],"import { PayloadAction } from '@reduxjs/toolkit';\nimport { all, takeLatest, put, fork, call, throttle, select } from 'redux-saga/effects';\nimport { AddBookPostInterface } from '../../interfaces/PostList.interface';\nimport { generateDummyPost } from '../../interfaces/mockdata';\nimport { addBookPostAPI, deleteBookPostAPI, getBookPostAPI, getBookPostDetailViewAPI } from '../../api/postBookApi';\nimport {\n  loadBookPostRequest, loadBookPostSuccess, loadBookPostError,\n  loadScrollBookPostRequest, loadScrollBookPostSuccess, loadScrollBookPostError,\n  deleteBookPostSuccess, deleteBookPostError, deleteBookPostRequest,\n  addBookPostRequest, addBookPostError,\n} from './postSlice';\nimport { push } from '../../utils/historyUtil';\n\ninterface loadBookPost {\n  filtering: { division:string, category:string },\n  lastId?: number\n}\ninterface addBookPostPayloadInterface {\n  data: AddBookPostInterface\n}\n\nfunction* loadBookPost(action: PayloadAction<loadBookPost>) {\n  try {\n    const result = yield call(getBookPostAPI, action.payload.filtering);\n    // const result = generateDummyPost(10);\n    console.log(result.data);\n    yield put(loadBookPostSuccess(result.data));\n  } catch (error) {\n    yield put(loadBookPostError({ error }));\n  }\n}\nfunction* loadScrollBookPost(action: PayloadAction<loadBookPost>) {\n  try {\n    const { filtering } = yield select((state) => state.postSlice);\n    console.log(filtering);\n    const result = yield call(getBookPostAPI, filtering, action.payload.lastId);\n    // const result = generateDummyPost(10);\n    console.log(result.data);\n    yield put(loadScrollBookPostSuccess(result.data));\n  } catch (error) {\n    yield put(loadScrollBookPostError({ error }));\n  }\n}\nfunction* addBookPost(action: PayloadAction<addBookPostPayloadInterface>) {\n  try {\n    const result = yield call(addBookPostAPI, action.payload.data);\n    yield put(addBookPostRequest({ result }));\n    yield call(push, '/home');\n  } catch (error) {\n    yield put(addBookPostError({ error: error.response.data }));\n  }\n}\n\nfunction* deleteBookPost(action: PayloadAction<number>) {\n  try {\n    yield call(deleteBookPostAPI, action.payload);\n    yield put(deleteBookPostSuccess(action.payload));\n  } catch (error) {\n    yield put(deleteBookPostError({ error: error.response.data }));\n  }\n}\nfunction* watchLoadBookPost() {\n  yield takeLatest(loadBookPostRequest, loadBookPost);\n}\nfunction* watchAddBookPost() {\n  yield takeLatest(addBookPostRequest, addBookPost);\n}\nfunction* watchloadScrollBookPost() {\n  yield throttle(2000, loadScrollBookPostRequest, loadScrollBookPost);\n}\nfunction* watchdeleteBookPost() {\n  yield takeLatest(deleteBookPostRequest, deleteBookPost);\n}\n\nexport default function* postSaga():Generator {\n  yield all([\n    fork(watchloadScrollBookPost),\n    fork(watchAddBookPost),\n    fork(watchLoadBookPost),\n    fork(watchdeleteBookPost),\n  ]);\n}\n",["343","344","345","346","347","348"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\ChattingList.tsx",[],["349","350","351","352","353","354"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSaga.ts",[],["355","356","357","358","359","360"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSlice.ts",["361"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSlice.ts",["362"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst mySaleArticleSlice = createSlice({\r\n  name: 'myArticle',\r\n  initialState: {\r\n    mySaleArticle: [],\r\n    totalPage: 0,\r\n    isGetMySaleArticlesLoading: false, // 내 판매글 가져오기\r\n    isGetMySaleArticlesSuccess: false,\r\n    isGetMySaleArticlesError: null,\r\n  },\r\n  reducers: {\r\n    getMySaleArticleRequest: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = true;\r\n    },\r\n    getMySaleArticleRequestSuccess: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesSuccess = true;\r\n      state.mySaleArticle = action.payload.myAricleList;\r\n      state.totalPage = action.payload.pageTotal;\r\n    },\r\n    getMySaleArticleRequestError: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getMySaleArticleRequest,\r\n  getMySaleArticleRequestSuccess,\r\n  getMySaleArticleRequestError,\r\n} = mySaleArticleSlice.actions;\r\n\r\nexport default mySaleArticleSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSlice.ts",["363"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst wishListSlice = createSlice({\r\n  name: 'myArticle',\r\n  initialState: {\r\n    wishList: [],\r\n    totalPage: 0,\r\n    isGetWishListsLoading: false, // 내 판매글 가져오기\r\n    isGetWishListsSuccess: false,\r\n    isGetWishListsError: null,\r\n  },\r\n  reducers: {\r\n    getWishListRequest: (state, action) => {\r\n      state.isGetWishListsLoading = true;\r\n    },\r\n    getWishListRequestSuccess: (state, action) => {\r\n      state.isGetWishListsLoading = false;\r\n      state.isGetWishListsSuccess = true;\r\n      state.wishList = action.payload.myArticleList;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getWishListRequestError: (state, action) => {\r\n      state.isGetWishListsLoading = false;\r\n      state.isGetWishListsError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getWishListRequest,\r\n  getWishListRequestSuccess,\r\n  getWishListRequestError,\r\n} = wishListSlice.actions;\r\n\r\nexport default wishListSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\InfiniteScrollList.tsx",["364","365"],"import React from 'react';\nimport { List, AutoSizer } from 'react-virtualized';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\nimport { loadScrollBookPostRequest } from '../postSlice';\nimport NodataPage from '../../../components/NodataPage';\n\ninterface IndexInterface {\n  index: number;\n  style?: any;\n}\ninterface OnScrollParams {\n  clientHeight: number;\n  clientWidth: number;\n  scrollHeight: number;\n  scrollLeft: number;\n  scrollTop: number;\n  scrollWidth: number;\n}\nconst ListWrapper = styled.div`\n  display: flex;\n  max-width: 100%;\n  flex-wrap: wrap;\n  overflow: hidden;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 200px;\n  flex-basis: 50%;\n  padding:10px;\n  border-top: 1px solid #e8e8e8;\n  & img {\n    width: 150px;\n    height: 150px;\n    border-radius: 10px;\n  }\n`;\nconst ContentExplanation = styled.div`\n  padding: 0px 20px;\n  & h3 {\n    overflow:hidden;\n    padding: 10px 0px;\n  }\n`;\nconst Categoty = styled.div`\n  font-size: 9px;\n`;\nfunction InfiniteScrollList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, hasMorePost, isLoadScrollBookPostLoading } = useSelector((state: any) => state.postSlice);\n  const scrollListener = (params:OnScrollParams) => {\n    if (params.scrollTop + params.clientHeight >= params.scrollHeight - 300) {\n      if (hasMorePost && !isLoadScrollBookPostLoading) {\n        const LastId = bookPost[bookPost.length - 1].articleId;\n        dispatch(loadScrollBookPostRequest({ lastId: LastId }));\n      }\n    }\n  };\n\n  const rowRanderer = ({ index, style }: IndexInterface) => {\n    const post = bookPost[index];\n    return (\n      <div style={style}>\n        <NavLink to={`post/${post.articleId}`}>\n          <Content key={post.articleId}>\n            <img src={post.image} alt=\"\" />\n            <ContentExplanation>\n              <Categoty>{CategoryFormatUtil(post.category)}</Categoty>\n              <h3>{post.title}</h3>\n              <h3>{post.tprice}원</h3>\n            </ContentExplanation>\n          </Content>\n        </NavLink>\n      </div>\n    );\n  };\n\n  return (\n    <ListWrapper>\n      {bookPost.length !== 0\n        ? (\n          <AutoSizer disableHeight>\n            {({ width }) => (\n              <List\n                rowCount={bookPost.length} // 항목의 개수\n                height={600} // 실제 렌더링 되는 높이범위\n                rowHeight={200} // 항목의높이\n                width={width} // 항목의 너비\n                rowRenderer={rowRanderer} // 항목렌더링할때쓰는 함수\n                onScroll={scrollListener} // scroll 함수\n                overscanRowCount={10} // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\n              />\n            )}\n          </AutoSizer>\n        )\n        : <NodataPage />}\n    </ListWrapper>\n  );\n}\n\nexport default InfiniteScrollList;\n",["366","367","368","369","370","371"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts",["372"],"interface categoryInterface {\n  cid: number, oneDepth: string, twoDepth: string, threeDepth: string, fourDepth: string, fiveDepth: string,\n}\nconst CategoryFormatUtil = (category: categoryInterface) => {\n  const cate = [category.oneDepth, category.twoDepth, category.threeDepth, category.fourDepth, category.fiveDepth];\n  const newCate = [];\n  for (let i = 0; i < cate.length; i++) {\n    if (cate[i] === '') {\n      return newCate.join('>');\n    }\n    newCate.push(cate[i]);\n  }\n  console.log(newCate);\n  return newCate.join('>');\n};\n\nexport default CategoryFormatUtil;\n",["373","374","375","376","377","378"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\SearchBook.tsx",[],["379","380","381","382","383","384"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostPage.tsx",["385","386"],"import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport { addBookPostRequest } from '../postSlice';\nimport ImagePreView from './ImagePreView';\nimport ImageFileReaderPromise from '../../../utils/imageFileReader';\nimport { getAladinBook } from '../../../api/postBookApi';\nimport aladinIteminterface from '../../../interfaces/AladinInterface';\nimport SearchBook from './SearchBook';\n\ninterface ParamTypes {\n  division: string\n}\ninterface ImageURLInterface {\n  id: string;\n  url: string;\n  image: Blob;\n}\nconst AddPostWrapper = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  max-width: 600px;\n`;\nconst AddPostHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 0px;\n`;\nconst Logo = styled.img`\n  width: 40px;\n`;\nconst DeleteImg = styled.img`\n  width: 20px;\n  align-self: flex-start;\n`;\nconst BookWrapper = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    width: 30%;\n    max-width: 200px;\n  }\n  border: 1px solid #e8e8e8;\n  margin: 10px 0px;\n`;\nconst BookDetail = styled.div`\n  margin-left: 20px;\n`;\nconst Category = styled.div`\n  font-size: 12px;\n  margin-bottom: 20px;\n`;\nconst BookTitle = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n  font-weight: 800;\n`;\nconst BookPrice = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n`;\nconst FormWrapper = styled.form`\n`;\nconst BookDetailInputWrapper = styled.div`\n  & input {\n    margin: 20px 0;\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n  }\n  & textArea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n    height: 80px;\n    resize: none;\n    overflow: scroll;\n  }\n`;\nconst AddPostButton = styled.button`\n  width: 100%;\n  border: 0;\n  background-color: #3960a6;\n  padding: 10px;\n  margin: 20px 0px;\n  border-radius: 5px;\n  color: white;\n  font-weight: 700;\n`;\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  background-color: #e9e9e9;\n  width: 100%;\n  margin: auto;\n  & input {\n    border:0;\n    width:80%;\n    background-color: inherit;\n  }\n  & button {\n    border: 0;\n  }\n  & img {\n    width: 20px;\n  }\n`;\n\nfunction AddPostPage():JSX.Element {\n  const [searchTitle, setSearchTitle] = useState<string>('');\n  const [searchResult, setSearchResult] = useState<aladinIteminterface[]>([]);\n  const [title, setTitle] = useState<string>('');\n  const [category, setCategory] = useState<string>('');\n  const [cid, setCid] = useState<number>();\n  const [thumbnail, setThumbnail] = useState<string>('');\n  const [images, setImages] = useState<ImageURLInterface[]>([]);\n  const [realPrice, setRealPrice] = useState<number>();\n  const [price, setPrice] = useState<string>('');\n  const [content, setContent] = useState<string>('');\n  const [isOpenSearchBox, setIsOpenSearchBox] = useState<boolean>(false);\n  const history = useHistory();\n\n  const { isAddBookPostLoading } = useSelector((state: any) => state.addPostSlice);\n  const dispatch = useDispatch();\n\n  const { division } = useParams<ParamTypes>();\n  const upperCaseDivision:string = division.toUpperCase();\n\n  const ImageFileReader = async (file: Blob) => {\n    try {\n      const image: string = await ImageFileReaderPromise(file);\n      if (images.length < 2) {\n        setImages(images.concat({ id: uuidv4(), url: image, image: file }));\n      } else {\n        ToastsStore.error('최대 두장의 사진만 업로드 가능합니다.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const loadSearchResultBook = async () => {\n    getAladinBook(searchTitle).then(({ data }) => {\n      const rgexData = data.replace(/\\\\/ig, '\\\\\\\\', /;/g, '');\n      const deleteEndSemiconlonInData = rgexData.substr(0, rgexData.length - 1);\n      const parseData = JSON.parse(deleteEndSemiconlonInData);\n      console.log(parseData);\n      setSearchResult(parseData.item);\n      if (parseData.item.length === 0) {\n        ToastsStore.error('검색결과가 없습니다');\n      } else {\n        setIsOpenSearchBox(true);\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n\n  const handleChangeSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTitle(e.target.value);\n  }, []);\n  const handleClickSearch = () => {\n    loadSearchResultBook();\n  };\n  const handleXButtonClick = () => {\n    history.push('/home');\n  };\n  const handleDeleteImage = useCallback((imageId: string) => {\n    const filteringImageFile = images.filter((image) => image.id !== imageId);\n    setImages([...filteringImageFile]);\n  }, [images]);\n  const handleChangePrice = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPrice(e.target.value);\n  }, []);\n  const handleChangeContent = useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setContent(e.target.value);\n  }, []);\n  const handleChangeImages = (e: any) => {\n    ImageFileReader(e.target.files[0]);\n  };\n  const handleClickItem = (item: aladinIteminterface) => {\n    setCategory(item.categoryName);\n    setTitle(item.title);\n    setCid(item.categoryId);\n    setThumbnail(item.cover);\n    setRealPrice(item.priceStandard);\n    setIsOpenSearchBox(false);\n  };\n  const handleSubmitPost = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData();\n    if (images.length < 2) {\n      ToastsStore.error('최소 두장의 사진이 업로드 되어야합니다');\n      return;\n    }\n    for (let i = 0; i < images.length; i++) {\n      formData.append('file', images[i].image); // 사용자가 등록한 이미지\n    }\n    formData.append('category', category); // category\n    formData.append('cid', String(cid)); // 알라딘에서 받은 정보\n    formData.append('title', title); // 알라딘에서 받은 정보\n    formData.append('image', thumbnail); // 알라딘에서 받은 정보\n    formData.append('rprice', String(realPrice)); // 알라딘에서 받은 정보\n    formData.append('content', content); // 사용자가 입력한 정보\n    formData.append('tprice', price); // 사용자가 입력한 정보\n    formData.append('division', upperCaseDivision); // 사용자가 입력한 정보\n\n    dispatch(addBookPostRequest({ data: formData }));\n  }, [category, cid, content, dispatch, images, price, realPrice, thumbnail, title, upperCaseDivision]);\n  return (\n    <>\n      <AddPostWrapper>\n        {isOpenSearchBox && <SearchBook searchResult={searchResult} onClickItem={handleClickItem} />}\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n        <AddPostHeader>\n          <Logo src=\"/images/icons/logo.jpeg\" alt=\"logo\" />\n          <button type=\"button\" onClick={handleXButtonClick}>\n            <DeleteImg src=\"/images/icons/x.png\" alt=\"x_button\" />\n          </button>\n        </AddPostHeader>\n        <SearchInput>\n          <input placeholder=\"책 이름을 검색해보세요!\" onChange={handleChangeSearch} />\n          <button type=\"button\" onClick={handleClickSearch}>\n            <img src=\"/images/icons/search.png\" alt=\"search_icon\" />\n          </button>\n        </SearchInput>\n        <BookWrapper>\n          {\n          title\n            ? (\n              <>\n                <img src={thumbnail} alt=\"thumbnail\" />\n                <BookDetail>\n                  <Category>{category}</Category>\n                  <BookTitle>{title}</BookTitle>\n                  <BookPrice>{realPrice} 원</BookPrice>\n                </BookDetail>\n              </>\n            )\n            : <div>책을 검색해서 등록하세요!</div>\n        }\n        </BookWrapper>\n        <FormWrapper encType=\"multipart/form-data\" onSubmit={handleSubmitPost}>\n          <ImagePreView onChangeImage={handleChangeImages} images={images} onDelete={handleDeleteImage} />\n          <BookDetailInputWrapper>\n            <input type=\"text\" pattern=\"[0-9]+\" placeholder=\"₩ 가격입력\" onChange={handleChangePrice} value={price} />\n            <textarea onChange={handleChangeContent} value={content} placeholder=\"상품설명을 입력하세요\" />\n          </BookDetailInputWrapper>\n          <AddPostButton type=\"submit\" disabled={isAddBookPostLoading}>\n            {isAddBookPostLoading ? <span>등록중입니다</span> : <span>등록하기</span>}\n          </AddPostButton>\n        </FormWrapper>\n      </AddPostWrapper>\n    </>\n  );\n}\n\nexport default AddPostPage;\n",["387","388","389","390","391","392"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostContent.tsx",["393","394"],"import React, { useEffect, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\nimport countUtil from '../../../utils/countDaoUtil';\nimport ProgressUtil from '../../../utils/progressUtil';\nimport { deleteBookPostRequest } from '../postSlice';\nimport { postAddWishListRequest, postRemoveWishListRequest } from '../../signIn/userSlice';\nimport ImageSlide from './ImageSlide';\n\ninterface DetailPostInterface {\n  id: number;\n}\nconst ContentWrapper = styled.div`\n`;\nconst ContentTop = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border-bottom: 1px solid #e8e8e8;\n`;\nconst ContentMain = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  margin: 0 auto;\n`;\nconst ProfileWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n`;\nconst ProfileImg = styled.img`\n  width: 50px;\n  height: 50px;\n  border: 1px solid #e8e8e8;\n  border-radius: 50%;\n  padding: 2px;\n`;\nconst NickName = styled.div`\n  margin-left: 10px;\n`;\nconst State = styled.div`\n  color: #3960a6;\n  border: 1px solid #3960a6;\n  padding: 5px 10px;\n  border-radius: 20px;\n`;\nconst ContentTitle = styled.div`\n  padding: 10px 0;\n  font-size: 20px;\n  font-weight: 600;\n`;\nconst Category = styled.div`\n  font-size: 13px;\n  color: #919191;\n`;\nconst Thumbnail = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #e8e8e8;\n  color: #3960a6;\n  font-weight: 700;\n  border-radius: 5px;\n  & img {\n    width: 80px;\n    margin-right: 20px;\n  }\n`;\nconst Content = styled.div`\n  padding: 20px 0;\n`;\nconst AdditionalContent = styled.div`\n  padding: 20px 0;\n  font-size: 13px;\n`;\nconst OtherBooksButton = styled.button`\n  color: white;\n  background: #3960a6;\n  width: 100%;\n  border: 0;\n  padding: 10px;\n  font-size: 15px;\n  border-radius: 5px;\n  margin: 0 auto;\n`;\nconst ContentBottom = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  font-size: 20px;\n  border-top: 1px solid #e8e8e8;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n`;\nconst ChattingButton = styled.button`\n  color: white;\n  background: #3960a6;\n  max-width: 200px;\n  border: 0;\n  padding: 10px;\n  font-size: 15px;\n  border-radius: 5px;\n`;\nconst HeartButton = styled.button`\n  background: transparent;\n  border: 0;\n  & img {\n    width: 35px;\n  }\n`;\nconst Price = styled.div`\n  font-weight: 800;\n`;\nconst Delete = styled.div`\n  font-size: 15px;\n  padding: 20px 0;\n`;\nconst Report = styled.div`\n  font-size: 15px;\n  padding: 20px 0;\n`;\nconst UploadeTime = styled.div`\n  font-size: 13px;\n  color: #919191;\n  padding: 10px 0;\n`;\n\nfunction DetailPostContent({ id } :DetailPostInterface):JSX.Element {\n  const dispatch = useDispatch();\n  const [heart, setHeart] = useState(false);\n  const { wishList } = useSelector((state: any) => state.userSlice.user);\n  const { detailBookPost } = useSelector((state: any) => state.detailViewSlice);\n  const history = useHistory();\n  const HandleHeartButton = () => {\n    if (heart) {\n      dispatch(postRemoveWishListRequest(detailBookPost.articleId));\n    } else {\n      dispatch(postAddWishListRequest(detailBookPost.articleId));\n    }\n  };\n  const DeletePost = useCallback(() => {\n    dispatch(deleteBookPostRequest(id));\n    ToastsStore.success('삭제완료');\n    setTimeout(() => {\n      history.push('/home');\n    }, 700);\n  }, [dispatch, history, id]);\n  useEffect(() => {\n    setHeart(wishList.includes(detailBookPost.articleId));\n  }, [wishList, detailBookPost]);\n  return (\n    <>\n      <ImageSlide images={detailBookPost.image} />\n      <ContentWrapper>\n        <ContentTop>\n          <ProfileWrapper>\n            <ProfileImg src=\"/images/icons/init_profile.png\" alt=\"profile\" />\n            <NickName>닉네임</NickName>\n          </ProfileWrapper>\n          <State>{ProgressUtil(detailBookPost.progress)}</State>\n        </ContentTop>\n        <ContentMain>\n          <ContentTitle>{detailBookPost.title}</ContentTitle>\n          <Category>{CategoryFormatUtil(detailBookPost.category)}</Category>\n          <UploadeTime>9초전</UploadeTime>\n          <Thumbnail>\n            <img src={detailBookPost.thumbnail} alt=\"thumnail\" />\n            <div>원가: {detailBookPost.rprice} 원</div>\n          </Thumbnail>\n          <Content>\n            {detailBookPost.content}\n          </Content>\n          <AdditionalContent>{countUtil(detailBookPost.count)}</AdditionalContent>\n          <OtherBooksButton>판매자의 다른도서 보러가기</OtherBooksButton>\n          <Report>신고하기⚡️</Report>\n          {/* 여기서 사용자랑 이게시물 아이디랑 같으면 삭제하는걸로 로직짜야함 */}<Delete onClick={DeletePost}>삭제하기</Delete>\n        </ContentMain>\n        <ContentBottom>\n          <HeartButton onClick={HandleHeartButton}>\n            <img src={heart ? '/images/icons/heart_active.png' : '/images/icons/heart.png'} alt=\"heartButton\" />\n          </HeartButton>\n          <Price>{detailBookPost.tprice} 원</Price>\n          <NavLink to={`/chatting/${id}`}>\n            <ChattingButton>채팅하기</ChattingButton>\n          </NavLink>\n        </ContentBottom>\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n      </ContentWrapper>\n    </>\n  );\n}\n\nexport default DetailPostContent;\n",["395","396","397","398","399","400"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImagesZoom.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\CategoryMenu.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx",["401"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signUp\\Join.tsx",["402","403","404","405","406","407","408","409","410"],"import React, { useRef, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DaumPostCode, { AddressData } from 'react-daum-postcode';\nimport { emailCertificationAsync, emailDuplicationAsync, joinRequestAsync, nicknameDuplicationAsync } from '../../api/joinApi';\n\nconst Positional = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  font-size: 4.5vw;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n  }\n`;\n\nconst Header = styled.header`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  border-bottom: 1px solid #e0e0e0;\n  padding: 0.8em 0;\n  & h1 {\n    font-size: 4.5vw;\n    font-weight: 400;\n  }\n  @media screen and (min-width: 460px) {\n    width: 460px;\n    & h1 {\n    font-size: 20px;\n  }\n  }\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 1.5em 0;\n  display: flex;\n  justify-content: center;\n  overflow: auto;\n`;\n\nconst BackLink = styled(Link)`\n  position: absolute;\n  left: 0.5em;\n`;\n\nconst BackLogo = styled.img`\n  width: 1.8em;\n  height: 1.8em;\n`;\n\nconst JoinForm = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  & > div:last-child {\n    margin-bottom: 1.5em;\n  }\n  @media screen and (min-width: 460px) {\n    width: 414px;\n  }\n  `;\n\nconst JoinInputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1em;\n  & label {\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  @media screen and (min-width: 460px) {\n    & label {\n      font-size: 16.1px;\n    }\n  }\n`;\n\nconst JoinInput = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 0.5em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 4vw;\n  background: none;\n  border: none;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst CheckLogo = styled.img`\n  width: 1.2em;\n  height: 1.2em;\n  flex-grow: 1;\n  flex-shrink: 0;\n`;\n\nconst CertificationRequest = styled.button`\n  position: absolute;\n  right: 0;\n  font-size: 3vw;\n  font-weight: bold;\n  padding: 1em 1.5em;\n  background: #265290;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 13.8px;\n  }\n`;\n\nconst CertificationBox = styled.div`\n  display: none;\n  flex-direction: column;\n  margin-top: 0.5em;\n`;\n\nconst CertificationInputBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CertificationInput = styled.input`\n  width: 10em;\n  font-size: 4vw;\n  padding: 0.5em 1em;\n  margin-right: 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\nconst CertificationButton = styled.button`\n  font-size: 4vw;\n  font-weight: bold;\n  padding: 0.5em 1em;\n  background: #265290;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst InputMessage = styled.p`\n  font-size: 2vw;\n  margin-top: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 9.2px;\n  }\n`;\n\nconst SearchModal = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  background: #5c5c5c55;\n`;\n\nconst CloseButton = styled.img`\n  position: absolute;\n  width: 1.5em;\n  height: 1.5em;\n  top: 0.4em;\n  right: 0.4em;\n  font-size: 6vw;\n  @media screen and (min-width: 460px) {\n    font-size: 27.6px;\n  }\n`;\n\nconst AddressFormBox = styled.div`\n  margin-bottom: 2em;\n  & label {\n    display: block;\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  & ${JoinInput}:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  & ${JoinInput} {\n    padding: 0.5em;\n  }\n\n  @media screen and (min-width: 460px) {\n    & label {\n      font-size: 16.1px;\n    }\n  }\n`;\n\nconst AddressSearchBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1em;\n`;\nconst AddressSearchInput = styled.input`\n  width: 10em;\n  padding: 0.6em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  margin-right: 0.5em;\n  font-size: 4vw;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\nconst AddressSearchButton = styled.button`\n  padding: 0.7em;\n  background: #265290;\n  color: #fff;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  font-size: 3.5vw;\n  @media screen and (min-width: 460px) {\n    font-size: 16.1px;\n  }\n`;\n\nconst AgreementBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90vw;\n  margin-bottom: 2.5em;\n  @media screen and (min-width: 460px) {\n    width: 414px;\n  }\n`;\nconst AllAgreeBox = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 4.5vw;\n  font-weight: bold;\n  margin-bottom: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n  }\n`;\nconst AgreeCheckBox = styled.img`\n  width: 1.5em;\n  height: 1.5em;\n  margin-right: 0.5em;\n`;\nconst AgreeText = styled.div`\n  & span {\n    color: #265290;\n  }\n`;\n\nconst SubAgreeBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-size: 4vw;\n  margin-bottom: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst AgreeDetail = styled.img`\n  width: 1em;\n  height: 1em;\n  position: absolute;\n  right: 0;\n  transform: rotate(-90deg);\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst JoinButton = styled.button`\n  width: 80vw;\n  font-size: 4.5vw;\n  padding: 0.8em 0;\n  text-align: center;\n  color: #fff;\n  background: #265290;\n  border: none;\n  outline: none;\n  margin-bottom: 1.5em;\n  @media screen and (min-width: 460px) {\n    width: 368px;\n    font-size: 20px;\n  }\n`;\n\nfunction Join():JSX.Element {\n  const initialInputs = {\n    email: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n      duplicationCheck: false,\n      code: '',\n      certificationCheck: false,\n    },\n    nickname: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwd: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwdCheck: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    address: {\n      zipcode: '',\n      baseAddress: '',\n      detailAddress: '',\n    },\n    agreement: {\n      all: false,\n      agree1: false,\n      agree2: false,\n      agree3: false,\n    },\n  };\n\n  const [showsModal, setShowsModal] = useState(false);\n  const [inputs, setInputs] = useState(initialInputs);\n  const emailCertificationBox = useRef<HTMLInputElement>(null);\n  const history = useHistory();\n\n  const {\n    email,\n    nickname,\n    passwd,\n    passwdCheck,\n    address,\n    agreement,\n  } = inputs;\n\n  const inputChange = (name: 'email' | 'nickname' | 'passwd' | 'passwdCheck', value: string, state: 'check' | 'fail' | 'none', message: string, color: 'red' | 'blue') => {\n    setInputs({\n      ...inputs,\n      [name]: {\n        ...inputs[name],\n        value,\n        state,\n        message,\n        color,\n      },\n    });\n  };\n\n  const onChangeText = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        if (/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '이메일 형식이 아닙니다.', 'red');\n        }\n        break;\n      case 'nickname':\n        if (value.length < 4) {\n          inputChange(name, value, 'fail', '닉네임을 4자 이상 입력해주세요.', 'red');\n        } else {\n          try {\n            await nicknameDuplicationAsync(value);\n            inputChange(name, value, 'check', '', 'blue');\n          } catch {\n            inputChange(name, value, 'fail', '이미 사용중인 닉네임입니다.', 'red');\n          }\n        }\n        break;\n      case 'passwd':\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.', 'red');\n        }\n        break;\n      case 'passwdCheck':\n        if (value === passwd.value) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '비밀번호가 일치하지 않습니다.', 'red');\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onClickEmailDuplication = async () => {\n    try {\n      const result = await emailDuplicationAsync(email.value);\n\n      if (result) {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            duplicationCheck: true,\n          },\n        });\n        if (emailCertificationBox.current != null) {\n          emailCertificationBox.current.style.display = 'flex';\n        }\n      } else {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '이미 사용중인 이메일입니다.',\n            color: 'red',\n            duplicationCheck: false,\n          },\n        });\n      }\n    } catch (error) {\n      alert('서버 통신중 오류가 발생하였습니다.');\n    }\n  };\n\n  const onChangeCode = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      email: {\n        ...email,\n        code: e.target.value,\n      },\n    });\n  };\n\n  const onClickEmailCertification = async () => {\n    try {\n      const result = await emailCertificationAsync(email.value, email.code);\n\n      if (result) {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '인증이 완료되었습니다.',\n            color: 'blue',\n            certificationCheck: true,\n          },\n        });\n        if (emailCertificationBox.current != null) {\n          emailCertificationBox.current.style.display = 'none';\n        }\n      } else {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '코드를 확인해주세요.',\n            color: 'red',\n            certificationCheck: false,\n          },\n        });\n      }\n    } catch {\n      alert('서버 통신중 오류가 발생하였습니다.');\n    }\n  };\n\n  const onCompleteAddressSelect = (data: AddressData) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        zipcode: data.zonecode,\n        baseAddress: data.jibunAddress,\n      },\n    });\n    setShowsModal(false);\n  };\n\n  const onChangeDetailAddress = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        detailAddress: e.target.value,\n      },\n    });\n  };\n\n  const onClickAgree = (agree: 'all' | 'agree1' | 'agree2' | 'agree3') => {\n    if (agree === 'all') {\n      setInputs({\n        ...inputs,\n        agreement: {\n          all: !agreement.all,\n          agree1: !agreement.all,\n          agree2: !agreement.all,\n          agree3: !agreement.all,\n        },\n      });\n    } else {\n      const resultArr: boolean[] = [];\n\n      Object.keys(agreement).forEach((key) => {\n        if (key !== 'all' && (key === 'agree1' || key === 'agree2' || key === 'agree3')) {\n          if (key === agree) {\n            resultArr.push(!agreement[key]);\n          } else {\n            resultArr.push(agreement[key]);\n          }\n        }\n      });\n\n      if (agree === 'agree1' || agree === 'agree2' || agree === 'agree3') {\n        setInputs({\n          ...inputs,\n          agreement: {\n            ...agreement,\n            all: resultArr.every((value) => value === true),\n            [agree]: !agreement[agree],\n          },\n        });\n      }\n    }\n  };\n\n  const onsubmitJoin = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!email.certificationCheck) {\n      alert('이메일 인증을 진행해주세요.');\n    } else if (nickname.state !== 'check') {\n      alert('닉네임이 중복되었거나 형식이 맞지 않습니다.');\n    } else if (passwd.state !== 'check') {\n      alert('비밀번호 형식이 맞지 않습니다.');\n    } else if (passwdCheck.state !== 'check') {\n      alert('비밀번호가 일치하지 않습니다.');\n    } else if (address.zipcode === '') {\n      alert('주소를 입력해주세요.');\n    } else if (!agreement.agree1 || !agreement.agree2) {\n      alert('필수 약관 항목에 동의해주세요.');\n    } else {\n      await joinRequestAsync(email.value, nickname.value, passwd.value, `${address.baseAddress} ${address.detailAddress}`);\n      alert('회원가입이 완료되었습니다.');\n      history.push('/');\n    }\n  };\n\n  return (\n    <Positional>\n      <Header>\n        <BackLink to=\"/\">\n          <BackLogo src=\"/images/icons/back.png\" />\n        </BackLink>\n        <h1>회원가입</h1>\n      </Header>\n      <Main>\n        <JoinForm method=\"post\" onSubmit={onsubmitJoin}>\n          <JoinInputBox>\n            <label htmlFor=\"email\">이메일</label>\n            <JoinInput>\n              <Input required type=\"email\" id=\"email\" name=\"email\" onChange={onChangeText} value={email.value} disabled={email.duplicationCheck} />\n              <CheckLogo src={`/images/icons/${email.state}.png`} />\n              <CertificationRequest style={{ display: email.state === 'check' && !email.certificationCheck ? 'block' : 'none' }} type=\"button\" onClick={onClickEmailDuplication}>인증요청</CertificationRequest>\n            </JoinInput>\n            <CertificationBox ref={emailCertificationBox}>\n              <CertificationInputBox>\n                <CertificationInput name=\"certification\" onChange={onChangeCode} value={email.code} />\n                <CertificationButton type=\"button\" onClick={onClickEmailCertification}>확인</CertificationButton>\n              </CertificationInputBox>\n            </CertificationBox>\n            <InputMessage style={{ color: email.color }}>{email.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"nickname\">닉네임</label>\n            <JoinInput>\n              <Input required type=\"text\" maxLength={10} id=\"nickname\" name=\"nickname\" onChange={onChangeText} value={nickname.value} />\n              <CheckLogo src={`/images/icons/${nickname.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: nickname.color }}>{nickname.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwd\">비밀번호</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwd\" name=\"passwd\" onChange={onChangeText} value={passwd.value} />\n              <CheckLogo src={`/images/icons/${passwd.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwd.color }}>{passwd.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwdCheck\">비밀번호 확인</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwdCheck\" name=\"passwdCheck\" onChange={onChangeText} value={passwdCheck.value} />\n              <CheckLogo src={`/images/icons/${passwdCheck.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwdCheck.color }}>{passwdCheck.message}</InputMessage>\n          </JoinInputBox>\n          <AddressFormBox>\n            <label>주소</label>\n            <AddressSearchBox>\n              <AddressSearchInput disabled value={address.zipcode} />\n              <AddressSearchButton type=\"button\" onClick={() => setShowsModal(true)}>우편번호 검색</AddressSearchButton>\n            </AddressSearchBox>\n            <JoinInput>\n              <Input type=\"text\" disabled placeholder=\"상세 주소\" value={address.baseAddress} />\n            </JoinInput>\n            <JoinInput>\n              <Input type=\"text\" placeholder=\"나머지 주소\" onChange={onChangeDetailAddress} value={address.detailAddress} />\n            </JoinInput>\n          </AddressFormBox>\n          <AgreementBox>\n            <AllAgreeBox onClick={() => onClickAgree('all')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.all ? 'check' : 'check_default'}.png`} />\n              <AgreeText>전체 약관에 동의합니다.</AgreeText>\n            </AllAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree1')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree1 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>서비스 이용약관 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree2')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree2 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>개인정보 처리방침 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree3')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree3 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>이벤트 마케팅 수신 동의 <span>(선택)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n          </AgreementBox>\n          <ButtonWrapper>\n            <JoinButton type=\"submit\">회원가입</JoinButton>\n          </ButtonWrapper>\n        </JoinForm>\n      </Main>\n      <SearchModal style={{ display: showsModal ? 'flex' : 'none' }}>\n        <CloseButton src=\"/images/icons/x.png\" onClick={() => setShowsModal(false)} />\n        <DaumPostCode onComplete={onCompleteAddressSelect} />\n      </SearchModal>\n    </Positional>\n  );\n}\n\nexport default Join;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\modifyProfile\\ModifyProfile.tsx",["411","412","413","414","415","416","417","418"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\Notice.tsx",["419"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { noticeInterface } from '../../../interfaces/NoticeInterface';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getNoticeRequest, toggleActiveNotice } from './noticeSlice';\r\n\r\nconst Layout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  margin-bottom: 1.5em;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n    font-size: 20.484px;\r\n  }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst NoticeList = styled.ul`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst NoticeItem = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 1px solid #e0e0e0;\r\n`;\r\n\r\nconst NoticeTitleBox = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5em 1.5em;\r\n`;\r\n\r\nconst NoticeText = styled.div`\r\n  & h2 {\r\n    font-size: 3.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p {\r\n    font-size: 3vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 15.932px;\r\n    }\r\n    & p {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DetailButton = styled.button`\r\n  cursor: pointer;\r\n  font-size: 3vw;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  & img {\r\n      width: 1em;\r\n      height: 1em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 13.656px;\r\n  }\r\n`;\r\n\r\nconst NoticeDetail = styled.div`\r\n  padding: 0 1.6em;\r\n  overflow: hidden;\r\n  transition: 0.5s;\r\n  font-size: 0.8em;\r\n`;\r\n\r\nconst PaginationBox = styled.div`\r\n  display: flex;\r\n  padding: 1.5em 0;\r\n  & img {\r\n    cursor: pointer;\r\n    width: 1em;\r\n    height: 1em;\r\n  }\r\n`;\r\n\r\nconst PrevPage = styled.img``;\r\n\r\nconst PageNumbers = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst PageNumber = styled.div`\r\n`;\r\n\r\nconst PageLink = styled(Link)`\r\n  padding: 0 0.5em;\r\n`;\r\n\r\nconst NextPage = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Notice():JSX.Element {\r\n  const [page, setPage] = useState<number>(0);\r\n  const dispatch = useDispatch();\r\n  const { noticeList, totalPage } = useSelector((state: any) => state.myPageSlice.noticeSlice);\r\n\r\n  useEffect(() => {\r\n    dispatch(getNoticeRequest(page));\r\n  }, [page, dispatch]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <BackLink to=\"/mypage\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>공지사항</h1>\r\n      </Header>\r\n      {\r\n        !totalPage\r\n          ? (\r\n            <>\r\n              <EmptyArticle>\r\n                <h2>등록된 공지사항이 없습니다.</h2>\r\n              </EmptyArticle>\r\n            </>\r\n          )\r\n          : (\r\n            <NoticeList>\r\n              {\r\n                noticeList.map((notice: noticeInterface) => (\r\n                  <NoticeItem key={notice.noticeId}>\r\n                    <NoticeTitleBox>\r\n                      <NoticeText>\r\n                        <h2>{notice.title}</h2>\r\n                        <p>{notice.writeDate}</p>\r\n                      </NoticeText>\r\n                      <DetailButton onClick={() => dispatch(toggleActiveNotice(notice.noticeId))}>\r\n                        <img src=\"/images/icons/back.png\" alt=\"\" style={{ transform: notice.active ? 'rotate(90deg)' : 'rotate(-90deg)' }} />\r\n                      </DetailButton>\r\n                    </NoticeTitleBox>\r\n                    <NoticeDetail style={{ height: notice.active ? 'auto' : '0', padding: notice.active ? '1em 1.5em' : '0 1.5em' }}>\r\n                      <p>\r\n                        {notice.content}\r\n                      </p>\r\n                    </NoticeDetail>\r\n                  </NoticeItem>\r\n                ))\r\n              }\r\n            </NoticeList>\r\n          )\r\n      }\r\n      <PaginationBox>\r\n        <PrevPage src=\"/images/icons/back.png\" />\r\n        <PageNumbers>\r\n          {\r\n            !totalPage\r\n              ? (\r\n                <PageNumber>\r\n                  <PageLink to=\"/notice\">1</PageLink>\r\n                </PageNumber>\r\n              )\r\n              : (\r\n                <>\r\n                  {\r\n                    numberArrayUtill(totalPage).map((i) => (\r\n                      <PageNumber>\r\n                        <PageLink onClick={() => setPage(i - 1)} to={`/notice?page=${i - 1}`}>{i}</PageLink>\r\n                      </PageNumber>\r\n                    ))\r\n                  }\r\n                </>\r\n              )\r\n          }\r\n        </PageNumbers>\r\n        <NextPage src=\"/images/icons/back.png\" />\r\n      </PaginationBox>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Notice;\r\n",["420","421","422","423","424","425"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postSlice.ts",["426","427","428"],"import { createSlice } from '@reduxjs/toolkit';\nimport { articleInterface } from '../../interfaces/PostList.interface';\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    bookPost: [],\n    hasMorePost: true,\n    filtering: { division: 'sales', category: '' },\n\n    isLoadBookPostLoading: false,\n    isLoadBookPostDone: false,\n    isLoadBookPostError: false,\n\n    isLoadScrollBookPostLoading: false,\n    isLoadScrollPostDone: false,\n    isLoadScrollPostError: null,\n\n    isAddBookPostLoading: false,\n    isAddBookPostDone: false,\n    isAddBookPostError: null,\n\n    isDeleteBookPostLoading: false,\n    isDeleteBookPostDone: false,\n    isDeleteBookPostError: null,\n  },\n  reducers: {\n    loadBookPostRequest(state, action) {\n      state.isLoadBookPostLoading = true;\n      state.isLoadScrollBookPostLoading = false;\n      state.hasMorePost = true;\n      state.filtering.division = action.payload.filtering.division;\n      state.filtering.category = action.payload.filtering.category;\n    },\n    loadBookPostSuccess(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostDone = true;\n      state.bookPost = action.payload.data;\n    },\n    loadBookPostError(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostError = action.payload;\n    },\n    loadScrollBookPostRequest(state, action) {\n      state.isLoadScrollBookPostLoading = true;\n    },\n    loadScrollBookPostSuccess(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostDone = true;\n      state.bookPost = state.bookPost.concat(action.payload.data);\n      state.hasMorePost = action.payload.data.length === 10;\n    },\n    loadScrollBookPostError(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostError = action.payload;\n    },\n    addBookPostRequest(state, action) {\n      state.isAddBookPostLoading = true;\n      state.isAddBookPostDone = false;\n    },\n    addBookPostSuccess(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = true;\n      state.bookPost = action.payload.data.concat(state.bookPost);\n    },\n    addBookPostError(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = false;\n      state.isAddBookPostError = action.payload.error;\n    },\n    deleteBookPostRequest(state, action) {\n      state.isDeleteBookPostLoading = true;\n    },\n    deleteBookPostSuccess(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostDone = true;\n      state.bookPost.filter((post:articleInterface) => post.articleId !== action.payload);\n    },\n    deleteBookPostError(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  loadBookPostRequest,\n  loadBookPostSuccess,\n  loadBookPostError,\n  loadScrollBookPostRequest,\n  loadScrollBookPostSuccess,\n  loadScrollBookPostError,\n  addBookPostRequest,\n  addBookPostSuccess,\n  addBookPostError,\n  deleteBookPostRequest,\n  deleteBookPostSuccess,\n  deleteBookPostError,\n} = postSlice.actions;\n\nexport default postSlice.reducer;\n",["429","430","431","432","433","434"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts",[],["435","436","437","438","439","440"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSlice.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\MyPage.tsx",["441"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myMarket\\MyMarket.tsx",[],["442","443","444","445","446","447"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPageSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\questionApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSaga.ts",["448"],"import { all, call, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  logoutAsync,\r\n  modifyProfileAsync,\r\n  postLoginAsync,\r\n  socialLoginAsync,\r\n} from '../../api/userApi';\r\nimport {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  postModifyProfileRequest,\r\n  postAddWishListRequest,\r\n  postRemoveWishListRequest,\r\n  postModifyProfileRequestError,\r\n  postModifyProfileRequestSuccess,\r\n  postAddWishListRequestSuccess,\r\n  postRemoveWishListRequestSuccess,\r\n  postAddWishListRequestError,\r\n  postRemoveWishListRequestError,\r\n} from './userSlice';\r\nimport { modifyProfileInterface } from '../../interfaces/UserInterface';\r\nimport { addWishs, removeWishs } from '../../api/wishsApi';\r\nimport { push } from '../../utils/historyUtil';\r\n\r\nfunction* postLoginRequestSaga(action: { payload: { user: { email: string, passwd: string } } }) {\r\n  try {\r\n    const loginUser = yield call(postLoginAsync, action.payload.user);\r\n\r\n    if (loginUser.nickname) {\r\n      yield put({\r\n        type: postLoginRequestSuccess,\r\n        payload: {\r\n          ...loginUser,\r\n          email: action.payload.user.email,\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postSocialLoginRequestSaga(action: { payload: { social: string } }) {\r\n  try {\r\n    const result = yield call(socialLoginAsync, action.payload.social);\r\n\r\n    if (result) {\r\n      yield put({\r\n        type: postLoginRequestSuccess,\r\n        payload: 'social',\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: postLoginRequestError,\r\n        payload: '소셜 로그인 실패',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postLogoutRequestSaga() {\r\n  try {\r\n    yield call(logoutAsync);\r\n    yield put({\r\n      type: postLogoutRequestSuccess,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLogoutRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postModifyProfileRequestSaga(action: {payload: {modifyProfile: FormData}}) {\r\n  try {\r\n    console.log(action.payload.modifyProfile);\r\n    const result = yield call(modifyProfileAsync, action.payload.modifyProfile);\r\n    console.log(result);\r\n    if (result) {\r\n      yield put({\r\n        type: postModifyProfileRequestSuccess,\r\n        payload: action.payload.modifyProfile.get('nickname'),\r\n      });\r\n      yield call(push, '/mypage');\r\n    } else {\r\n      yield put({\r\n        type: postModifyProfileRequestError,\r\n        payload: '비밀번호 불일치',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: postModifyProfileRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postAddWishListRequestSaga(action: {payload: string }) {\r\n  try {\r\n    const result = yield addWishs(action.payload);\r\n    if (result) {\r\n      yield put({\r\n        type: postAddWishListRequestSuccess,\r\n        payload: action.payload,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: postAddWishListRequestError,\r\n        paylose: '서버 통신 에러',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* postRemoveWishListRequestSaga(action: {payload: string}) {\r\n  try {\r\n    const result = yield removeWishs(action.payload);\r\n    if (result) {\r\n      yield put({\r\n        type: postRemoveWishListRequestSuccess,\r\n        payload: action.payload,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: postRemoveWishListRequestError,\r\n        paylose: '서버 통신 에러',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* watchLogin(): Generator {\r\n  yield takeLatest(postLoginRequest, postLoginRequestSaga);\r\n  yield takeLatest(postSocialLoginRequest, postSocialLoginRequestSaga);\r\n  yield takeLatest(postLogoutRequest, postLogoutRequestSaga);\r\n}\r\n\r\nfunction* watchProfile(): Generator {\r\n  yield takeLatest(postModifyProfileRequest, postModifyProfileRequestSaga);\r\n}\r\n\r\nfunction* watchWishList(): Generator {\r\n  yield takeLatest(postAddWishListRequest, postAddWishListRequestSaga);\r\n  yield takeLatest(postRemoveWishListRequest, postRemoveWishListRequestSaga);\r\n}\r\n\r\nexport default function* userSaga(): Generator {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchProfile),\r\n    fork(watchWishList),\r\n  ]);\r\n}\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSlice.ts",["449"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst detailViewSlice = createSlice({\n  name: 'detailView',\n  initialState: {\n    detailBookPost: null,\n    isLoadDetailBookPostLoading: false,\n    isLoadDetailBookPostDone: false,\n    isLoadDetailBookPostError: null,\n  },\n  reducers: {\n    loadDetailBookPostRequest(state, action) {\n      state.isLoadDetailBookPostLoading = true;\n    },\n    loadDetailBookPostSuccess(state, action) {\n      state.isLoadDetailBookPostLoading = false;\n      state.isLoadDetailBookPostDone = true;\n      state.detailBookPost = action.payload.data;\n    },\n    loadDetailBookPostError(state, action) {\n      state.isLoadDetailBookPostLoading = false;\n      state.isLoadDetailBookPostError = action.payload;\n    },\n  },\n});\n\nexport const {\n  loadDetailBookPostRequest,\n  loadDetailBookPostSuccess,\n  loadDetailBookPostError,\n} = detailViewSlice.actions;\n\nexport default detailViewSlice.reducer;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\Review.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts",["450","451","452","453","454"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\LoginForm.tsx",["455","456","457"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { postLoginRequest, postLoginRequestError, postLoginRequestSuccess } from './userSlice';\nimport { LOGIN_ERROR, postLoginAsync, SERVER_ERROR } from '../../api/userApi';\n\ninterface inputFormInterface {\n  email: string,\n  passwd: string\n}\n\nconst Form = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.8em;\n`;\n\nconst Input = styled.input`\n  width: 18em;\n  font-size: 4.5vw;\n  padding: 0.8em 1.3em;\n  outline: none;\n  border: 2px solid #3960a688;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px #3960a655;\n  &:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n    padding: 16px 26px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst Button = styled.button`\n  width: 18em;\n  text-align: center;\n  padding: 1em 0;\n  background: #3960a6;\n  font-weight: bold;\n  color: #FFF;\n  font-size: 4.5vw;\n  border: none;\n  border-radius: 200px;\n  outline: none;\n  margin-bottom: 1.2em;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n    padding: 20px 0;\n    margin-bottom: 24px;\n  }\n`;\n\nfunction LoginForm(): JSX.Element {\n  const [inputs, setInputs] = useState<inputFormInterface>({\n    email: '',\n    passwd: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const history = useHistory();\n\n  const onLogin = async (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      const result = await postLoginAsync({ email: inputs.email, passwd: inputs.passwd });\n      dispatch(postLoginRequestSuccess(result));\n      history.push('/home');\n    } catch (error) {\n      dispatch(postLoginRequestError(error.message));\n      if (error.message === LOGIN_ERROR) {\n        alert('로그인 정보를 확인해주세요.');\n      } else if (error.message === SERVER_ERROR) {\n        alert('서버 통신중 에러 발생');\n      }\n    }\n  };\n\n  return (\n    <Form method=\"GET\" onSubmit={onLogin}>\n      <InputBox>\n        <Input type=\"email\" name=\"email\" placeholder=\"아이디\" value={inputs.email} onChange={handleChange} required />\n        <Input type=\"password\" name=\"passwd\" placeholder=\"비밀번호\" value={inputs.passwd} onChange={handleChange} required />\n      </InputBox>\n      <Button type=\"submit\">로그인</Button>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\Header.tsx",["458"],"import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport CategoryMenu from './CategoryMenu';\nimport { loadBookPostRequest } from '../postSlice';\n\ninterface PostTabItemInterface {\n  tab: number,\n  active: number,\n}\n\nconst HeaderWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n  max-width: 600px;\n  margin: 0 auto;\n  z-index: 50;\n`;\nconst TopWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n  padding: 10px 30px;\n`;\nconst BuggerMenu = styled.button`\n  align-self: center;\n  background-color:white;\n  border: none;\n  & img{\n    width: 30px;\n  }\n`;\nconst LogoWrapper = styled.div`\n  display: flex;  \n  align-items: center;\n  justify-content: center;\n  color: #3960a6;\n  flex-basis: 2;\n  font-size: 25px;\n  & img{\n    height: 40px;\n  }\n`;\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  background-color: #e9e9e9;\n  width: 85%;\n  margin: auto;\n  & input {\n    color: white;\n    border:0;\n    width:80%;\n    background-color: inherit;\n  }\n  & img {\n    width: 20px;\n  }\n`;\nconst PostTab = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  margin-top: 5px;\n  border: 1px solid #e9e9e9;\n`;\nconst PostTabItem = styled.li<PostTabItemInterface>`\n  padding: 10px 0;\n  width: 100%;\n  text-align: center;\n  border-bottom: ${(props) => props.tab === props.active && '3px solid #3960a6'};\n`;\n\nfunction Header(): JSX.Element {\n  const dispatch = useDispatch();\n  const [openMenu, setOpenMenu] = useState(false);\n  const [tabIndex, setTabIndex] = useState(0);\n  const { filtering } = useSelector((state: any) => state.postSlice);\n  const onOpenMenuHandler = useCallback((e : React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setOpenMenu(true);\n  }, []);\n  const onCloseMenuHandler = useCallback(() => {\n    setTabIndex(0);\n    setOpenMenu(false);\n  }, []);\n  const onClickSalePostTab = useCallback(() => {\n    setTabIndex(0);\n    dispatch(loadBookPostRequest({ filtering: { division: 'sales', category: filtering.category } }));\n  }, [dispatch, filtering.category]);\n  const onClickPurchasPostTab = useCallback(() => {\n    setTabIndex(1);\n    dispatch(loadBookPostRequest({ filtering: { division: 'purchase', category: filtering.category } }));\n  }, [dispatch, filtering.category]);\n  return (\n    <HeaderWrapper>\n      {openMenu && <CategoryMenu onMenuClose={onCloseMenuHandler} />}\n      <TopWrapper>\n        <BuggerMenu onClick={onOpenMenuHandler}>\n          <img src=\"/images/icons/category.png\" alt=\"menu_icon\" />\n        </BuggerMenu>\n        <LogoWrapper>\n          <img src=\"/images/icons/logo.jpeg\" alt=\"logo\" />\n        </LogoWrapper>\n      </TopWrapper>\n      <SearchInput>\n        <input placeholder=\"책 이름을 검색해보세요!\" />\n        <img src=\"/images/icons/search.png\" alt=\"search_icon\" />\n      </SearchInput>\n      <PostTab>\n        <PostTabItem onClick={() => onClickSalePostTab()} tab={0} active={tabIndex}>판매글</PostTabItem>\n        <PostTabItem onClick={() => onClickPurchasPostTab()} tab={1} active={tabIndex}>구매글</PostTabItem>\n      </PostTab>\n    </HeaderWrapper>\n  );\n}\n\nexport default Header;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\postList\\PostList.tsx",["459"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport AppLayout from '../../../components/AppLayout';\nimport Header from './Header';\nimport { loadBookPostRequest } from '../postSlice';\nimport InfiniteScrollList from './InfiniteScrollList';\nimport AddPostButton from '../addPost/AddPostButton';\nimport Loading from '../../../components/Loading';\n\nconst PostListWrapper = styled.div`\n  margin-top: 150px;\n  width: 100%;\n  height: auto;\n`;\nconst Category = styled.div`\n  padding: 10px;\n  color: #3960a6;\n`;\nfunction PostList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, filtering, isLoadBookPostLoading } = useSelector((state: any) => state.postSlice);\n  useEffect(() => {\n    dispatch(loadBookPostRequest({ filtering: { division: filtering.division, category: filtering.category } }));\n  }, [dispatch, filtering.category, filtering.division]);\n  console.log(bookPost);\n\n  return (\n    <AppLayout activeId={0}>\n      <div>\n        <Header />\n        <PostListWrapper>\n          <AddPostButton />\n          <Category>카테고리: {filtering.category}</Category>\n          {\n            isLoadBookPostLoading\n              ? <Loading />\n              : <InfiniteScrollList />\n          }\n          <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} />\n        </PostListWrapper>\n      </div>\n    </AppLayout>\n  );\n}\n\nexport default PostList;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSlice.ts",["460"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { noticeInterface } from '../../../interfaces/NoticeInterface';\r\n\r\nconst initialNoticeList: noticeInterface[] = [];\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    noticeList: initialNoticeList,\r\n    totalPage: 0,\r\n    isGetNoticeLoading: false, // 로그인\r\n    isGetNoticeSucceed: false,\r\n    isGetNoticeError: null,\r\n  },\r\n  reducers: {\r\n    getNoticeRequest: (state, action) => {\r\n      state.isGetNoticeLoading = true;\r\n    },\r\n    getNoticeRequestSuccess: (state, action) => {\r\n      state.isGetNoticeLoading = false;\r\n      state.isGetNoticeSucceed = true;\r\n      state.noticeList = action.payload.data;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getNoticeRequestError: (state, action) => {\r\n      state.isGetNoticeLoading = false;\r\n      state.isGetNoticeError = action.payload;\r\n    },\r\n    toggleActiveNotice: (state, action) => {\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        noticeList: state.noticeList.map((item) => (item.noticeId === action.payload ? { ...item, active: !item.active } : item)),\r\n      };\r\n      console.log();\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getNoticeRequest,\r\n  getNoticeRequestSuccess,\r\n  getNoticeRequestError,\r\n  toggleActiveNotice,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts",["461"],"import axios, { AxiosResponse } from 'axios';\nimport { Console } from 'console';\nimport { AddBookPostInterface } from '../interfaces/PostList.interface';\n\nexport function getAladinBook(title: string):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/ttb/api/ItemSearch.aspx?ttbkey=ttbehaakdl1816001&QueryType=Title&Query=${title}&output=js`);\n}\n// 일반사용자 판매/구매글 추가\nexport function addBookPostAPI(data: AddBookPostInterface):Promise<AxiosResponse> {\n  console.log(data);\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  };\n  return axios.post('http://local.corsmarket.ml/api/article', data, config);\n}\nexport function deleteBookPostAPI(id: number):Promise<AxiosResponse> {\n  return axios.delete(`http://local.corsmarket.ml/api/article/${id}`);\n}\n// 일반사용자 판매/구매글 리스트 불러오기\nexport function getBookPostAPI(filtering:{ division:string, category:string }, id?: number):Promise<AxiosResponse> {\n  console.log(filtering);\n  return axios.get(`http://local.corsmarket.ml/api/articles/${filtering.division}`, {\n    params: {\n      category: filtering.category, lastId: id,\n    },\n  });\n}\n// 일반사용자 판매/구매글 상세페이지 불러오기\nexport function getBookPostDetailViewAPI(postId: number):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/api/article/${postId}`);\n}\n// 마켓리스트 불러오기\nexport function getMarketListAPI():Promise<AxiosResponse> {\n  return axios.get('http://local.corsmarket.ml/api/market');\n}\nexport function deletePostAPI(id: number):Promise<AxiosResponse> {\n  return axios.get('http://local.corsmarket.ml/api/market/delete',\n    { params: { articleId: id } });\n}\n// 마켓글 불러오기\nexport function getMarketBookAPI(marketId: number):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/api/market/${marketId}`);\n}\n// 해당 마켓에 판매글 추가\nexport function addMarketBookPostAPI(marketId: number):Promise<AxiosResponse> {\n  return axios.post(`http://local.corsmarket.ml/api/market/${marketId}`);\n}\n",["462","463","464","465","466","467"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\ImageSlide.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\detailViewSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\AddQuestion.tsx",["468"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\r\nimport styled from 'styled-components';\r\nimport { addQuestionRequestAsync } from '../../../api/questionApi';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  margin-bottom: 1.5em;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  padding: 0 1em;\r\n  & input {\r\n    font-size: 4.5vw;\r\n    margin-bottom: 1.5em;\r\n    padding: 0.5em;\r\n    border: 1px solid #d4d4d4;\r\n    border-radius: 10px;\r\n  }\r\n  & textarea {\r\n    font-size: 4.5vw;\r\n    padding: 1em;\r\n    height: 15em;\r\n    resize: none;\r\n    border: 1px solid #d4d4d4;\r\n    border-radius: 10px;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & input {\r\n      font-size: 20.484px;\r\n    }\r\n    & textarea {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWrap = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n  padding: 2em 1em;\r\n  & button {\r\n      color: #fff;\r\n      border: 1px solid #eee;\r\n      border-radius: 10px;\r\n      background: none;\r\n      font-size: 3.5vw;\r\n      padding: 0.5em 1em;\r\n      margin-left: 1em;\r\n  }\r\n  & button.reset {\r\n    background: #bbbbbb;\r\n  }\r\n  & button.save {\r\n    background: #3960a6;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & button {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContentHeader = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5em;\r\n`;\r\nconst HeaderTextArea = styled.div`\r\n  word-break: keep-all;\r\n  & h2 {\r\n    font-weight: bold;\r\n    line-height: 1.3em;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p {\r\n    color: #5f5f5f;\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\nconst HeaderImgArea = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & img {\r\n    width: 5em;\r\n    height: 5em;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nfunction AddQuestion():JSX.Element {\r\n  const history = useHistory();\r\n  const [questionInputs, setQuestionInputs] = useState({\r\n    title: '',\r\n    content: '',\r\n  });\r\n\r\n  const onChangeInputs = (e: React.ChangeEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setQuestionInputs({\r\n      ...questionInputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onClickReset = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setQuestionInputs({\r\n      title: '',\r\n      content: '',\r\n    });\r\n  };\r\n\r\n  const onSubmitSaveInputs = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const result = await addQuestionRequestAsync(questionInputs);\r\n    console.log(result);\r\n    if (result.status === 200) {\r\n      ToastsStore.success('문의사항 등록이 완료되었습니다.');\r\n      history.push('/question');\r\n    } else {\r\n      ToastsStore.error('문의사항 등록중 오류가 발생하였습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout onSubmit={onSubmitSaveInputs}>\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n      <Header>\r\n        <BackLink to=\"/question\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>문의사항 작성</h1>\r\n      </Header>\r\n      <Content>\r\n        <ContentHeader>\r\n          <HeaderTextArea>\r\n            <h2>\r\n              코스마켓 이용 중에 생긴<br />\r\n              불편한 점이나 문의사항을<br />\r\n              보내주세요.\r\n            </h2>\r\n            <p>\r\n              확인 후 답변드리겠습니다.\r\n            </p>\r\n          </HeaderTextArea>\r\n          <HeaderImgArea>\r\n            <img src=\"/images/icons/report_img.png\" alt=\"\" />\r\n          </HeaderImgArea>\r\n        </ContentHeader>\r\n        <input onChange={onChangeInputs} id=\"title\" name=\"title\" value={questionInputs.title} type=\"text\" placeholder=\"제목을 입력해주세요.\" />\r\n        <textarea onChange={onChangeInputs} id=\"content\" name=\"content\" value={questionInputs.content} placeholder=\"내용을 입력해주세요.\" />\r\n      </Content>\r\n      <ButtonWrap>\r\n        <button onClick={onClickReset} className=\"reset\" type=\"button\">reset</button>\r\n        <button className=\"save\" type=\"submit\">save</button>\r\n      </ButtonWrap>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddQuestion;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\ImagePreView.tsx",["469","470"],"import React, { useCallback, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\ninterface ImageURLInterface {\n  id: string;\n  url: string;\n  image: Blob;\n}\n\ninterface ImagePreViewInterface {\n  onChangeImage: (e: any) => void,\n  images: ImageURLInterface[],\n  onDelete: (imageId: string) => void,\n}\n\nconst ImageInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 130px;\n  border: 1px solid #e8e8e8;\n  & button {\n    margin-left: 10px;\n    background-color: #f2f0f0;\n    border: 0;\n  }\n  & img {\n    width: 40px;\n    height: 40px;\n    margin: 10px;\n  }\n`;\nconst ImageInput = styled.input`\n  display: none;\n`;\nconst ImagePreviewWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  & img {\n    width: 60px;\n    height: 60px;\n  }\n  & button {\n    width: 60px;\n    background-color: white;\n    border: 0;\n  }\n`;\n\nfunction ImagePreView({ onChangeImage, images, onDelete }: ImagePreViewInterface):JSX.Element {\n  const ImageRef = useRef<HTMLInputElement>(null);\n  const onClickImageUpload = useCallback(() => {\n    ImageRef.current?.click();\n  }, []);\n\n  return (\n    <ImageInputWrapper>\n      <ImageInput type=\"file\" accept=\"image/jpg,image/png,image/jpeg\" name=\"file\" id=\"image\" onChange={onChangeImage} ref={ImageRef} />\n      <button type=\"button\" onClick={onClickImageUpload}>\n        <img src=\"/images/icons/camera.png\" alt=\"camera\" />\n      </button>\n      {images.map((v) => (\n        <ImagePreviewWrapper key={v.id}>\n          <button type=\"button\" onClick={() => onDelete(v.id)}>X</button>\n          <img src={v.url} alt=\"img\" />\n        </ImagePreviewWrapper>\n      ))}\n    </ImageInputWrapper>\n  );\n}\n\nexport default ImagePreView;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\question.tsx",["471"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\userSlice.ts",["472","473","474","475","476","477","478"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { memberInterface } from '../../interfaces/UserInterface';\r\n\r\nconst initialUser: memberInterface = {\r\n  email: '', // 고유번호\r\n  nickname: '', // 닉네임\r\n  profileImg: '', // 프로필 이미지\r\n  latitude: 0, // 위도\r\n  longitude: 0, // 경도\r\n  role: '', // 권한\r\n  articles: [], // 아이디 만\r\n  wishList: [], // 아이디 만\r\n};\r\n\r\nconst initialUserState = {\r\n  user: initialUser,\r\n  isLoginLoading: false, // 로그인\r\n  isLoginSucceed: false,\r\n  isLoginError: null,\r\n  isLogoutLoading: false, // 로그아웃\r\n  isLogoutSucceed: false,\r\n  isLogoutError: null,\r\n  isModifyProfileLoading: false, // 프로필 수정\r\n  isModifyProfileSuccess: false,\r\n  isModifyProfileError: null,\r\n  isAddWishListLoading: false, // 찜하기\r\n  isAddWishListSuccess: false,\r\n  isAddWishListError: null,\r\n  isRemoveWishListLoading: false, // 찜 해제하기\r\n  isRemoveWishListSuccess: false,\r\n  isRemoveWishListError: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: initialUserState,\r\n  reducers: {\r\n    postLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n    },\r\n    postSocialLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n    },\r\n    postLoginRequestSuccess: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginSucceed = true;\r\n      state.user = action.payload;\r\n    },\r\n    postLoginRequestError: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginSucceed = false;\r\n      state.isLoginError = action.payload;\r\n    },\r\n    postLogoutRequest: (state, action) => {\r\n      state.isLogoutLoading = true;\r\n    },\r\n    postLogoutRequestSuccess: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutSucceed = true;\r\n      state.user = initialUserState.user;\r\n    },\r\n    postLogoutRequestError: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutError = action.payload;\r\n    },\r\n    postModifyProfileRequest: (state, action) => {\r\n      state.isModifyProfileLoading = true;\r\n    },\r\n    postModifyProfileRequestSuccess: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileSuccess = true;\r\n      state.user.nickname = action.payload;\r\n    },\r\n    postModifyProfileRequestError: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileError = action.payload;\r\n    },\r\n    postAddWishListRequest: (state, action) => {\r\n      state.isAddWishListLoading = true;\r\n    },\r\n    postAddWishListRequestSuccess: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListSuccess = true;\r\n      state.user.wishList = state.user.wishList.concat(action.payload);\r\n    },\r\n    postAddWishListRequestError: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListError = action.payload;\r\n    },\r\n    postRemoveWishListRequest: (state, action) => {\r\n      state.isRemoveWishListLoading = true;\r\n    },\r\n    postRemoveWishListRequestSuccess: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListSuccess = true;\r\n      state.user.wishList = state.user.wishList.filter((item) => (item !== action.payload));\r\n    },\r\n    postRemoveWishListRequestError: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  postModifyProfileRequest,\r\n  postModifyProfileRequestSuccess,\r\n  postModifyProfileRequestError,\r\n  postAddWishListRequest,\r\n  postAddWishListRequestSuccess,\r\n  postAddWishListRequestError,\r\n  postRemoveWishListRequest,\r\n  postRemoveWishListRequestSuccess,\r\n  postRemoveWishListRequestError,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts",[],["479","480","481","482","483","484"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\detailPostView\\DetailPostView.tsx",["485","486"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, RouteComponentProps, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Spinner from 'react-spinner-material';\nimport { loadDetailBookPostRequest } from './detailViewSlice';\nimport DetailPostContent from './DetailPostContent';\n\ninterface ParamTypes {\n  id: string\n}\n\nconst DetailPostViewContainer = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  margin-bottom: 100px;\n  position: relative;\n`;\nconst Header = styled.div`\n  position: absolute;\n  padding: 10px;\n  & img{\n    width: 30px;\n  }\n  z-index: 5000;\n`;\n\nfunction DetailPostView({ history }: RouteComponentProps):JSX.Element {\n  const dispatch = useDispatch();\n  const { detailBookPost } = useSelector((state: any) => state.detailViewSlice);\n  const { id } = useParams<ParamTypes>();\n\n  console.log('DetailPostView', id);\n  const postIdNumber = Number(id);\n\n  useEffect(() => {\n    dispatch(loadDetailBookPostRequest(postIdNumber));\n  }, [dispatch, postIdNumber]);\n\n  return (\n    <DetailPostViewContainer>\n      <Link to=\"/home\">\n        <Header>\n          <img src=\"/images/icons/back.png\" alt=\"back_icon\" />\n        </Header>\n      </Link>\n      {detailBookPost !== null ? <DetailPostContent id={detailBookPost.articleId} /> : <Spinner color=\"#004c9d\" size={120} visible stroke={10} radius={50} />}\n    </DetailPostViewContainer>\n  );\n}\n\nexport default DetailPostView;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\Login.tsx",["487","488","489","490"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\chatting\\Chatting.tsx",["491","492","493","494","495","496"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\WishList.tsx",["497","498","499"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getWishListRequest } from './wishListSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MyWishsItems = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MyWishsItem = styled.div`\r\n  \r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImgBox = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 9em;\r\n  height: 10em;\r\n  margin-right: 1.5em;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: auto;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 2.5vw;\r\n    font-weight: bold;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 2.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 11.38px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 11.38px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 18.208px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction WishList():JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { wishList, totalPage, isGetWishListsError } = useSelector((state: any) => state.myPageSlice.myWishListSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getWishListRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  useEffect(() => {\r\n    if (isGetWishListsError === 'NON_LOGIN') {\r\n      alert('로그인이 필요한 서비스입니다. 로그인 후 더 많은 혜택을 받으세요.');\r\n      history.push('/');\r\n    } else if (isGetWishListsError === 'SERVER_ERROR') {\r\n      alert('서버 통신중 오류 발생');\r\n    }\r\n  }, [isGetWishListsError, history]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>찜목록</h1>\r\n        </Header>\r\n        {\r\n          !totalPage\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>찜한 책이 없습니다.</h2>\r\n                  <p>관심있는 상품을 찜해보아요.</p>\r\n                  <button type=\"button\" onClick={() => history.push('/home')}>판매책 보러가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MyWishsItems>\r\n                  {\r\n                    wishList.map((item: myArticleInterface) => (\r\n                      <MyWishsItem key={item.articleId}>\r\n                        <ItemLink to={`/post/${item.articleId}`}>\r\n                          <ItemImgBox>\r\n                            <ItemImage src={item.thumbnail} />\r\n                          </ItemImgBox>\r\n                          <ItemInfo>\r\n                            <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                            <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                            <h2 className=\"my_title\">{item.title}</h2>\r\n                            <p className=\"my_price\">{item.tprice} 원</p>\r\n                          </ItemInfo>\r\n                        </ItemLink>\r\n                      </MyWishsItem>\r\n                    ))\r\n                  }\r\n                </MyWishsItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/wishs?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/wishs?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/wishs?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            )\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WishList;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts",["500"],"const numberArrayUtill = (num: number) => {\r\n  const result = [];\r\n\r\n  for (let i = 1; i <= num; i++) {\r\n    result.push(i);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport default numberArrayUtill;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NodataPage.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSlice.ts",["501","502"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { questionInterface } from '../../../interfaces/Question.inteface';\r\n\r\nconst initialquestionList: questionInterface[] = [];\r\nconst initailQuestDetail = {\r\n  questionId: '',\r\n  title: '',\r\n  content: '',\r\n  comments: [],\r\n  totalPage: 0,\r\n};\r\n\r\nconst questionSlice = createSlice({\r\n  name: 'question',\r\n  initialState: {\r\n    questionList: initialquestionList,\r\n    totalPage: 0,\r\n    detailId: null,\r\n    questionDetail: initailQuestDetail,\r\n    isGetQuestionLoading: false,\r\n    isGetQuestionSucceed: false,\r\n    isGetQuestionError: null,\r\n    isGetQuestionDetailLoading: false,\r\n    isGetQuestioDetailSucceed: false,\r\n    isGetQuestionDetailError: null,\r\n  },\r\n  reducers: {\r\n    getQuestionRequest: (state, action) => {\r\n      state.isGetQuestionLoading = true;\r\n      state.isGetQuestionSucceed = false;\r\n      state.isGetQuestionDetailError = null;\r\n    },\r\n    getQuestionRequestSuccess: (state, action) => {\r\n      state.isGetQuestionLoading = false;\r\n      state.isGetQuestionSucceed = true;\r\n      state.questionList = action.payload.data;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getQuestionRequestError: (state, action) => {\r\n      state.isGetQuestionLoading = false;\r\n      state.isGetQuestionError = action.payload;\r\n    },\r\n    setDeatilId: (state, action) => {\r\n      state.detailId = action.payload;\r\n    },\r\n    getQuestionDetailRequest: (state, action) => {\r\n      state.isGetQuestionDetailLoading = true;\r\n      state.isGetQuestioDetailSucceed = false;\r\n      state.isGetQuestionDetailError = null;\r\n    },\r\n    getQuestionDetailRequestSuccess: (state, action) => {\r\n      state.isGetQuestionDetailLoading = false;\r\n      state.isGetQuestioDetailSucceed = true;\r\n      state.questionDetail = action.payload.data;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getQuestionDetailRequestError: (state, action) => {\r\n      state.isGetQuestionDetailLoading = false;\r\n      state.isGetQuestionDetailError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getQuestionRequest,\r\n  getQuestionRequestSuccess,\r\n  getQuestionRequestError,\r\n  setDeatilId,\r\n  getQuestionDetailRequest,\r\n  getQuestionDetailRequestSuccess,\r\n  getQuestionDetailRequestError,\r\n} = questionSlice.actions;\r\n\r\nexport default questionSlice.reducer;\r\n",["503","504","505","506","507","508"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\chattingApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\QuestionDetail.tsx",["509"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\interfaces\\mockdata.ts",["510","511"],"import faker from 'faker';\nimport { marketListInterface } from './MarketInterface';\nimport { AddBookPostInterface, PostListInterface, articleDetailInterface } from './PostList.interface';\n\nexport const dummyAddBookPost = (data: AddBookPostInterface) => ({\n  articleId: faker.random.number(),\n  memberId: data.memberId, // 내가 넣어줄 값\n  rprice: data.rprice, // 내가 넣어줄 값\n  writeDate: new Date(),\n  progress: data.progress, // 내가 넣어줄 값\n  title: data.title, // 내가 넣어줄 값\n  thumnail: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNEqDnzERi5Aa-o2Qk7r-GmibgwZWM0wV4utkTJZBRNULFk8KwNzUKtPXvgPE&usqp=CAc', // 내가 넣어줄 값\n  images: [], // 내가 넣어줄 값\n  content: data.content, // 내가 넣어줄 값\n  category: data.category, // 내가 넣어줄 값\n  tprice: data.tprice, // 내가 넣어줄 값\n  division: data.division, // 내가 넣어줄 값\n});\n\nexport const dummyPost: AddBookPostInterface = {\n  memberId: 3, // 작성자\n  rprice: 13000, // 판매가격\n  tprice: 16000, // 원래가격\n  content: '두번만 읽은 책입니다', // 내용\n  progress: 'POSTING', // 게시글 상태\n  title: '진격의거인', // 책제목\n  thumnail: 'http://image.yes24.com/momo/TopCate3025/MidCate007/302460746.jpg',\n  images: ['https://blog.kakaocdn.net/dn/28NKv/btqFjFQr9pe/n0TKtuuV3zmBSTF1olKqIK/img.jpg', 'https://www.hanbit.co.kr/data/editor/20200706083421_vfsgqsvu.jpg', 'https://www.hanbit.co.kr/data/editor/20200705234134_skcbzgms.jpg'],\n  category: '국내도서>자기계발', // 카테고리 키\n  division: 'SALE', // 구매 판매 구분\n};\n\nexport const dummyBookPost: PostListInterface = {\n  data: [],\n};\nexport const dummyDetailBookPost: articleDetailInterface = {\n  articleId: 1,\n  memberId: 2,\n  countDAO: {\n    chatCount: 10,\n    countId: 2,\n    views: 3,\n    wishCount: 5,\n  },\n  title: '이것이 MYSQL 이다',\n  content: '한번밖에 안읽은 책입니다. 상태 깨끗하고요.',\n  writeDate: new Date('2020-10-11'),\n  rprice: 13000,\n  tprice: 28000,\n  progress: 'POSTING',\n  category: {\n    cid: 2435, oneDepth: '국내도서', twoDepth: '자기계발', threeDepth: 'IT서적', fourDepth: '', fiveDepth: '',\n  },\n  division: 'SALE',\n  thumbnail: 'http://image.yes24.com/momo/TopCate3025/MidCate007/302460746.jpg',\n  image: ['https://blog.kakaocdn.net/dn/28NKv/btqFjFQr9pe/n0TKtuuV3zmBSTF1olKqIK/img.jpg', 'https://www.hanbit.co.kr/data/editor/20200706083421_vfsgqsvu.jpg', 'https://www.hanbit.co.kr/data/editor/20200705234134_skcbzgms.jpg'],\n};\nexport const generateDummyPost = (Postnumber: number) => Array(Postnumber).fill(0).map(() => (\n  {\n    articleId: faker.random.number(),\n    countDAO: {\n      chatCount: 2,\n      countId: 2,\n      views: 2,\n      wishCount: 3,\n    },\n    title: faker.commerce.productName(),\n    writeDate: new Date(),\n    tprice: 20000,\n    progress: 'POSTING',\n    category: {\n      cid: faker.random.number(), oneDepth: '국내도서', twoDepth: '소설/시/희곡', threeDepth: '', fourDepth: '', fiveDepth: '',\n    },\n    image: faker.random.image(),\n    nickname: faker.name.findName(),\n    market: null,\n  }\n));\n\nexport const dummyMarket:marketListInterface = {\n  data: [{\n    marketId: 1,\n    marketName: '찬미마켓',\n    marketIntro: '저렴하게 파는 친절한 마켓입니다',\n    marketImage: 'https://pbs.twimg.com/profile_images/968000221543202817/f92oypNr.jpg',\n  },\n  {\n    marketId: 2,\n    marketName: '오이마켓',\n    marketIntro: '저렴하게 파는 친절한 마켓입니다',\n    marketImage: 'https://pbs.twimg.com/profile_images/968000221543202817/f92oypNr.jpg',\n  }],\n};\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts",["512"],"import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\post\\addPost\\AddPostButton.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishsApi.ts",["513","514","515","516"],"import axios from 'axios';\r\n\r\nexport const addWishs = (articleId: string): Promise<boolean> => (\r\n  axios({\r\n    method: 'post',\r\n    url: '/api/wish/save',\r\n    params: {\r\n      articleId,\r\n    },\r\n  }).then((res) => true).catch((error) => false)\r\n);\r\n\r\nexport const removeWishs = (articleId: string): Promise<boolean> => (\r\n  axios({\r\n    method: 'post',\r\n    url: '/api/wish/delete',\r\n    params: {\r\n      articleId,\r\n    },\r\n  }).then((res) => true).catch((error) => false)\r\n);\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\Loading.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\MySaleArticle.tsx",["517","518"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getMySaleArticleRequest } from './mySaleArticleSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MySaleItems = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MySaleItem = styled.div`\r\n  \r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImgBox = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 9em;\r\n  height: 10em;\r\n  margin-right: 1.5em;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: auto;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 2.5vw;\r\n    font-weight: bold;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 2.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 11.38px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 11.38px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 18.208px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction MySaleArticle():JSX.Element | null {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { mySaleArticle, totalPage, isGetMyPurchaseArticlesLoading } = useSelector((state: any) => state.myPageSlice.mySaleArticleSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getMySaleArticleRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>판매목록</h1>\r\n        </Header>\r\n        {\r\n          (!totalPage\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>등록한 판매글이 없습니다.</h2>\r\n                  <p>다 보신 책들을 나누어 보아요.</p>\r\n                  <button type=\"button\" onClick={() => history.push('/addPost/purchase')}>책 판매하러 가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MySaleItems>\r\n                  {\r\n                    mySaleArticle.map((item: myArticleInterface) => (\r\n                      <MySaleItem key={item.articleId}>\r\n                        <ItemLink to={`/post/${item.articleId}`}>\r\n                          <ItemImgBox>\r\n                            <ItemImage src={item.thumbnail} />\r\n                          </ItemImgBox>\r\n                          <ItemInfo>\r\n                            <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                            <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                            <h2 className=\"my_title\">{item.title}</h2>\r\n                            <p className=\"my_price\">{item.tprice} 원</p>\r\n                          </ItemInfo>\r\n                        </ItemLink>\r\n                      </MySaleItem>\r\n                    ))\r\n                  }\r\n                </MySaleItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/sales?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/sales?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/sales?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            ))\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MySaleArticle;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts",["519","520","521"],"import axios from 'axios';\r\n\r\nexport function emailDuplicationAsync(email: string): Promise<boolean> {\r\n  return axios({\r\n    method: 'POST',\r\n    url: '/api/check/email',\r\n    params: { email },\r\n  }).then((res) => true).catch((error) => {\r\n    if (error.response.status !== 400) {\r\n      throw new Error('서버 통신 오류');\r\n    }\r\n\r\n    return false;\r\n  });\r\n}\r\n\r\nexport function emailCertificationAsync(email: string, code: string): Promise<boolean> {\r\n  return axios({\r\n    method: 'POST',\r\n    url: '/api/check/code',\r\n    params: { email, code },\r\n  }).then((res) => true).catch((error) => {\r\n    if (error.response.status !== 400) {\r\n      throw new Error('서버 통신 오류');\r\n    }\r\n\r\n    return false;\r\n  });\r\n}\r\n\r\nexport function nicknameDuplicationAsync(nickname: string): Promise<boolean> {\r\n  return axios({\r\n    method: 'POST',\r\n    url: '/api/check/nickname',\r\n    params: { nickname },\r\n  }).then((res) => true).catch((error) => {\r\n    if (error.response.status !== 400) {\r\n      throw new Error('서버통신에러');\r\n    }\r\n    return false;\r\n  });\r\n}\r\n\r\nexport function joinRequestAsync(email: string, nickname: string, passwd: string, address: string): Promise<boolean> {\r\n  return axios({\r\n    method: 'POST',\r\n    url: '/api/join',\r\n    params: { email, passwd, nickname, address },\r\n  }).then((res) => (res.status === 200));\r\n}\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\SocialLogin.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\mockdata.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\imageFileReader.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\historyUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\MyPurchaseArticle.tsx",["522"],{"ruleId":"523","replacedBy":"524"},{"ruleId":"525","replacedBy":"526"},{"ruleId":"527","replacedBy":"528"},{"ruleId":"529","replacedBy":"530"},{"ruleId":"531","replacedBy":"532"},{"ruleId":"533","replacedBy":"534"},{"ruleId":"535","severity":1,"message":"536","line":4,"column":10,"nodeType":"537","messageId":"538","endLine":4,"endColumn":27},{"ruleId":"535","severity":1,"message":"539","line":5,"column":61,"nodeType":"537","messageId":"538","endLine":5,"endColumn":85},{"ruleId":"523","replacedBy":"540"},{"ruleId":"525","replacedBy":"541"},{"ruleId":"527","replacedBy":"542"},{"ruleId":"529","replacedBy":"543"},{"ruleId":"531","replacedBy":"544"},{"ruleId":"533","replacedBy":"545"},{"ruleId":"523","replacedBy":"546"},{"ruleId":"525","replacedBy":"547"},{"ruleId":"527","replacedBy":"548"},{"ruleId":"529","replacedBy":"549"},{"ruleId":"531","replacedBy":"550"},{"ruleId":"533","replacedBy":"551"},{"ruleId":"523","replacedBy":"552"},{"ruleId":"525","replacedBy":"553"},{"ruleId":"527","replacedBy":"554"},{"ruleId":"529","replacedBy":"555"},{"ruleId":"531","replacedBy":"556"},{"ruleId":"533","replacedBy":"557"},{"ruleId":"535","severity":1,"message":"558","line":13,"column":42,"nodeType":"537","messageId":"538","endLine":13,"endColumn":48},{"ruleId":"535","severity":1,"message":"558","line":13,"column":38,"nodeType":"537","messageId":"538","endLine":13,"endColumn":44},{"ruleId":"535","severity":1,"message":"558","line":13,"column":33,"nodeType":"537","messageId":"538","endLine":13,"endColumn":39},{"ruleId":"559","severity":1,"message":"560","line":12,"column":11,"nodeType":"561","messageId":"562","endLine":12,"endColumn":14,"suggestions":"563"},{"ruleId":"559","severity":1,"message":"560","line":54,"column":86,"nodeType":"561","messageId":"562","endLine":54,"endColumn":89,"suggestions":"564"},{"ruleId":"523","replacedBy":"565"},{"ruleId":"525","replacedBy":"566"},{"ruleId":"527","replacedBy":"567"},{"ruleId":"529","replacedBy":"568"},{"ruleId":"531","replacedBy":"569"},{"ruleId":"533","replacedBy":"570"},{"ruleId":"571","severity":1,"message":"572","line":4,"column":28,"nodeType":"573","messageId":"574","endLine":4,"endColumn":60},{"ruleId":"523","replacedBy":"575"},{"ruleId":"525","replacedBy":"576"},{"ruleId":"527","replacedBy":"577"},{"ruleId":"529","replacedBy":"578"},{"ruleId":"531","replacedBy":"579"},{"ruleId":"533","replacedBy":"580"},{"ruleId":"523","replacedBy":"581"},{"ruleId":"525","replacedBy":"582"},{"ruleId":"527","replacedBy":"583"},{"ruleId":"529","replacedBy":"584"},{"ruleId":"531","replacedBy":"585"},{"ruleId":"533","replacedBy":"586"},{"ruleId":"559","severity":1,"message":"560","line":129,"column":56,"nodeType":"561","messageId":"562","endLine":129,"endColumn":59,"suggestions":"587"},{"ruleId":"559","severity":1,"message":"560","line":184,"column":34,"nodeType":"561","messageId":"562","endLine":184,"endColumn":37,"suggestions":"588"},{"ruleId":"523","replacedBy":"589"},{"ruleId":"525","replacedBy":"590"},{"ruleId":"527","replacedBy":"591"},{"ruleId":"529","replacedBy":"592"},{"ruleId":"531","replacedBy":"593"},{"ruleId":"533","replacedBy":"594"},{"ruleId":"559","severity":1,"message":"560","line":142,"column":44,"nodeType":"561","messageId":"562","endLine":142,"endColumn":47,"suggestions":"595"},{"ruleId":"559","severity":1,"message":"560","line":143,"column":50,"nodeType":"561","messageId":"562","endLine":143,"endColumn":53,"suggestions":"596"},{"ruleId":"523","replacedBy":"597"},{"ruleId":"525","replacedBy":"598"},{"ruleId":"527","replacedBy":"599"},{"ruleId":"529","replacedBy":"600"},{"ruleId":"531","replacedBy":"601"},{"ruleId":"533","replacedBy":"602"},{"ruleId":"535","severity":1,"message":"603","line":2,"column":10,"nodeType":"537","messageId":"538","endLine":2,"endColumn":20},{"ruleId":"604","severity":1,"message":"605","line":463,"column":7,"nodeType":"606","messageId":"607","endLine":463,"endColumn":35},{"ruleId":"604","severity":1,"message":"605","line":506,"column":7,"nodeType":"606","messageId":"607","endLine":506,"endColumn":35},{"ruleId":"604","severity":1,"message":"605","line":573,"column":7,"nodeType":"606","messageId":"607","endLine":573,"endColumn":31},{"ruleId":"604","severity":1,"message":"605","line":575,"column":7,"nodeType":"606","messageId":"607","endLine":575,"endColumn":40},{"ruleId":"604","severity":1,"message":"605","line":577,"column":7,"nodeType":"606","messageId":"607","endLine":577,"endColumn":33},{"ruleId":"604","severity":1,"message":"605","line":579,"column":7,"nodeType":"606","messageId":"607","endLine":579,"endColumn":32},{"ruleId":"604","severity":1,"message":"605","line":581,"column":7,"nodeType":"606","messageId":"607","endLine":581,"endColumn":27},{"ruleId":"604","severity":1,"message":"605","line":583,"column":7,"nodeType":"606","messageId":"607","endLine":583,"endColumn":33},{"ruleId":"604","severity":1,"message":"605","line":586,"column":7,"nodeType":"606","messageId":"607","endLine":586,"endColumn":30},{"ruleId":"559","severity":1,"message":"560","line":248,"column":62,"nodeType":"561","messageId":"562","endLine":248,"endColumn":65,"suggestions":"608"},{"ruleId":"604","severity":1,"message":"605","line":292,"column":7,"nodeType":"606","messageId":"607","endLine":292,"endColumn":24},{"ruleId":"604","severity":1,"message":"605","line":436,"column":7,"nodeType":"606","messageId":"607","endLine":436,"endColumn":28},{"ruleId":"604","severity":1,"message":"605","line":438,"column":7,"nodeType":"606","messageId":"607","endLine":438,"endColumn":35},{"ruleId":"604","severity":1,"message":"605","line":440,"column":7,"nodeType":"606","messageId":"607","endLine":440,"endColumn":30},{"ruleId":"604","severity":1,"message":"605","line":442,"column":7,"nodeType":"606","messageId":"607","endLine":442,"endColumn":32},{"ruleId":"604","severity":1,"message":"605","line":472,"column":9,"nodeType":"606","messageId":"607","endLine":472,"endColumn":28},{"ruleId":"559","severity":1,"message":"560","line":477,"column":88,"nodeType":"561","messageId":"562","endLine":477,"endColumn":91,"suggestions":"609"},{"ruleId":"559","severity":1,"message":"560","line":168,"column":57,"nodeType":"561","messageId":"562","endLine":168,"endColumn":60,"suggestions":"610"},{"ruleId":"523","replacedBy":"611"},{"ruleId":"525","replacedBy":"612"},{"ruleId":"527","replacedBy":"613"},{"ruleId":"529","replacedBy":"614"},{"ruleId":"531","replacedBy":"615"},{"ruleId":"533","replacedBy":"616"},{"ruleId":"535","severity":1,"message":"558","line":44,"column":38,"nodeType":"537","messageId":"538","endLine":44,"endColumn":44},{"ruleId":"535","severity":1,"message":"558","line":57,"column":31,"nodeType":"537","messageId":"538","endLine":57,"endColumn":37},{"ruleId":"535","severity":1,"message":"558","line":71,"column":34,"nodeType":"537","messageId":"538","endLine":71,"endColumn":40},{"ruleId":"523","replacedBy":"617"},{"ruleId":"525","replacedBy":"618"},{"ruleId":"527","replacedBy":"619"},{"ruleId":"529","replacedBy":"620"},{"ruleId":"531","replacedBy":"621"},{"ruleId":"533","replacedBy":"622"},{"ruleId":"523","replacedBy":"623"},{"ruleId":"525","replacedBy":"624"},{"ruleId":"527","replacedBy":"625"},{"ruleId":"529","replacedBy":"626"},{"ruleId":"531","replacedBy":"627"},{"ruleId":"533","replacedBy":"628"},{"ruleId":"559","severity":1,"message":"560","line":176,"column":40,"nodeType":"561","messageId":"562","endLine":176,"endColumn":43,"suggestions":"629"},{"ruleId":"523","replacedBy":"630"},{"ruleId":"525","replacedBy":"631"},{"ruleId":"527","replacedBy":"632"},{"ruleId":"529","replacedBy":"633"},{"ruleId":"531","replacedBy":"634"},{"ruleId":"533","replacedBy":"635"},{"ruleId":"535","severity":1,"message":"636","line":26,"column":10,"nodeType":"537","messageId":"538","endLine":26,"endColumn":32},{"ruleId":"535","severity":1,"message":"558","line":12,"column":38,"nodeType":"537","messageId":"538","endLine":12,"endColumn":44},{"ruleId":"535","severity":1,"message":"636","line":3,"column":27,"nodeType":"537","messageId":"538","endLine":3,"endColumn":49},{"ruleId":"604","severity":1,"message":"605","line":37,"column":7,"nodeType":"606","messageId":"607","endLine":37,"endColumn":27},{"ruleId":"535","severity":1,"message":"637","line":47,"column":12,"nodeType":"537","messageId":"538","endLine":47,"endColumn":18},{"ruleId":"535","severity":1,"message":"638","line":62,"column":13,"nodeType":"537","messageId":"538","endLine":62,"endColumn":18},{"ruleId":"535","severity":1,"message":"639","line":73,"column":12,"nodeType":"537","messageId":"538","endLine":73,"endColumn":15},{"ruleId":"535","severity":1,"message":"640","line":5,"column":10,"nodeType":"537","messageId":"538","endLine":5,"endColumn":26},{"ruleId":"604","severity":1,"message":"605","line":91,"column":9,"nodeType":"606","messageId":"607","endLine":91,"endColumn":33},{"ruleId":"604","severity":1,"message":"605","line":93,"column":9,"nodeType":"606","messageId":"607","endLine":93,"endColumn":30},{"ruleId":"559","severity":1,"message":"560","line":85,"column":45,"nodeType":"561","messageId":"562","endLine":85,"endColumn":48,"suggestions":"641"},{"ruleId":"559","severity":1,"message":"560","line":23,"column":78,"nodeType":"561","messageId":"562","endLine":23,"endColumn":81,"suggestions":"642"},{"ruleId":"535","severity":1,"message":"558","line":16,"column":31,"nodeType":"537","messageId":"538","endLine":16,"endColumn":37},{"ruleId":"535","severity":1,"message":"643","line":2,"column":10,"nodeType":"537","messageId":"538","endLine":2,"endColumn":17},{"ruleId":"523","replacedBy":"644"},{"ruleId":"525","replacedBy":"645"},{"ruleId":"527","replacedBy":"646"},{"ruleId":"529","replacedBy":"647"},{"ruleId":"531","replacedBy":"648"},{"ruleId":"533","replacedBy":"649"},{"ruleId":"535","severity":1,"message":"650","line":161,"column":25,"nodeType":"537","messageId":"538","endLine":161,"endColumn":75},{"ruleId":"535","severity":1,"message":"651","line":1,"column":38,"nodeType":"537","messageId":"538","endLine":1,"endColumn":46},{"ruleId":"559","severity":1,"message":"560","line":11,"column":22,"nodeType":"561","messageId":"562","endLine":11,"endColumn":25,"suggestions":"652"},{"ruleId":"559","severity":1,"message":"560","line":201,"column":59,"nodeType":"561","messageId":"562","endLine":201,"endColumn":62,"suggestions":"653"},{"ruleId":"535","severity":1,"message":"558","line":38,"column":31,"nodeType":"537","messageId":"538","endLine":38,"endColumn":37},{"ruleId":"535","severity":1,"message":"558","line":41,"column":37,"nodeType":"537","messageId":"538","endLine":41,"endColumn":43},{"ruleId":"535","severity":1,"message":"558","line":54,"column":32,"nodeType":"537","messageId":"538","endLine":54,"endColumn":38},{"ruleId":"535","severity":1,"message":"558","line":57,"column":39,"nodeType":"537","messageId":"538","endLine":57,"endColumn":45},{"ruleId":"535","severity":1,"message":"558","line":66,"column":39,"nodeType":"537","messageId":"538","endLine":66,"endColumn":45},{"ruleId":"535","severity":1,"message":"558","line":78,"column":37,"nodeType":"537","messageId":"538","endLine":78,"endColumn":43},{"ruleId":"535","severity":1,"message":"558","line":90,"column":40,"nodeType":"537","messageId":"538","endLine":90,"endColumn":46},{"ruleId":"523","replacedBy":"654"},{"ruleId":"525","replacedBy":"655"},{"ruleId":"527","replacedBy":"656"},{"ruleId":"529","replacedBy":"657"},{"ruleId":"531","replacedBy":"658"},{"ruleId":"533","replacedBy":"659"},{"ruleId":"535","severity":1,"message":"660","line":28,"column":27,"nodeType":"537","messageId":"538","endLine":28,"endColumn":34},{"ruleId":"559","severity":1,"message":"560","line":30,"column":50,"nodeType":"561","messageId":"562","endLine":30,"endColumn":53,"suggestions":"661"},{"ruleId":"535","severity":1,"message":"662","line":1,"column":17,"nodeType":"537","messageId":"538","endLine":1,"endColumn":26},{"ruleId":"535","severity":1,"message":"663","line":2,"column":10,"nodeType":"537","messageId":"538","endLine":2,"endColumn":21},{"ruleId":"535","severity":1,"message":"664","line":3,"column":8,"nodeType":"537","messageId":"538","endLine":3,"endColumn":14},{"ruleId":"535","severity":1,"message":"665","line":8,"column":10,"nodeType":"537","messageId":"538","endLine":8,"endColumn":27},{"ruleId":"535","severity":1,"message":"666","line":158,"column":21,"nodeType":"537","messageId":"538","endLine":158,"endColumn":33},{"ruleId":"667","severity":1,"message":"668","line":166,"column":24,"nodeType":"669","messageId":"670","endLine":166,"endColumn":33},{"ruleId":"535","severity":1,"message":"671","line":166,"column":34,"nodeType":"537","messageId":"538","endLine":166,"endColumn":39},{"ruleId":"667","severity":1,"message":"668","line":181,"column":27,"nodeType":"669","messageId":"670","endLine":181,"endColumn":36},{"ruleId":"535","severity":1,"message":"671","line":181,"column":37,"nodeType":"537","messageId":"538","endLine":181,"endColumn":42},{"ruleId":"559","severity":1,"message":"560","line":187,"column":29,"nodeType":"561","messageId":"562","endLine":187,"endColumn":32,"suggestions":"672"},{"ruleId":"559","severity":1,"message":"560","line":213,"column":76,"nodeType":"561","messageId":"562","endLine":213,"endColumn":79,"suggestions":"673"},{"ruleId":"604","severity":1,"message":"605","line":250,"column":7,"nodeType":"606","messageId":"607","endLine":250,"endColumn":53},{"ruleId":"604","severity":1,"message":"605","line":253,"column":7,"nodeType":"606","messageId":"607","endLine":253,"endColumn":28},{"ruleId":"571","severity":1,"message":"572","line":1,"column":26,"nodeType":"573","messageId":"574","endLine":1,"endColumn":42},{"ruleId":"535","severity":1,"message":"558","line":28,"column":33,"nodeType":"537","messageId":"538","endLine":28,"endColumn":39},{"ruleId":"535","severity":1,"message":"558","line":46,"column":39,"nodeType":"537","messageId":"538","endLine":46,"endColumn":45},{"ruleId":"523","replacedBy":"674"},{"ruleId":"525","replacedBy":"675"},{"ruleId":"527","replacedBy":"676"},{"ruleId":"529","replacedBy":"677"},{"ruleId":"531","replacedBy":"678"},{"ruleId":"533","replacedBy":"679"},{"ruleId":"559","severity":1,"message":"560","line":166,"column":86,"nodeType":"561","messageId":"562","endLine":166,"endColumn":89,"suggestions":"680"},{"ruleId":"571","severity":1,"message":"572","line":5,"column":33,"nodeType":"573","messageId":"574","endLine":5,"endColumn":64},{"ruleId":"571","severity":1,"message":"572","line":58,"column":34,"nodeType":"573","messageId":"574","endLine":58,"endColumn":57},{"ruleId":"571","severity":1,"message":"572","line":3,"column":25,"nodeType":"573","messageId":"574","endLine":3,"endColumn":57},{"ruleId":"535","severity":1,"message":"639","line":10,"column":12,"nodeType":"537","messageId":"538","endLine":10,"endColumn":15},{"ruleId":"535","severity":1,"message":"638","line":10,"column":33,"nodeType":"537","messageId":"538","endLine":10,"endColumn":38},{"ruleId":"535","severity":1,"message":"639","line":20,"column":12,"nodeType":"537","messageId":"538","endLine":20,"endColumn":15},{"ruleId":"535","severity":1,"message":"638","line":20,"column":33,"nodeType":"537","messageId":"538","endLine":20,"endColumn":38},{"ruleId":"535","severity":1,"message":"681","line":213,"column":37,"nodeType":"537","messageId":"538","endLine":213,"endColumn":67},{"ruleId":"559","severity":1,"message":"560","line":213,"column":92,"nodeType":"561","messageId":"562","endLine":213,"endColumn":95,"suggestions":"682"},{"ruleId":"535","severity":1,"message":"639","line":8,"column":12,"nodeType":"537","messageId":"538","endLine":8,"endColumn":15},{"ruleId":"535","severity":1,"message":"639","line":22,"column":12,"nodeType":"537","messageId":"538","endLine":22,"endColumn":15},{"ruleId":"535","severity":1,"message":"639","line":36,"column":12,"nodeType":"537","messageId":"538","endLine":36,"endColumn":15},{"ruleId":"559","severity":1,"message":"560","line":213,"column":64,"nodeType":"561","messageId":"562","endLine":213,"endColumn":67,"suggestions":"683"},"lines-around-directive",["684"],"no-spaced-func",["685"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'generateDummyPost' is defined but never used.","Identifier","unusedVar","'getBookPostDetailViewAPI' is defined but never used.",["684"],["685"],[],[],[],[],["684"],["685"],[],[],[],[],["684"],["685"],[],[],[],[],"'action' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["686","687"],["688","689"],["684"],["685"],[],[],[],[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["684"],["685"],[],[],[],[],["684"],["685"],[],[],[],[],["690","691"],["692","693"],["684"],["685"],[],[],[],[],["694","695"],["696","697"],["684"],["685"],[],[],[],[],"'HashRouter' is defined but never used.","no-alert","Unexpected alert.","CallExpression","unexpected",["698","699"],["700","701"],["702","703"],["684"],["685"],[],[],[],[],["684"],["685"],[],[],[],[],["684"],["685"],[],[],[],[],["704","705"],["684"],["685"],[],[],[],[],"'modifyProfileInterface' is defined but never used.","'result' is defined but never used.","'error' is defined but never used.","'res' is defined but never used.","'postLoginRequest' is defined but never used.",["706","707"],["708","709"],"'Console' is defined but never used.",["684"],["685"],[],[],[],[],"'e' is defined but never used.","'useState' is defined but never used.",["710","711"],["712","713"],["684"],["685"],[],[],[],[],"'history' is defined but never used.",["714","715"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'cookie' is defined but never used.","'postLogoutRequest' is defined but never used.","'userNickname' is defined but never used.","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","'frame' is defined but never used.",["716","717"],["718","719"],["684"],["685"],[],[],[],[],["720","721"],"'isGetMyPurchaseArticlesLoading' is assigned a value but never used.",["722","723"],["724","725"],"padding-line-between-statements","func-call-spacing",{"messageId":"726","fix":"727","desc":"728"},{"messageId":"729","fix":"730","desc":"731"},{"messageId":"726","fix":"732","desc":"728"},{"messageId":"729","fix":"733","desc":"731"},{"messageId":"726","fix":"734","desc":"728"},{"messageId":"729","fix":"735","desc":"731"},{"messageId":"726","fix":"736","desc":"728"},{"messageId":"729","fix":"737","desc":"731"},{"messageId":"726","fix":"738","desc":"728"},{"messageId":"729","fix":"739","desc":"731"},{"messageId":"726","fix":"740","desc":"728"},{"messageId":"729","fix":"741","desc":"731"},{"messageId":"726","fix":"742","desc":"728"},{"messageId":"729","fix":"743","desc":"731"},{"messageId":"726","fix":"744","desc":"728"},{"messageId":"729","fix":"745","desc":"731"},{"messageId":"726","fix":"746","desc":"728"},{"messageId":"729","fix":"747","desc":"731"},{"messageId":"726","fix":"748","desc":"728"},{"messageId":"729","fix":"749","desc":"731"},{"messageId":"726","fix":"750","desc":"728"},{"messageId":"729","fix":"751","desc":"731"},{"messageId":"726","fix":"752","desc":"728"},{"messageId":"729","fix":"753","desc":"731"},{"messageId":"726","fix":"754","desc":"728"},{"messageId":"729","fix":"755","desc":"731"},{"messageId":"726","fix":"756","desc":"728"},{"messageId":"729","fix":"757","desc":"731"},{"messageId":"726","fix":"758","desc":"728"},{"messageId":"729","fix":"759","desc":"731"},{"messageId":"726","fix":"760","desc":"728"},{"messageId":"729","fix":"761","desc":"731"},{"messageId":"726","fix":"762","desc":"728"},{"messageId":"729","fix":"763","desc":"731"},{"messageId":"726","fix":"764","desc":"728"},{"messageId":"729","fix":"765","desc":"731"},{"messageId":"726","fix":"766","desc":"728"},{"messageId":"729","fix":"767","desc":"731"},{"messageId":"726","fix":"768","desc":"728"},{"messageId":"729","fix":"769","desc":"731"},"suggestUnknown",{"range":"770","text":"771"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"770","text":"772"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"773","text":"771"},{"range":"773","text":"772"},{"range":"774","text":"771"},{"range":"774","text":"772"},{"range":"775","text":"771"},{"range":"775","text":"772"},{"range":"776","text":"771"},{"range":"776","text":"772"},{"range":"777","text":"771"},{"range":"777","text":"772"},{"range":"778","text":"771"},{"range":"778","text":"772"},{"range":"779","text":"771"},{"range":"779","text":"772"},{"range":"780","text":"771"},{"range":"780","text":"772"},{"range":"781","text":"771"},{"range":"781","text":"772"},{"range":"782","text":"771"},{"range":"782","text":"772"},{"range":"783","text":"771"},{"range":"783","text":"772"},{"range":"784","text":"771"},{"range":"784","text":"772"},{"range":"785","text":"771"},{"range":"785","text":"772"},{"range":"786","text":"771"},{"range":"786","text":"772"},{"range":"787","text":"771"},{"range":"787","text":"772"},{"range":"788","text":"771"},{"range":"788","text":"772"},{"range":"789","text":"771"},{"range":"789","text":"772"},{"range":"790","text":"771"},{"range":"790","text":"772"},{"range":"791","text":"771"},{"range":"791","text":"772"},[458,461],"unknown","never",[1322,1325],[3210,3213],[5090,5093],[3186,3189],[3266,3269],[4776,4779],[11106,11109],[3300,3303],[3400,3403],[1840,1843],[827,830],[235,238],[3988,3991],[816,819],[4332,4335],[4249,4252],[3262,3265],[4285,4288],[4270,4273]]