[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myMarket\\MyMarket.tsx":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSlice.ts":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSaga.ts":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSlice.ts":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\imageFileReader.ts":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSaga.ts":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx":"12","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\MyPage.tsx":"13","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\Notice.tsx":"14","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\market\\Market.tsx":"15","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSlice.ts":"16","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts":"17","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\AddPostButton.tsx":"18","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\mockdata.ts":"19","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts":"20","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx":"21","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSaga.ts":"22","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSlice.ts":"23","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts":"24","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\Login.tsx":"25","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\MyPurchaseArticle.tsx":"26","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\question.tsx":"27","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishsApi.ts":"28","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\ImagePreView.tsx":"29","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx":"30","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\WishList.tsx":"31","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx":"32","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\chatting\\ChattingList.tsx":"33","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\MySaleArticle.tsx":"34","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts":"35","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx":"36","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx":"37","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx":"38","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\Review.tsx":"39","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\interfaces\\mockdata.ts":"40","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\LoginForm.tsx":"41","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NotFound.tsx":"42","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSaga.ts":"43","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts":"44","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts":"45","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts":"46","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSaga.ts":"47","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts":"48","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\SearchBook.tsx":"49","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts":"50","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\chatting\\Chatting.tsx":"51","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSaga.ts":"52","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx":"53","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signUp\\Join.tsx":"54","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\modifyProfile\\ModifyProfile.tsx":"55","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts":"56","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\AddPostPage.tsx":"57","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts":"58","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts":"59","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostView.tsx":"60","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\chattingApi.ts":"61","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\questionApi.ts":"62","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myMarket\\myMarketSaga.ts":"63","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myMarketApi.ts":"64","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts":"65"},{"size":2566,"mtime":1613542151621,"results":"66","hashOfConfig":"67"},{"size":4472,"mtime":1613791282304,"results":"68","hashOfConfig":"67"},{"size":885,"mtime":1613272432272,"results":"69","hashOfConfig":"67"},{"size":950,"mtime":1613777996023,"results":"70","hashOfConfig":"67"},{"size":1097,"mtime":1613698220072,"results":"71","hashOfConfig":"67"},{"size":346,"mtime":1613542151673,"results":"72","hashOfConfig":"67"},{"size":3408,"mtime":1613543412658,"results":"73","hashOfConfig":"67"},{"size":241,"mtime":1613542151673,"results":"74","hashOfConfig":"67"},{"size":3638,"mtime":1613696064200,"results":"75","hashOfConfig":"67"},{"size":441,"mtime":1613777996006,"results":"76","hashOfConfig":"67"},{"size":1040,"mtime":1613698179527,"results":"77","hashOfConfig":"67"},{"size":2595,"mtime":1613696064199,"results":"78","hashOfConfig":"67"},{"size":5815,"mtime":1613696064212,"results":"79","hashOfConfig":"67"},{"size":5775,"mtime":1613778076982,"results":"80","hashOfConfig":"67"},{"size":1636,"mtime":1613543412642,"results":"81","hashOfConfig":"67"},{"size":1003,"mtime":1613699481266,"results":"82","hashOfConfig":"67"},{"size":191,"mtime":1613542151677,"results":"83","hashOfConfig":"67"},{"size":1476,"mtime":1613543412654,"results":"84","hashOfConfig":"67"},{"size":1218,"mtime":1613696064232,"results":"85","hashOfConfig":"67"},{"size":1508,"mtime":1613542151465,"results":"86","hashOfConfig":"67"},{"size":1565,"mtime":1613272432279,"results":"87","hashOfConfig":"67"},{"size":1051,"mtime":1613698242011,"results":"88","hashOfConfig":"67"},{"size":1173,"mtime":1613777996018,"results":"89","hashOfConfig":"67"},{"size":458,"mtime":1613699189846,"results":"90","hashOfConfig":"67"},{"size":1936,"mtime":1613789909935,"results":"91","hashOfConfig":"67"},{"size":7940,"mtime":1613787889169,"results":"92","hashOfConfig":"67"},{"size":5439,"mtime":1613696064226,"results":"93","hashOfConfig":"67"},{"size":483,"mtime":1613542151477,"results":"94","hashOfConfig":"67"},{"size":1697,"mtime":1613542151493,"results":"95","hashOfConfig":"67"},{"size":2849,"mtime":1613543412662,"results":"96","hashOfConfig":"67"},{"size":8190,"mtime":1613698437334,"results":"97","hashOfConfig":"67"},{"size":1319,"mtime":1613543412662,"results":"98","hashOfConfig":"67"},{"size":2206,"mtime":1613542151505,"results":"99","hashOfConfig":"67"},{"size":7892,"mtime":1613696064221,"results":"100","hashOfConfig":"67"},{"size":2112,"mtime":1613542151465,"results":"101","hashOfConfig":"67"},{"size":2240,"mtime":1613543412598,"results":"102","hashOfConfig":"67"},{"size":1414,"mtime":1613272432278,"results":"103","hashOfConfig":"67"},{"size":1574,"mtime":1613699254069,"results":"104","hashOfConfig":"67"},{"size":3263,"mtime":1613696064232,"results":"105","hashOfConfig":"67"},{"size":3897,"mtime":1613543412670,"results":"106","hashOfConfig":"67"},{"size":2753,"mtime":1613696064239,"results":"107","hashOfConfig":"67"},{"size":171,"mtime":1613542151489,"results":"108","hashOfConfig":"67"},{"size":856,"mtime":1613696064225,"results":"109","hashOfConfig":"67"},{"size":2254,"mtime":1613789931691,"results":"110","hashOfConfig":"67"},{"size":569,"mtime":1613272432329,"results":"111","hashOfConfig":"67"},{"size":512,"mtime":1613542151477,"results":"112","hashOfConfig":"67"},{"size":793,"mtime":1613542151513,"results":"113","hashOfConfig":"67"},{"size":989,"mtime":1613543412626,"results":"114","hashOfConfig":"67"},{"size":1253,"mtime":1613542151497,"results":"115","hashOfConfig":"67"},{"size":510,"mtime":1613696064245,"results":"116","hashOfConfig":"67"},{"size":6784,"mtime":1613542151501,"results":"117","hashOfConfig":"67"},{"size":875,"mtime":1613777996021,"results":"118","hashOfConfig":"67"},{"size":5708,"mtime":1613696064202,"results":"119","hashOfConfig":"67"},{"size":18394,"mtime":1613696064244,"results":"120","hashOfConfig":"67"},{"size":15140,"mtime":1613696064209,"results":"121","hashOfConfig":"67"},{"size":1364,"mtime":1613542151453,"results":"122","hashOfConfig":"67"},{"size":8869,"mtime":1613696064204,"results":"123","hashOfConfig":"67"},{"size":343,"mtime":1613272432332,"results":"124","hashOfConfig":"67"},{"size":440,"mtime":1611271238964,"results":"125","hashOfConfig":"67"},{"size":1478,"mtime":1613543412634,"results":"126","hashOfConfig":"67"},{"size":108,"mtime":1613542151449,"results":"127","hashOfConfig":"67"},{"size":1016,"mtime":1613777996011,"results":"128","hashOfConfig":"67"},{"size":982,"mtime":1613777996007,"results":"129","hashOfConfig":"67"},{"size":303,"mtime":1613790439398,"results":"130","hashOfConfig":"67"},{"size":2256,"mtime":1613542151617,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"sthwp6",{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"147"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"144"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"144"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"144"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"160"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"160"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"177"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"147"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"147"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"154"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"177"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"147"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"160"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"147"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts",["295","296","297","298"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myMarket\\MyMarket.tsx",["299","300","301","302","303"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSlice.ts",["304","305"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst addPostSlice = createSlice({\n  name: 'addPost',\n  initialState: {\n    isAddBookPostLoading: false,\n    isAddBookPostDone: false,\n    isAddBookPostError: null,\n  },\n  reducers: {\n    addBookPostRequest(state, action) {\n      state.isAddBookPostLoading = true;\n      state.isAddBookPostDone = false;\n    },\n    addBookPostSuccess(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = true;\n      // state.bookPost.unshift(dummyBookPost(action.payload));\n    },\n    addBookPostError(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = false;\n      state.isAddBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  addBookPostRequest,\n  addBookPostSuccess,\n  addBookPostError,\n} = addPostSlice.actions;\n\nexport default addPostSlice.reducer;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSlice.ts",["306"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst mySaleArticleSlice = createSlice({\r\n  name: 'myArticle',\r\n  initialState: {\r\n    mySaleArticle: [],\r\n    totalPage: 0,\r\n    isGetMySaleArticlesLoading: false, // 내 판매글 가져오기\r\n    isGetMySaleArticlesSuccess: false,\r\n    isGetMySaleArticlesError: null,\r\n  },\r\n  reducers: {\r\n    getMySaleArticleRequest: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = true;\r\n    },\r\n    getMySaleArticleRequestSuccess: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesSuccess = true;\r\n      state.mySaleArticle = action.payload.myAricleList;\r\n      state.totalPage = action.payload.pageTotal;\r\n    },\r\n    getMySaleArticleRequestError: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getMySaleArticleRequest,\r\n  getMySaleArticleRequestSuccess,\r\n  getMySaleArticleRequestError,\r\n} = mySaleArticleSlice.actions;\r\n\r\nexport default mySaleArticleSlice.reducer;\r\n",["307","308","309","310","311","312"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\imageFileReader.ts",[],["313","314","315","316","317","318"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx",["319"],"import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport CategoryMenu from './CategoryMenu';\nimport { loadBookPostRequest } from './postSlice';\n\ninterface PostTabItemInterface {\n  tab: number,\n  active: number,\n}\n\nconst HeaderWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n  max-width: 600px;\n  margin: 0 auto;\n  z-index: 50;\n`;\nconst TopWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n  padding: 10px 30px;\n`;\nconst BuggerMenu = styled.button`\n  align-self: center;\n  background-color:white;\n  border: none;\n  & img{\n    width: 30px;\n  }\n`;\nconst LogoWrapper = styled.div`\n  display: flex;  \n  align-items: center;\n  justify-content: center;\n  color: #3960a6;\n  flex-basis: 2;\n  font-size: 25px;\n  & img{\n    height: 40px;\n  }\n`;\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  background-color: #e9e9e9;\n  width: 85%;\n  margin: auto;\n  & input {\n    color: white;\n    border:0;\n    width:80%;\n    background-color: inherit;\n  }\n  & img {\n    width: 20px;\n  }\n`;\nconst PostTab = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  margin-top: 5px;\n  border: 1px solid #e9e9e9;\n`;\nconst PostTabItem = styled.li<PostTabItemInterface>`\n  padding: 10px 0;\n  width: 100%;\n  text-align: center;\n  border-bottom: ${(props) => props.tab === props.active && '3px solid #3960a6'};\n`;\n\nfunction Header(): JSX.Element {\n  const dispatch = useDispatch();\n  const [openMenu, setOpenMenu] = useState(false);\n  const [tabIndex, setTabIndex] = useState(0);\n  const { filtering } = useSelector((state: any) => state.postSlice);\n  const onOpenMenuHandler = useCallback((e : React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setOpenMenu(true);\n  }, []);\n  const onCloseMenuHandler = useCallback(() => {\n    setTabIndex(0);\n    setOpenMenu(false);\n  }, []);\n  const onClickSalePostTab = useCallback(() => {\n    setTabIndex(0);\n    dispatch(loadBookPostRequest({ filtering: { division: 'sales', category: filtering.category } }));\n  }, [dispatch, filtering.category]);\n  const onClickPurchasPostTab = useCallback(() => {\n    setTabIndex(1);\n    dispatch(loadBookPostRequest({ filtering: { division: 'purchase', category: filtering.category } }));\n  }, [dispatch, filtering.category]);\n  return (\n    <HeaderWrapper>\n      {openMenu && <CategoryMenu onMenuClose={onCloseMenuHandler} />}\n      <TopWrapper>\n        <BuggerMenu onClick={onOpenMenuHandler}>\n          <img src=\"/images/icons/category.png\" alt=\"menu_icon\" />\n        </BuggerMenu>\n        <LogoWrapper>\n          <img src=\"/images/icons/logo.jpeg\" alt=\"logo\" />\n        </LogoWrapper>\n      </TopWrapper>\n      <SearchInput>\n        <input placeholder=\"책 이름을 검색해보세요!\" />\n        <img src=\"/images/icons/search.png\" alt=\"search_icon\" />\n      </SearchInput>\n      <PostTab>\n        <PostTabItem onClick={() => onClickSalePostTab()} tab={0} active={tabIndex}>판매글</PostTabItem>\n        <PostTabItem onClick={() => onClickPurchasPostTab()} tab={1} active={tabIndex}>구매글</PostTabItem>\n      </PostTab>\n    </HeaderWrapper>\n  );\n}\n\nexport default Header;\n",["320","321","322","323","324","325"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts",[],["326","327","328","329","330","331"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx",[],["332","333","334","335","336","337"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts",[],["338","339","340","341","342","343"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\mySaleArticleSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\MyPage.tsx",["344"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../../components/AppLayout';\nimport { postLogoutRequest } from '../signIn/userSlice';\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1.3em 0;\n`;\n\nconst MyInfo = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  font-size: 4.5vw;\n  margin-bottom: 1em;\n  @media screen and (min-width: 455px) {\n    font-size: 20.484px;   \n  }\n`;\n\nconst ProfileImg = styled.img`\n  width: 4em;\n  height: 4em;\n  margin-right: 0.4em;\n  border: 1.5px solid #000;\n  border-radius: 50%;\n`;\n\nconst ProfileText = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MyName = styled.h2`\n  display: flex;\n  align-items: center;\n  font-size: 5.5vw;\n  font-weight: bold;\n  margin-bottom: 0.5em;\n  @media screen and (min-width: 455px) {\n    font-size: 25.036px;\n  }\n`;\n\nconst SpanImg = styled.img`\n width: 1em;\n height: 1em;\n transform: rotate(180deg);\n`;\n\nconst MyDicription = styled.p`\n  font-size: 3vw;\n  @media screen and (min-width: 455px) {\n    font-size: 13.656px;\n  }\n`;\n\nconst ProfileBtn = styled(Link)`\n  display: block;\n  width: 23em;\n  padding: 1em 0;\n  font-size: 3.5vw;\n  text-align: center;\n  background: #fff;\n  border: 1px solid rgba(158, 158, 158, 0.7);\n  margin-bottom: 1em;\n  text-decoration: none;\n  color: #000;\n  @media screen and (min-width: 455px) {\n    font-size: 15.932px;\n  }\n`;\n\nconst MyMenu = styled.ul`\n  display: flex;\n  width: 23em;\n  font-size: 3.5vw;\n  border: 1px solid rgba(158, 158, 158, 0.7);\n  border-radius: 5px;\n  margin-bottom: 3em;\n  @media screen and (min-width: 455px) {\n    font-size: 15.932px;\n  }\n`;\n\nconst MenuImg = styled.img`\n  width: 2.5em;\n  height: 2.5em;\n`;\n\nconst MyMenuItem = styled.li`\n  width: 33.3333%;\n  padding: 1.2em 0;\n  &:not(:last-child):not(:first-child) {\n    border-left: 1px solid rgba(158, 158, 158, 0.7);\n    border-right: 1px solid rgba(158, 158, 158, 0.7);\n  }\n  &:first-child ${MenuImg} {\n    width: 2.2em;\n    height: 2.2em;\n  }\n`;\n\nconst MyMenuLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n`;\n\nconst MenuImgBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 2.5em;\n  height: 2.5em;\n  margin-bottom: 0.6em;\n`;\n\nconst MenuText = styled.p`\n  color: #3162C7;\n  font-weight: bold;\n`;\n\nconst UtilMenuList = styled.ul`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n`;\n\nconst UtilMenuItem = styled.li`\n  display: block;\n  &:not(:last-child) {\n    margin-bottom: 1em;\n  }\n`;\n\nconst UtilLink = styled(Link)`\n  display: block;\n  text-align: center;\n  padding: 1.2em 0;\n  color: #fff;\n  background: #6F96E9;\n  border-radius: 5px;\n  text-decoration: none;\n  font-size: 4vw;\n  font-weight: bold;\n  @media screen and (min-width: 455px) {\n    font-size: 18.2px;\n  }\n`;\n\nconst LogoutButton = styled.button`\n  position: absolute;\n  right: 0.5em;\n  top: 0.5em;\n`;\n\nfunction MyPage():JSX.Element {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { user } = useSelector((state: any) => state.userSlice);\n  const { nickname, profileImg } = user;\n\n  const onClickLogout = () => {\n    dispatch(postLogoutRequest({}));\n  };\n\n  return (\n    <AppLayout activeId={3}>\n      <Wrapper>\n        <LogoutButton type=\"button\" onClick={onClickLogout}>로그아웃</LogoutButton>\n        <Layout>\n          <MyInfo>\n            <ProfileImg src={profileImg} />\n            <ProfileText>\n              {\n                nickname !== ''\n                  ? <MyName>{nickname}</MyName>\n                  : (\n                    <>\n                      <MyName style={{ cursor: 'pointer' }} onClick={() => history.push('/')}>로그인/회원가입하기<SpanImg src=\"/images/icons/back.png\" /></MyName>\n                      <MyDicription>로그인 후 더 많은 혜택을 받으세요.</MyDicription>\n                    </>\n                  )\n              }\n            </ProfileText>\n          </MyInfo>\n          <ProfileBtn to=\"/mypage/modify\">프로필 수정</ProfileBtn>\n          <MyMenu>\n            <MyMenuItem>\n              <MyMenuLink to=\"/mypage/sales\">\n                <MenuImgBox>\n                  <MenuImg src=\"/images/icons/sell_active.png\" />\n                </MenuImgBox>\n                <MenuText>판매내역</MenuText>\n              </MyMenuLink>\n            </MyMenuItem>\n            <MyMenuItem>\n              <MyMenuLink to=\"/mypage/purchase\">\n                <MenuImgBox>\n                  <MenuImg src=\"/images/icons/pur_active.png\" />\n                </MenuImgBox>\n                <MenuText>구매내역</MenuText>\n              </MyMenuLink>\n            </MyMenuItem>\n            <MyMenuItem>\n              <MyMenuLink to=\"/mypage/wishs\">\n                <MenuImgBox>\n                  <MenuImg src=\"/images/icons/heart_blue.png\" />\n                </MenuImgBox>\n                <MenuText>찜목록</MenuText>\n              </MyMenuLink>\n            </MyMenuItem>\n          </MyMenu>\n          <UtilMenuList>\n            <UtilMenuItem><UtilLink to=\"/question\">문의하기</UtilLink></UtilMenuItem>\n            <UtilMenuItem><UtilLink to=\"/notice\">공지사항</UtilLink></UtilMenuItem>\n            <UtilMenuItem><UtilLink to=\"/review\">한줄평</UtilLink></UtilMenuItem>\n            <UtilMenuItem><UtilLink to=\"/mypage/markets\">나의마켓</UtilLink></UtilMenuItem>\n          </UtilMenuList>\n        </Layout>\n      </Wrapper>\n    </AppLayout>\n  );\n}\n\nexport default MyPage;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\Notice.tsx",["345"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\market\\Market.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\wishListSlice.ts",["346"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts",["347"],"const numberArrayUtill = (num: number) => {\r\n  const result = [];\r\n\r\n  for (let i = 1; i <= num; i++) {\r\n    result.push(i);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport default numberArrayUtill;\r\n",["348","349","350","351","352","353"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\AddPostButton.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\mockdata.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts",[],["354","355","356","357","358","359"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\myPurchaseArticleSlice.ts",["360"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\Login.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myPurchaseArticle\\MyPurchaseArticle.tsx",["361"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\question.tsx",["362"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { questionInterface } from '../../../interfaces/Question.inteface';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getQuestionRequest } from './questionSlice';\r\n\r\nconst Layout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 20.484px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  margin-bottom: 1.5em;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n    font-size: 20.484px;\r\n  }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst QuestionList = styled.ul`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst QuestionItem = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 1px solid #e0e0e0;\r\n`;\r\n\r\nconst QuestionTitleBox = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5em 1.5em;\r\n`;\r\n\r\nconst QuestionText = styled.div`\r\n  & h2 {\r\n    font-size: 3.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p {\r\n    font-size: 3vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 15.932px;\r\n    }\r\n    & p {\r\n      font-size: 13.656px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PaginationBox = styled.div`\r\n  display: flex;\r\n  padding: 1.5em 0;\r\n  & img {\r\n    cursor: pointer;\r\n    width: 1em;\r\n    height: 1em;\r\n  }\r\n`;\r\n\r\nconst PrevPage = styled.img``;\r\n\r\nconst PageNumbers = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst PageNumber = styled.div`\r\n`;\r\n\r\nconst PageLink = styled(Link)`\r\n  padding: 0 0.5em;\r\n`;\r\n\r\nconst NextPage = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Question():JSX.Element {\r\n  const [page, setPage] = useState<number>(0);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { questionList, totalPage } = useSelector((state: any) => state.myPageSlice);\r\n\r\n  useEffect(() => {\r\n    dispatch(getQuestionRequest(page));\r\n  }, [page, dispatch]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <BackLink to=\"/mypage\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>문의사항</h1>\r\n      </Header>\r\n      {\r\n        !totalPage\r\n          ? (\r\n            <>\r\n              <EmptyArticle>\r\n                <h2>등록된 문의사항이 없습니다.</h2>\r\n                <p>문의 사항을 작성해보세요.</p>\r\n                <button type=\"button\" onClick={() => history.push('/question/save')}>문의사항 작성하기</button>\r\n              </EmptyArticle>\r\n            </>\r\n          )\r\n          : (\r\n            <QuestionList>\r\n              {\r\n                questionList.map((question: questionInterface) => (\r\n                  <QuestionItem key={question.questionId}>\r\n                    <QuestionTitleBox>\r\n                      <QuestionText>\r\n                        <h2>{question.title}</h2>\r\n                        <p>{question.writeDate}</p>\r\n                      </QuestionText>\r\n                    </QuestionTitleBox>\r\n                  </QuestionItem>\r\n                ))\r\n              }\r\n            </QuestionList>\r\n          )\r\n      }\r\n      <PaginationBox>\r\n        <PrevPage src=\"/images/icons/back.png\" />\r\n        <PageNumbers>\r\n          {\r\n            !totalPage\r\n              ? (\r\n                <PageNumber>\r\n                  <PageLink to=\"/question\">1</PageLink>\r\n                </PageNumber>\r\n              )\r\n              : (\r\n                <>\r\n                  {\r\n                    numberArrayUtill(totalPage).map((i) => (\r\n                      <PageNumber>\r\n                        <PageLink onClick={() => setPage(i - 1)} to={`/question?page=${i - 1}`}>{i}</PageLink>\r\n                      </PageNumber>\r\n                    ))\r\n                  }\r\n                </>\r\n              )\r\n          }\r\n        </PageNumbers>\r\n        <NextPage src=\"/images/icons/back.png\" />\r\n      </PaginationBox>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishsApi.ts",["363","364","365","366"],"import axios from 'axios';\r\n\r\nexport const addWishs = (articleId: string): Promise<boolean> => (\r\n  axios({\r\n    method: 'post',\r\n    url: '/api/wish/save',\r\n    params: {\r\n      articleId,\r\n    },\r\n  }).then((res) => true).catch((error) => false)\r\n);\r\n\r\nexport const removeWishs = (articleId: string): Promise<boolean> => (\r\n  axios({\r\n    method: 'post',\r\n    url: '/api/wish/delete',\r\n    params: {\r\n      articleId,\r\n    },\r\n  }).then((res) => true).catch((error) => false)\r\n);\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\ImagePreView.tsx",["367","368"],"import React, { useCallback, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\ninterface ImageURLInterface {\n  id: string;\n  url: string;\n  image: Blob;\n}\n\ninterface ImagePreViewInterface {\n  onChangeImage: (e: any) => void,\n  images: ImageURLInterface[],\n  onDelete: (imageId: string) => void,\n}\n\nconst ImageInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 130px;\n  border: 1px solid #e8e8e8;\n  & button {\n    margin-left: 10px;\n    background-color: #f2f0f0;\n    border: 0;\n  }\n  & img {\n    width: 40px;\n    height: 40px;\n    margin: 10px;\n  }\n`;\nconst ImageInput = styled.input`\n  display: none;\n`;\nconst ImagePreviewWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  & img {\n    width: 60px;\n    height: 60px;\n  }\n  & button {\n    width: 60px;\n    background-color: white;\n    border: 0;\n  }\n`;\n\nfunction ImagePreView({ onChangeImage, images, onDelete }: ImagePreViewInterface):JSX.Element {\n  const ImageRef = useRef<HTMLInputElement>(null);\n  const onClickImageUpload = useCallback(() => {\n    ImageRef.current?.click();\n  }, []);\n\n  return (\n    <ImageInputWrapper>\n      <ImageInput type=\"file\" accept=\"image/jpg,image/png,image/jpeg\" name=\"file\" id=\"image\" onChange={onChangeImage} ref={ImageRef} />\n      <button type=\"button\" onClick={onClickImageUpload}>\n        <img src=\"/images/icons/camera.png\" alt=\"camera\" />\n      </button>\n      {images.map((v) => (\n        <ImagePreviewWrapper key={v.id}>\n          <button type=\"button\" onClick={() => onDelete(v.id)}>X</button>\n          <img src={v.url} alt=\"img\" />\n        </ImagePreviewWrapper>\n      ))}\n    </ImageInputWrapper>\n  );\n}\n\nexport default ImagePreView;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx",["369","370"],"import React from 'react';\nimport { List, AutoSizer } from 'react-virtualized';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport CategoryFormatUtil from '../../utils/categoryFormatUtil';\nimport { loadScrollBookPostRequest } from './postSlice';\n\ninterface IndexInterface {\n  index: number;\n  style?: any;\n}\ninterface OnScrollParams {\n  clientHeight: number;\n  clientWidth: number;\n  scrollHeight: number;\n  scrollLeft: number;\n  scrollTop: number;\n  scrollWidth: number;\n}\nconst ListWrapper = styled.div`\n  display: flex;\n  max-width: 100%;\n  flex-wrap: wrap;\n  margin-top: 150px;\n  overflow: hidden;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 200px;\n  flex-basis: 50%;\n  padding:10px;\n  border-top: 1px solid #e8e8e8;\n  & img {\n    width: 150px;\n    height: 150px;\n    border-radius: 10px;\n  }\n`;\nconst ContentExplanation = styled.div`\n  padding: 0px 20px;\n  & h3 {\n    overflow:hidden;\n    padding: 10px 0px;\n  }\n`;\nconst Categoty = styled.div`\n  font-size: 9px;\n`;\nfunction InfiniteScrollList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, hasMorePost, isLoadScrollBookPostLoading } = useSelector((state: any) => state.postSlice);\n  const scrollListener = (params:OnScrollParams) => {\n    if (params.scrollTop + params.clientHeight >= params.scrollHeight - 300) {\n      if (hasMorePost && !isLoadScrollBookPostLoading) {\n        const LastId = bookPost[bookPost.length - 1].articleId;\n        dispatch(loadScrollBookPostRequest({ lastId: LastId }));\n      }\n    }\n  };\n\n  const rowRanderer = ({ index, style }: IndexInterface) => {\n    const post = bookPost[index];\n    return (\n      <div style={style}>\n        <NavLink to={`post/${post.articleId}`}>\n          <Content key={post.articleId}>\n            <img src={post.image} alt=\"\" />\n            <ContentExplanation>\n              <Categoty>{CategoryFormatUtil(post.category)}</Categoty>\n              <h3>{post.title}</h3>\n              <h3>{post.tprice}원</h3>\n            </ContentExplanation>\n          </Content>\n        </NavLink>\n      </div>\n    );\n  };\n\n  return (\n    <ListWrapper>\n      <AutoSizer disableHeight>\n        {({ width }) => (\n          <List\n            rowCount={bookPost.length} // 항목의 개수\n            height={700} // 실제 렌더링 되는 높이범위\n            rowHeight={200} // 항목의높이\n            width={width} // 항목의 너비\n            rowRenderer={rowRanderer} // 항목렌더링할때쓰는 함수\n            onScroll={scrollListener} // scroll 함수\n            overscanRowCount={10} // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\n          />\n        )}\n      </AutoSizer>\n    </ListWrapper>\n  );\n}\n\nexport default InfiniteScrollList;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\wishList\\WishList.tsx",["371","372","373"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getWishListRequest } from './wishListSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MyWishsItems = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MyWishsItem = styled.div`\r\n  \r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImgBox = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 9em;\r\n  height: 10em;\r\n  margin-right: 1.5em;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: auto;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 2.5vw;\r\n    font-weight: bold;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 2.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 11.38px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 11.38px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 18.208px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction WishList():JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { wishList, totalPage, isGetWishListsError } = useSelector((state: any) => state.myPageSlice.myWishListSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getWishListRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  useEffect(() => {\r\n    if (isGetWishListsError === 'NON_LOGIN') {\r\n      alert('로그인이 필요한 서비스입니다. 로그인 후 더 많은 혜택을 받으세요.');\r\n      history.push('/');\r\n    } else if (isGetWishListsError === 'SERVER_ERROR') {\r\n      alert('서버 통신중 오류 발생');\r\n    }\r\n  }, [isGetWishListsError, history]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>찜목록</h1>\r\n        </Header>\r\n        {\r\n          !totalPage\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>찜한 책이 없습니다.</h2>\r\n                  <p>관심있는 상품을 찜해보아요.</p>\r\n                  <button type=\"button\" onClick={() => history.push('/home')}>판매책 보러가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MyWishsItems>\r\n                  {\r\n                    wishList.map((item: myArticleInterface) => (\r\n                      <MyWishsItem key={item.articleId}>\r\n                        <ItemLink to={`/post/${item.articleId}`}>\r\n                          <ItemImgBox>\r\n                            <ItemImage src={item.thumbnail} />\r\n                          </ItemImgBox>\r\n                          <ItemInfo>\r\n                            <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                            <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                            <h2 className=\"my_title\">{item.title}</h2>\r\n                            <p className=\"my_price\">{item.tprice} 원</p>\r\n                          </ItemInfo>\r\n                        </ItemLink>\r\n                      </MyWishsItem>\r\n                    ))\r\n                  }\r\n                </MyWishsItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/wishs?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/wishs?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/wishs?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            )\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WishList;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx",["374"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Spinner from 'react-spinner-material';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport AppLayout from '../../components/AppLayout';\nimport Header from './Header';\nimport { loadBookPostRequest } from './postSlice';\nimport InfiniteScrollList from './InfiniteScrollList';\nimport AddPostButton from './AddPostButton';\n\nconst PostListWrapper = styled.div`\n`;\nfunction PostList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, filtering } = useSelector((state: any) => state.postSlice);\n  useEffect(() => {\n    dispatch(loadBookPostRequest({ filtering: { division: filtering.division, category: filtering.category } }));\n  }, [dispatch, filtering.category, filtering.division]);\n  console.log(bookPost);\n  return (\n    <AppLayout activeId={0}>\n      <PostListWrapper>\n        <Header />\n        <AddPostButton />\n        { bookPost.length !== 0 ? <InfiniteScrollList /> : <Spinner color=\"#004c9d\" size={120} visible stroke={10} radius={50} />}\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} />\n      </PostListWrapper>\n    </AppLayout>\n  );\n}\n\nexport default PostList;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\chatting\\ChattingList.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\mySlaeArticle\\MySaleArticle.tsx",["375","376"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { myArticleInterface } from '../../../interfaces/MyArticle.interface';\r\nimport CategoryFormatUtil from '../../../utils/categoryFormatUtil';\r\nimport numberArrayUtill from '../../../utils/numberArrayUtill';\r\nimport { getMySaleArticleRequest } from './mySaleArticleSlice';\r\n\r\nconst Layout = styled.form`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n    & h1 {\r\n      font-size: 20.484px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 1em;\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  width: 2em;\r\n  height: 2em;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst MySaleItems = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 455px) {\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst MySaleItem = styled.div`\r\n  \r\n`;\r\n\r\nconst ItemLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1em;\r\n`;\r\n\r\nconst ItemImgBox = styled.div`\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 9em;\r\n  height: 10em;\r\n  margin-right: 1.5em;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n  }\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 10em;\r\n  height: auto;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  & p.my_state {\r\n    display: inline-block;\r\n    font-size: 2.5vw;\r\n    font-weight: bold;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & p.my_category {\r\n    font-size: 2.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & h2.my_title {\r\n    font-size: 4vw;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  & p.my_price {\r\n    font-size: 3.5vw;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & p.my_state {\r\n      font-size: 11.38px;\r\n    }\r\n    & p.my_category {\r\n      font-size: 11.38px;\r\n    }\r\n    & h2.my_title {\r\n      font-size: 18.208px;\r\n    }\r\n    & p.my_price {\r\n      font-size: 15.932px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagenation = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  padding: 1.5em 0;\r\n  @media screen and (min-width: 455px) {\r\n    font-size: 18.208px;\r\n    width: 455px;\r\n  }\r\n`;\r\n\r\nconst PrevLink = styled(Link)`\r\n`;\r\n\r\nconst Prev = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n`;\r\n\r\nconst PageItems = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst PageItem = styled.li`\r\n  margin: 0 1em;\r\n`;\r\n\r\nconst NextLink = styled(Link)`\r\n`;\r\n\r\nconst Next = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  transform: rotate(180deg);\r\n`;\r\n\r\nconst EmptyArticle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & h2 {\r\n    font-size: 4.5vw;\r\n    font-weight: bold;\r\n    margin-bottom: 0.3em;\r\n  }\r\n  & p {\r\n    font-size: 4vw;\r\n    margin-bottom: 1em;\r\n  }\r\n  & button{\r\n    font-size: 4vw;\r\n    padding: 0.5em 1em;\r\n    background: #265290;\r\n    border: none;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  @media screen and (min-width: 455px) {\r\n    & h2 {\r\n      font-size: 20.484px;\r\n    }\r\n    & p {\r\n      font-size: 18.208px;\r\n    }\r\n    & button {\r\n      font-size: 18.208px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction MySaleArticle():JSX.Element | null {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState<number>(0);\r\n  const { mySaleArticle, totalPage, isGetMyPurchaseArticlesLoading } = useSelector((state: any) => state.myPageSlice);\r\n  const progressForm = (progress: 'COMPLETED' | 'HIDE' | 'TRADING' | 'POSTING'): { text: string, background: string } => {\r\n    const resultProgress = {\r\n      COMPLETED: { text: '거래완료', background: '#1e1e1e' },\r\n      HIDE: { text: '숨김', background: '#7e7e7e' },\r\n      TRADING: { text: '예약중', background: '#62ff7d' },\r\n      POSTING: { text: '거래중', background: '#265290' },\r\n    };\r\n\r\n    return resultProgress[progress];\r\n  };\r\n\r\n  const onClickPrevPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const prevPage = page - 1;\r\n\r\n    if (prevPage < 0) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(0);\r\n    }\r\n  };\r\n  const onClickNextPage = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n    const nextPage = page + 1;\r\n\r\n    if (nextPage > totalPage - 1) {\r\n      e.preventDefault();\r\n    } else {\r\n      setPage(totalPage - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getMySaleArticleRequest(page));\r\n  }, [dispatch, page]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <BackLink to=\"/mypage\">\r\n            <BackImg src=\"/images/icons/back.png\" />\r\n          </BackLink>\r\n          <h1>판매목록</h1>\r\n        </Header>\r\n        {\r\n          (!totalPage\r\n            ? (\r\n              <>\r\n                <EmptyArticle>\r\n                  <h2>등록한 판매글이 없습니다.</h2>\r\n                  <p>다 보신 책들을 나누어 보아요.</p>\r\n                  <button type=\"button\" onClick={() => history.push('/addPost/purchase')}>책 판매하러 가기</button>\r\n                </EmptyArticle>\r\n              </>\r\n            )\r\n            : (\r\n              <>\r\n                <MySaleItems>\r\n                  {\r\n                    mySaleArticle.map((item: myArticleInterface) => (\r\n                      <MySaleItem key={item.articleId}>\r\n                        <ItemLink to={`/post/${item.articleId}`}>\r\n                          <ItemImgBox>\r\n                            <ItemImage src={item.thumbnail} />\r\n                          </ItemImgBox>\r\n                          <ItemInfo>\r\n                            <p style={{ background: progressForm(item.progress).background }} className=\"my_state\">{progressForm(item.progress).text}</p>\r\n                            <p className=\"my_category\">{CategoryFormatUtil(item.category)}</p>\r\n                            <h2 className=\"my_title\">{item.title}</h2>\r\n                            <p className=\"my_price\">{item.tprice} 원</p>\r\n                          </ItemInfo>\r\n                        </ItemLink>\r\n                      </MySaleItem>\r\n                    ))\r\n                  }\r\n                </MySaleItems>\r\n                <Pagenation>\r\n                  <PrevLink onClick={onClickPrevPage} to={`/mypage/sales?page=${page - 1}`}>\r\n                    <Prev src=\"/images/icons/back.png\" />\r\n                  </PrevLink>\r\n                  <PageItems>\r\n                    {\r\n                      numberArrayUtill(totalPage).map((i) => (\r\n                        <PageItem><Link onClick={() => setPage(i - 1)} to={`/mypage/sales?page=${i - 1}`}>{i}</Link></PageItem>\r\n                      ))\r\n                    }\r\n                  </PageItems>\r\n                  <NextLink onClick={onClickNextPage} to={`/mypage/sales?page=${page + 1}`}>\r\n                    <Next src=\"/images/icons/back.png\" />\r\n                  </NextLink>\r\n                </Pagenation>\r\n              </>\r\n            ))\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MySaleArticle;\r\n",["377","378","379","380","381","382"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts",["383"],"import axios, { AxiosResponse } from 'axios';\nimport { Console } from 'console';\nimport { AddBookPostInterface } from '../interfaces/PostList.interface';\n\nexport function getAladinBook(title: string):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/ttb/api/ItemSearch.aspx?ttbkey=ttbehaakdl1816001&QueryType=Title&Query=${title}&output=js`);\n}\n// 일반사용자 판매/구매글 추가\nexport function addBookPostAPI(data: AddBookPostInterface):Promise<AxiosResponse> {\n  console.log(data);\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  };\n  return axios.post('http://local.corsmarket.ml/api/article', data, config);\n}\nexport function deleteBookPostAPI(id: number):Promise<AxiosResponse> {\n  return axios.delete(`http://local.corsmarket.ml/api/article/${id}`);\n}\n// 일반사용자 판매/구매글 리스트 불러오기\nexport function getBookPostAPI(filtering:{ division:string, category:string }, id?: number):Promise<AxiosResponse> {\n  console.log(filtering);\n  return axios.get(`http://local.corsmarket.ml/api/articles/${filtering.division}`, {\n    params: {\n      category: filtering.category, lastId: id,\n    },\n  });\n}\n// 일반사용자 판매/구매글 상세페이지 불러오기\nexport function getBookPostDetailViewAPI(postId: number):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/api/article/${postId}`);\n}\n// 마켓리스트 불러오기\nexport function getMarketListAPI():Promise<AxiosResponse> {\n  return axios.get('http://local.corsmarket.ml/api/market');\n}\nexport function deletePostAPI(id: number):Promise<AxiosResponse> {\n  return axios.get('http://local.corsmarket.ml/api/market/delete',\n    { params: { articleId: id } });\n}\n// 마켓글 불러오기\nexport function getMarketBookAPI(marketId: number):Promise<AxiosResponse> {\n  return axios.get(`http://local.corsmarket.ml/api/market/${marketId}`);\n}\n// 해당 마켓에 판매글 추가\nexport function addMarketBookPostAPI(marketId: number):Promise<AxiosResponse> {\n  return axios.post(`http://local.corsmarket.ml/api/market/${marketId}`);\n}\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx",[],["384","385","386","387","388","389"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\review\\Review.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\interfaces\\mockdata.ts",["390","391"],"import faker from 'faker';\nimport { marketListInterface } from './MarketInterface';\nimport { AddBookPostInterface, PostListInterface, articleDetailInterface } from './PostList.interface';\n\nexport const dummyAddBookPost = (data: AddBookPostInterface) => ({\n  articleId: faker.random.number(),\n  memberId: data.memberId, // 내가 넣어줄 값\n  rprice: data.rprice, // 내가 넣어줄 값\n  writeDate: new Date(),\n  progress: data.progress, // 내가 넣어줄 값\n  title: data.title, // 내가 넣어줄 값\n  thumnail: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNEqDnzERi5Aa-o2Qk7r-GmibgwZWM0wV4utkTJZBRNULFk8KwNzUKtPXvgPE&usqp=CAc', // 내가 넣어줄 값\n  images: [], // 내가 넣어줄 값\n  content: data.content, // 내가 넣어줄 값\n  category: data.category, // 내가 넣어줄 값\n  tprice: data.tprice, // 내가 넣어줄 값\n  division: data.division, // 내가 넣어줄 값\n});\n\nexport const dummyPost: AddBookPostInterface = {\n  memberId: 3, // 작성자\n  rprice: 13000, // 판매가격\n  tprice: 16000, // 원래가격\n  content: '두번만 읽은 책입니다', // 내용\n  progress: 'POSTING', // 게시글 상태\n  title: '진격의거인', // 책제목\n  thumnail: 'http://image.yes24.com/momo/TopCate3025/MidCate007/302460746.jpg',\n  images: ['https://blog.kakaocdn.net/dn/28NKv/btqFjFQr9pe/n0TKtuuV3zmBSTF1olKqIK/img.jpg', 'https://www.hanbit.co.kr/data/editor/20200706083421_vfsgqsvu.jpg', 'https://www.hanbit.co.kr/data/editor/20200705234134_skcbzgms.jpg'],\n  category: '국내도서>자기계발', // 카테고리 키\n  division: 'SALE', // 구매 판매 구분\n};\n\nexport const dummyBookPost: PostListInterface = {\n  data: [],\n};\nexport const dummyDetailBookPost: articleDetailInterface = {\n  articleId: 1,\n  memberId: 2,\n  countDAO: {\n    chatCount: 10,\n    countId: 2,\n    views: 3,\n    wishCount: 5,\n  },\n  title: '이것이 MYSQL 이다',\n  content: '한번밖에 안읽은 책입니다. 상태 깨끗하고요.',\n  writeDate: new Date('2020-10-11'),\n  rprice: 13000,\n  tprice: 28000,\n  progress: 'POSTING',\n  category: {\n    cid: 2435, oneDepth: '국내도서', twoDepth: '자기계발', threeDepth: 'IT서적', fourDepth: '', fiveDepth: '',\n  },\n  division: 'SALE',\n  thumbnail: 'http://image.yes24.com/momo/TopCate3025/MidCate007/302460746.jpg',\n  image: ['https://blog.kakaocdn.net/dn/28NKv/btqFjFQr9pe/n0TKtuuV3zmBSTF1olKqIK/img.jpg', 'https://www.hanbit.co.kr/data/editor/20200706083421_vfsgqsvu.jpg', 'https://www.hanbit.co.kr/data/editor/20200705234134_skcbzgms.jpg'],\n};\nexport const generateDummyPost = (Postnumber: number) => Array(Postnumber).fill(0).map(() => (\n  {\n    articleId: faker.random.number(),\n    countDAO: {\n      chatCount: 2,\n      countId: 2,\n      views: 2,\n      wishCount: 3,\n    },\n    title: faker.commerce.productName(),\n    writeDate: new Date(),\n    tprice: 20000,\n    progress: 'POSTING',\n    category: {\n      cid: faker.random.number(), oneDepth: '국내도서', twoDepth: '소설/시/희곡', threeDepth: '', fourDepth: '', fiveDepth: '',\n    },\n    image: faker.random.image(),\n    nickname: faker.name.findName(),\n    market: null,\n  }\n));\n\nexport const dummyMarket:marketListInterface = {\n  data: [{\n    marketId: 1,\n    marketName: '찬미마켓',\n    marketIntro: '저렴하게 파는 친절한 마켓입니다',\n    marketImage: 'https://post-phinf.pstatic.net/MjAxNzA4MDVfMTIx/MDAxNTAxOTE2MzM0MDgz.nttKTl9M6abrzvwG-GPeedh606JPCAI-FeIOoooYVfQg.mNUGyps1wVC027zi3XVMVlzc502OXoipDD2cQ6Mj2jsg.JPEG/mug_obj_201708051558546888.jpg?type=w1080',\n  },\n  {\n    marketId: 2,\n    marketName: '오이마켓',\n    marketIntro: '저렴하게 파는 친절한 마켓입니다',\n    marketImage: 'https://post-phinf.pstatic.net/MjAxNzA4MDVfMTIx/MDAxNTAxOTE2MzM0MDgz.nttKTl9M6abrzvwG-GPeedh606JPCAI-FeIOoooYVfQg.mNUGyps1wVC027zi3XVMVlzc502OXoipDD2cQ6Mj2jsg.JPEG/mug_obj_201708051558546888.jpg?type=w1080',\n  }],\n};\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signIn\\LoginForm.tsx",["392","393","394"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { postLoginRequest, postLoginRequestError, postLoginRequestSuccess } from './userSlice';\nimport { LOGIN_ERROR, postLoginAsync, SERVER_ERROR } from '../../api/userApi';\n\ninterface inputFormInterface {\n  email: string,\n  passwd: string\n}\n\nconst Form = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.8em;\n`;\n\nconst Input = styled.input`\n  width: 18em;\n  font-size: 4.5vw;\n  padding: 0.8em 1.3em;\n  outline: none;\n  border: 2px solid #3960a688;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px #3960a655;\n  &:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n    padding: 16px 26px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst Button = styled.button`\n  width: 18em;\n  text-align: center;\n  padding: 1em 0;\n  background: #3960a6;\n  font-weight: bold;\n  color: #FFF;\n  font-size: 4.5vw;\n  border: none;\n  border-radius: 200px;\n  outline: none;\n  margin-bottom: 1.2em;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n    padding: 20px 0;\n    margin-bottom: 24px;\n  }\n`;\n\nfunction LoginForm(): JSX.Element {\n  const [inputs, setInputs] = useState<inputFormInterface>({\n    email: '',\n    passwd: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const history = useHistory();\n\n  const onLogin = async (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      const result = await postLoginAsync({ email: inputs.email, passwd: inputs.passwd });\n      dispatch(postLoginRequestSuccess(result));\n      history.push('/home');\n    } catch (error) {\n      dispatch(postLoginRequestError(error.message));\n      if (error.message === LOGIN_ERROR) {\n        alert('로그인 정보를 확인해주세요.');\n      } else if (error.message === SERVER_ERROR) {\n        alert('서버 통신중 에러 발생');\n      }\n    }\n  };\n\n  return (\n    <Form method=\"GET\" onSubmit={onLogin}>\n      <InputBox>\n        <Input type=\"email\" name=\"email\" placeholder=\"아이디\" value={inputs.email} onChange={handleChange} required />\n        <Input type=\"password\" name=\"passwd\" placeholder=\"비밀번호\" value={inputs.passwd} onChange={handleChange} required />\n      </InputBox>\n      <Button type=\"submit\">로그인</Button>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\NotFound.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\notice\\noticeSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts",["395","396","397","398"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts",["399"],"interface categoryInterface {\n  cid: number, oneDepth: string, twoDepth: string, threeDepth: string, fourDepth: string, fiveDepth: string,\n}\nconst CategoryFormatUtil = (category: categoryInterface) => {\n  const cate = [category.oneDepth, category.twoDepth, category.threeDepth, category.fourDepth, category.fiveDepth];\n  const newCate = [];\n  for (let i = 0; i < cate.length; i++) {\n    if (cate[i] === '') {\n      return newCate.join('>');\n    }\n    newCate.push(cate[i]);\n  }\n  console.log(newCate);\n  return newCate.join('>');\n};\n\nexport default CategoryFormatUtil;\n",["400","401","402","403","404","405"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\wishListApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts",[],["406","407","408","409","410","411"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\SearchBook.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\chatting\\Chatting.tsx",["412","413","414","415","416","417"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\question\\questionSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx",["418","419"],"import React, { useEffect, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport CategoryFormatUtil from '../../utils/categoryFormatUtil';\nimport countUtil from '../../utils/countDaoUtil';\nimport ProgressUtil from '../../utils/progressUtil';\nimport { deleteBookPostRequest } from '../postList/postSlice';\nimport { postAddWishListRequest, postRemoveWishListRequest } from '../../pages/signIn/userSlice';\nimport ImageSlide from './ImageSlide';\n\ninterface DetailPostInterface {\n  id: number;\n}\nconst ContentWrapper = styled.div`\n`;\nconst ContentTop = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border-bottom: 1px solid #e8e8e8;\n`;\nconst ContentMain = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  margin: 0 auto;\n`;\nconst ProfileWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n`;\nconst ProfileImg = styled.img`\n  width: 50px;\n  height: 50px;\n  border: 1px solid #e8e8e8;\n  border-radius: 50%;\n  padding: 2px;\n`;\nconst NickName = styled.div`\n  margin-left: 10px;\n`;\nconst State = styled.div`\n  color: #3960a6;\n  border: 1px solid #3960a6;\n  padding: 5px 10px;\n  border-radius: 20px;\n`;\nconst ContentTitle = styled.div`\n  padding: 10px 0;\n  font-size: 20px;\n  font-weight: 600;\n`;\nconst Category = styled.div`\n  font-size: 13px;\n  color: #919191;\n`;\nconst Thumbnail = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #e8e8e8;\n  color: #3960a6;\n  font-weight: 700;\n  border-radius: 5px;\n  & img {\n    width: 80px;\n    margin-right: 20px;\n  }\n`;\nconst Content = styled.div`\n  padding: 20px 0;\n`;\nconst AdditionalContent = styled.div`\n  padding: 20px 0;\n  font-size: 13px;\n`;\nconst OtherBooksButton = styled.button`\n  color: white;\n  background: #3960a6;\n  width: 100%;\n  border: 0;\n  padding: 10px;\n  font-size: 15px;\n  border-radius: 5px;\n  margin: 0 auto;\n`;\nconst ContentBottom = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  font-size: 20px;\n  border-top: 1px solid #e8e8e8;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: white;\n`;\nconst ChattingButton = styled.button`\n  color: white;\n  background: #3960a6;\n  max-width: 200px;\n  border: 0;\n  padding: 10px;\n  font-size: 15px;\n  border-radius: 5px;\n`;\nconst HeartButton = styled.button`\n  background: transparent;\n  border: 0;\n  & img {\n    width: 35px;\n  }\n`;\nconst Price = styled.div`\n  font-weight: 800;\n`;\nconst Delete = styled.div`\n  font-size: 15px;\n  padding: 20px 0;\n`;\nconst Report = styled.div`\n  font-size: 15px;\n  padding: 20px 0;\n`;\nconst UploadeTime = styled.div`\n  font-size: 13px;\n  color: #919191;\n  padding: 10px 0;\n`;\n\nfunction DetailPostContent({ id } :DetailPostInterface):JSX.Element {\n  const dispatch = useDispatch();\n  const [heart, setHeart] = useState(false);\n  const { wishList } = useSelector((state: any) => state.userSlice.user);\n  const { detailBookPost } = useSelector((state: any) => state.detailViewSlice);\n  const history = useHistory();\n  const HandleHeartButton = () => {\n    if (heart) {\n      dispatch(postRemoveWishListRequest(detailBookPost.articleId));\n    } else {\n      dispatch(postAddWishListRequest(detailBookPost.articleId));\n    }\n  };\n  const DeletePost = useCallback(() => {\n    dispatch(deleteBookPostRequest(id));\n    ToastsStore.success('삭제완료');\n    setTimeout(() => {\n      history.push('/home');\n    }, 700);\n  }, [dispatch, history, id]);\n  useEffect(() => {\n    setHeart(wishList.includes(detailBookPost.articleId));\n  }, [wishList, detailBookPost]);\n  return (\n    <>\n      <ImageSlide images={detailBookPost.image} />\n      <ContentWrapper>\n        <ContentTop>\n          <ProfileWrapper>\n            <ProfileImg src=\"/images/icons/init_profile.png\" alt=\"profile\" />\n            <NickName>닉네임</NickName>\n          </ProfileWrapper>\n          <State>{ProgressUtil(detailBookPost.progress)}</State>\n        </ContentTop>\n        <ContentMain>\n          <ContentTitle>{detailBookPost.title}</ContentTitle>\n          <Category>{CategoryFormatUtil(detailBookPost.category)}</Category>\n          <UploadeTime>9초전</UploadeTime>\n          <Thumbnail>\n            <img src={detailBookPost.thumbnail} alt=\"thumnail\" />\n            <div>원가: {detailBookPost.rprice} 원</div>\n          </Thumbnail>\n          <Content>\n            {detailBookPost.content}\n          </Content>\n          <AdditionalContent>{countUtil(detailBookPost.count)}</AdditionalContent>\n          <OtherBooksButton>판매자의 다른도서 보러가기</OtherBooksButton>\n          <Report>신고하기⚡️</Report>\n          {/* 여기서 사용자랑 이게시물 아이디랑 같으면 삭제하는걸로 로직짜야함 */}<Delete onClick={DeletePost}>삭제하기</Delete>\n        </ContentMain>\n        <ContentBottom>\n          <HeartButton onClick={HandleHeartButton}>\n            <img src={heart ? '/images/icons/heart_active.png' : '/images/icons/heart.png'} alt=\"heartButton\" />\n          </HeartButton>\n          <Price>{detailBookPost.tprice} 원</Price>\n          <NavLink to={`/chatting/${id}`}>\n            <ChattingButton>채팅하기</ChattingButton>\n          </NavLink>\n        </ContentBottom>\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n      </ContentWrapper>\n    </>\n  );\n}\n\nexport default DetailPostContent;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\signUp\\Join.tsx",["420","421","422","423","424","425","426","427","428"],"import React, { useRef, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DaumPostCode, { AddressData } from 'react-daum-postcode';\nimport { emailCertificationAsync, emailDuplicationAsync, joinRequestAsync, nicknameDuplicationAsync } from '../../api/joinApi';\n\nconst Positional = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  font-size: 4.5vw;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n  }\n`;\n\nconst Header = styled.header`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  border-bottom: 1px solid #e0e0e0;\n  padding: 0.8em 0;\n  & h1 {\n    font-size: 4.5vw;\n    font-weight: 400;\n  }\n  @media screen and (min-width: 460px) {\n    width: 460px;\n    & h1 {\n    font-size: 20px;\n  }\n  }\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 1.5em 0;\n  display: flex;\n  justify-content: center;\n  overflow: auto;\n`;\n\nconst BackLink = styled(Link)`\n  position: absolute;\n  left: 0.5em;\n`;\n\nconst BackLogo = styled.img`\n  width: 1.8em;\n  height: 1.8em;\n`;\n\nconst JoinForm = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  & > div:last-child {\n    margin-bottom: 1.5em;\n  }\n  @media screen and (min-width: 460px) {\n    width: 414px;\n  }\n  `;\n\nconst JoinInputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1em;\n  & label {\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  @media screen and (min-width: 460px) {\n    & label {\n      font-size: 16.1px;\n    }\n  }\n`;\n\nconst JoinInput = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 0.5em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 4vw;\n  background: none;\n  border: none;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst CheckLogo = styled.img`\n  width: 1.2em;\n  height: 1.2em;\n  flex-grow: 1;\n  flex-shrink: 0;\n`;\n\nconst CertificationRequest = styled.button`\n  position: absolute;\n  right: 0;\n  font-size: 3vw;\n  font-weight: bold;\n  padding: 1em 1.5em;\n  background: #265290;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 13.8px;\n  }\n`;\n\nconst CertificationBox = styled.div`\n  display: none;\n  flex-direction: column;\n  margin-top: 0.5em;\n`;\n\nconst CertificationInputBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CertificationInput = styled.input`\n  width: 10em;\n  font-size: 4vw;\n  padding: 0.5em 1em;\n  margin-right: 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\nconst CertificationButton = styled.button`\n  font-size: 4vw;\n  font-weight: bold;\n  padding: 0.5em 1em;\n  background: #265290;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst InputMessage = styled.p`\n  font-size: 2vw;\n  margin-top: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 9.2px;\n  }\n`;\n\nconst SearchModal = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  background: #5c5c5c55;\n`;\n\nconst CloseButton = styled.img`\n  position: absolute;\n  width: 1.5em;\n  height: 1.5em;\n  top: 0.4em;\n  right: 0.4em;\n  font-size: 6vw;\n  @media screen and (min-width: 460px) {\n    font-size: 27.6px;\n  }\n`;\n\nconst AddressFormBox = styled.div`\n  margin-bottom: 2em;\n  & label {\n    display: block;\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  & ${JoinInput}:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  & ${JoinInput} {\n    padding: 0.5em;\n  }\n\n  @media screen and (min-width: 460px) {\n    & label {\n      font-size: 16.1px;\n    }\n  }\n`;\n\nconst AddressSearchBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1em;\n`;\nconst AddressSearchInput = styled.input`\n  width: 10em;\n  padding: 0.6em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  margin-right: 0.5em;\n  font-size: 4vw;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\nconst AddressSearchButton = styled.button`\n  padding: 0.7em;\n  background: #265290;\n  color: #fff;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  font-size: 3.5vw;\n  @media screen and (min-width: 460px) {\n    font-size: 16.1px;\n  }\n`;\n\nconst AgreementBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90vw;\n  margin-bottom: 2.5em;\n  @media screen and (min-width: 460px) {\n    width: 414px;\n  }\n`;\nconst AllAgreeBox = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 4.5vw;\n  font-weight: bold;\n  margin-bottom: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n  }\n`;\nconst AgreeCheckBox = styled.img`\n  width: 1.5em;\n  height: 1.5em;\n  margin-right: 0.5em;\n`;\nconst AgreeText = styled.div`\n  & span {\n    color: #265290;\n  }\n`;\n\nconst SubAgreeBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-size: 4vw;\n  margin-bottom: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst AgreeDetail = styled.img`\n  width: 1em;\n  height: 1em;\n  position: absolute;\n  right: 0;\n  transform: rotate(-90deg);\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst JoinButton = styled.button`\n  width: 80vw;\n  font-size: 4.5vw;\n  padding: 0.8em 0;\n  text-align: center;\n  color: #fff;\n  background: #265290;\n  border: none;\n  outline: none;\n  margin-bottom: 1.5em;\n  @media screen and (min-width: 460px) {\n    width: 368px;\n    font-size: 20px;\n  }\n`;\n\nfunction Join():JSX.Element {\n  const initialInputs = {\n    email: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n      duplicationCheck: false,\n      code: '',\n      certificationCheck: false,\n    },\n    nickname: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwd: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwdCheck: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    address: {\n      zipcode: '',\n      baseAddress: '',\n      detailAddress: '',\n    },\n    agreement: {\n      all: false,\n      agree1: false,\n      agree2: false,\n      agree3: false,\n    },\n  };\n\n  const [showsModal, setShowsModal] = useState(false);\n  const [inputs, setInputs] = useState(initialInputs);\n  const emailCertificationBox = useRef<HTMLInputElement>(null);\n  const history = useHistory();\n\n  const {\n    email,\n    nickname,\n    passwd,\n    passwdCheck,\n    address,\n    agreement,\n  } = inputs;\n\n  const inputChange = (name: 'email' | 'nickname' | 'passwd' | 'passwdCheck', value: string, state: 'check' | 'fail' | 'none', message: string, color: 'red' | 'blue') => {\n    setInputs({\n      ...inputs,\n      [name]: {\n        ...inputs[name],\n        value,\n        state,\n        message,\n        color,\n      },\n    });\n  };\n\n  const onChangeText = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        if (/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '이메일 형식이 아닙니다.', 'red');\n        }\n        break;\n      case 'nickname':\n        if (value.length < 4) {\n          inputChange(name, value, 'fail', '닉네임을 4자 이상 입력해주세요.', 'red');\n        } else {\n          try {\n            await nicknameDuplicationAsync(value);\n            inputChange(name, value, 'check', '', 'blue');\n          } catch {\n            inputChange(name, value, 'fail', '이미 사용중인 닉네임입니다.', 'red');\n          }\n        }\n        break;\n      case 'passwd':\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.', 'red');\n        }\n        break;\n      case 'passwdCheck':\n        if (value === passwd.value) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '비밀번호가 일치하지 않습니다.', 'red');\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onClickEmailDuplication = async () => {\n    try {\n      const result = await emailDuplicationAsync(email.value);\n\n      if (result) {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            duplicationCheck: true,\n          },\n        });\n        if (emailCertificationBox.current != null) {\n          emailCertificationBox.current.style.display = 'flex';\n        }\n      } else {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '이미 사용중인 이메일입니다.',\n            color: 'red',\n            duplicationCheck: false,\n          },\n        });\n      }\n    } catch (error) {\n      alert('서버 통신중 오류가 발생하였습니다.');\n    }\n  };\n\n  const onChangeCode = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      email: {\n        ...email,\n        code: e.target.value,\n      },\n    });\n  };\n\n  const onClickEmailCertification = async () => {\n    try {\n      const result = await emailCertificationAsync(email.value, email.code);\n\n      if (result) {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '인증이 완료되었습니다.',\n            color: 'blue',\n            certificationCheck: true,\n          },\n        });\n        if (emailCertificationBox.current != null) {\n          emailCertificationBox.current.style.display = 'none';\n        }\n      } else {\n        setInputs({\n          ...inputs,\n          email: {\n            ...email,\n            message: '코드를 확인해주세요.',\n            color: 'red',\n            certificationCheck: false,\n          },\n        });\n      }\n    } catch {\n      alert('서버 통신중 오류가 발생하였습니다.');\n    }\n  };\n\n  const onCompleteAddressSelect = (data: AddressData) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        zipcode: data.zonecode,\n        baseAddress: data.jibunAddress,\n      },\n    });\n    setShowsModal(false);\n  };\n\n  const onChangeDetailAddress = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        detailAddress: e.target.value,\n      },\n    });\n  };\n\n  const onClickAgree = (agree: 'all' | 'agree1' | 'agree2' | 'agree3') => {\n    if (agree === 'all') {\n      setInputs({\n        ...inputs,\n        agreement: {\n          all: !agreement.all,\n          agree1: !agreement.all,\n          agree2: !agreement.all,\n          agree3: !agreement.all,\n        },\n      });\n    } else {\n      const resultArr: boolean[] = [];\n\n      Object.keys(agreement).forEach((key) => {\n        if (key !== 'all' && (key === 'agree1' || key === 'agree2' || key === 'agree3')) {\n          if (key === agree) {\n            resultArr.push(!agreement[key]);\n          } else {\n            resultArr.push(agreement[key]);\n          }\n        }\n      });\n\n      if (agree === 'agree1' || agree === 'agree2' || agree === 'agree3') {\n        setInputs({\n          ...inputs,\n          agreement: {\n            ...agreement,\n            all: resultArr.every((value) => value === true),\n            [agree]: !agreement[agree],\n          },\n        });\n      }\n    }\n  };\n\n  const onsubmitJoin = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!email.certificationCheck) {\n      alert('이메일 인증을 진행해주세요.');\n    } else if (nickname.state !== 'check') {\n      alert('닉네임이 중복되었거나 형식이 맞지 않습니다.');\n    } else if (passwd.state !== 'check') {\n      alert('비밀번호 형식이 맞지 않습니다.');\n    } else if (passwdCheck.state !== 'check') {\n      alert('비밀번호가 일치하지 않습니다.');\n    } else if (address.zipcode === '') {\n      alert('주소를 입력해주세요.');\n    } else if (!agreement.agree1 || !agreement.agree2) {\n      alert('필수 약관 항목에 동의해주세요.');\n    } else {\n      await joinRequestAsync(email.value, nickname.value, passwd.value, `${address.baseAddress} ${address.detailAddress}`);\n      alert('회원가입이 완료되었습니다.');\n      history.push('/');\n    }\n  };\n\n  return (\n    <Positional>\n      <Header>\n        <BackLink to=\"/\">\n          <BackLogo src=\"/images/icons/back.png\" />\n        </BackLink>\n        <h1>회원가입</h1>\n      </Header>\n      <Main>\n        <JoinForm method=\"post\" onSubmit={onsubmitJoin}>\n          <JoinInputBox>\n            <label htmlFor=\"email\">이메일</label>\n            <JoinInput>\n              <Input required type=\"email\" id=\"email\" name=\"email\" onChange={onChangeText} value={email.value} disabled={email.duplicationCheck} />\n              <CheckLogo src={`/images/icons/${email.state}.png`} />\n              <CertificationRequest style={{ display: email.state === 'check' && !email.certificationCheck ? 'block' : 'none' }} type=\"button\" onClick={onClickEmailDuplication}>인증요청</CertificationRequest>\n            </JoinInput>\n            <CertificationBox ref={emailCertificationBox}>\n              <CertificationInputBox>\n                <CertificationInput name=\"certification\" onChange={onChangeCode} value={email.code} />\n                <CertificationButton type=\"button\" onClick={onClickEmailCertification}>확인</CertificationButton>\n              </CertificationInputBox>\n            </CertificationBox>\n            <InputMessage style={{ color: email.color }}>{email.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"nickname\">닉네임</label>\n            <JoinInput>\n              <Input required type=\"text\" maxLength={10} id=\"nickname\" name=\"nickname\" onChange={onChangeText} value={nickname.value} />\n              <CheckLogo src={`/images/icons/${nickname.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: nickname.color }}>{nickname.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwd\">비밀번호</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwd\" name=\"passwd\" onChange={onChangeText} value={passwd.value} />\n              <CheckLogo src={`/images/icons/${passwd.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwd.color }}>{passwd.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwdCheck\">비밀번호 확인</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwdCheck\" name=\"passwdCheck\" onChange={onChangeText} value={passwdCheck.value} />\n              <CheckLogo src={`/images/icons/${passwdCheck.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwdCheck.color }}>{passwdCheck.message}</InputMessage>\n          </JoinInputBox>\n          <AddressFormBox>\n            <label>주소</label>\n            <AddressSearchBox>\n              <AddressSearchInput disabled value={address.zipcode} />\n              <AddressSearchButton type=\"button\" onClick={() => setShowsModal(true)}>우편번호 검색</AddressSearchButton>\n            </AddressSearchBox>\n            <JoinInput>\n              <Input type=\"text\" disabled placeholder=\"상세 주소\" value={address.baseAddress} />\n            </JoinInput>\n            <JoinInput>\n              <Input type=\"text\" placeholder=\"나머지 주소\" onChange={onChangeDetailAddress} value={address.detailAddress} />\n            </JoinInput>\n          </AddressFormBox>\n          <AgreementBox>\n            <AllAgreeBox onClick={() => onClickAgree('all')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.all ? 'check' : 'check_default'}.png`} />\n              <AgreeText>전체 약관에 동의합니다.</AgreeText>\n            </AllAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree1')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree1 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>서비스 이용약관 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree2')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree2 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>개인정보 처리방침 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree3')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree3 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>이벤트 마케팅 수신 동의 <span>(선택)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n          </AgreementBox>\n          <ButtonWrapper>\n            <JoinButton type=\"submit\">회원가입</JoinButton>\n          </ButtonWrapper>\n        </JoinForm>\n      </Main>\n      <SearchModal style={{ display: showsModal ? 'flex' : 'none' }}>\n        <CloseButton src=\"/images/icons/x.png\" onClick={() => setShowsModal(false)} />\n        <DaumPostCode onComplete={onCompleteAddressSelect} />\n      </SearchModal>\n    </Positional>\n  );\n}\n\nexport default Join;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\modifyProfile\\ModifyProfile.tsx",["429","430","431","432","433","434","435","436"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { nicknameDuplicationAsync } from '../../../api/joinApi';\r\nimport { postModifyProfileRequest } from '../../signIn/userSlice';\r\n\r\nconst FormLayout = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 17.216px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  & h1 {\r\n      width: 100%;\r\n      font-size: 4.5vw;\r\n      padding: 1.5em;\r\n  }\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n    & h1 {\r\n      font-size: 19.368px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackImg = styled.img`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  left: 1em;\r\n  width: 2em;\r\n  height: 2em;\r\n`;\r\n\r\nconst ModifyButton = styled.button`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  font-size: 3vw;\r\n  right: 1em;\r\n  padding: 0.2em 0.7em;\r\n  border: 2px solid #3162C7;\r\n  outline: none;\r\n  border-radius: 50px;\r\n  color: #3162C7;\r\n  background: none;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 12.912px;\r\n  }\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 2.5em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImgBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 11em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 430.4px;\r\n  }\r\n`;\r\n\r\nconst BackgroundImg = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst ProfileImgWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: -1.5em;\r\n  width:5.5em;\r\n  height: 5.5em;\r\n`;\r\n\r\nconst ProfileImgBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  width:5.5em;\r\n  height: 5.5em;\r\n  background: #eee;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ChangeImageButton = styled.button`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 2.5em;\r\n  height: 2.5em;\r\n  right: 0;\r\n  bottom: 0;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 50%;\r\n  background: #000;\r\n  & label {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst ChangeImageButtonImg = styled.img`\r\n  width: 1.5em;\r\n  height: auto;\r\n  font-size: 3vw;\r\n  @media screen and (min-width: 430px) {\r\n    font-size: 12.912px;\r\n  }\r\n`;\r\n\r\nconst ProfileImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst InputBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90vw;\r\n  margin-bottom: 2em;\r\n  @media screen and (min-width: 430px) {\r\n    width: 387.350px;\r\n  }\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  & label {\r\n      font-size: 3.5vw;\r\n      margin-bottom: 1em;\r\n  }\r\n\r\n  & p {\r\n      font-size: 3vw;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n      margin-bottom: 1em;\r\n  }\r\n\r\n  @media screen and (min-width: 430px) {\r\n    & label {\r\n      font-size: 15.064px;\r\n    }\r\n    & p {\r\n      font-size: 12.912px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  background:  #fffdfd;\r\n  border-radius: 8px;\r\n  box-shadow: 3px 3px 10px #cecece;\r\n  padding: 0.5em 0;\r\n  margin-bottom: 0.5em;\r\n\r\n  & input {\r\n      font-size: 4vw;\r\n      width: 18em;\r\n      padding: 0 1em;\r\n      background: none;\r\n      border: none;\r\n      outline: none;\r\n  }\r\n\r\n  & img {\r\n      width: 1.5em;\r\n      height: 1.5em;\r\n      margin-right: 1em;\r\n  }\r\n\r\n  @media screen and (min-width: 430px) {\r\n    & input {\r\n      font-size: 17.216px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RemoveBox = styled.div`\r\n    width: 90vw;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    & p {\r\n      font-size: 3.5vw;\r\n      color: gray;\r\n    }\r\n\r\n    & button {\r\n        font-size: 3.8vw;\r\n        font-weight: bold;\r\n        background: none;\r\n        border: none;\r\n        outline: none;\r\n        text-decoration: underline;\r\n    }\r\n\r\n    @media screen and (min-width: 430px) {\r\n      width: 387.35px;\r\n      & p {\r\n        font-size: 15.064px;\r\n      }\r\n      & button {\r\n        font-size: 16.35px;\r\n      }\r\n    }\r\n`;\r\n\r\nfunction ModifyProfile():JSX.Element {\r\n  const { user, isModifyProfileError } = useSelector((state: any) => state.userSlice);\r\n  const { nickname, profileImg } = user;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [modifyInputs, setModifInputs] = useState({\r\n    nickname: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    passwd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    newPasswd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    newPasswdCheck: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isModifyProfileError === '비밀번호 불일치') {\r\n      setModifInputs((input) => ({\r\n        ...input,\r\n        passwd: {\r\n          ...input.passwd,\r\n          message: '비밀번호가 일치하지 않습니다.',\r\n          state: 'fail',\r\n          color: 'red',\r\n        },\r\n      }));\r\n    } else if (isModifyProfileError !== null) {\r\n      alert('서버 통신 에러');\r\n    }\r\n  }, [isModifyProfileError]);\r\n\r\n  const onChangeInuts = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    let passwdChekInput: {\r\n      value: string,\r\n      state: string,\r\n      message: string,\r\n      color: string,\r\n    } = {\r\n      value: '',\r\n      state: '',\r\n      message: '',\r\n      color: '',\r\n    };\r\n\r\n    switch (name) {\r\n      case 'nickname':\r\n        if (value === nickname) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              value,\r\n              state: 'none',\r\n              message: '',\r\n            },\r\n          });\r\n        } else if (value.length < 4) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              value,\r\n              state: 'fail',\r\n              message: '닉네임을 4자 이상 입력해주세요.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            nickname: {\r\n              ...modifyInputs.nickname,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n          });\r\n        }\r\n        break;\r\n      case 'passwd':\r\n        setModifInputs({\r\n          ...modifyInputs,\r\n          passwd: {\r\n            ...modifyInputs.passwd,\r\n            value,\r\n            state: 'check',\r\n          },\r\n        });\r\n        break;\r\n      case 'newPasswd':\r\n        if (modifyInputs.newPasswdCheck.value !== '' && modifyInputs.newPasswdCheck.value !== value) {\r\n          passwdChekInput = {\r\n            ...modifyInputs.newPasswdCheck,\r\n            state: 'fail',\r\n            message: '비밀번호가 일치하지 않습니다.',\r\n            color: 'red',\r\n          };\r\n        } else {\r\n          passwdChekInput = {\r\n            ...modifyInputs.newPasswdCheck,\r\n            state: 'check',\r\n            message: '',\r\n          };\r\n        }\r\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              ...modifyInputs.newPasswd,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        } else if (value === '') {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              ...modifyInputs.newPasswd,\r\n              value,\r\n              state: 'none',\r\n              message: '',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswd: {\r\n              value,\r\n              state: 'fail',\r\n              message: '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.',\r\n              color: 'red',\r\n            },\r\n            newPasswdCheck: passwdChekInput,\r\n          });\r\n        }\r\n        break;\r\n      case 'newPasswdCheck':\r\n        if (modifyInputs.newPasswd.value === value) {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswdCheck: {\r\n              ...modifyInputs.newPasswdCheck,\r\n              value,\r\n              state: 'check',\r\n              message: '',\r\n            },\r\n          });\r\n        } else {\r\n          setModifInputs({\r\n            ...modifyInputs,\r\n            newPasswdCheck: {\r\n              value,\r\n              state: 'fail',\r\n              message: '비밀번호가 일치하지 않습니다.',\r\n              color: 'red',\r\n            },\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmitModifyProfile = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (modifyInputs.nickname.state === 'fail') {\r\n      alert('닉네임을 확인해주세요.');\r\n    } else if (modifyInputs.passwd.value === '') {\r\n      alert('비밀번호는 반드시 입력해야 합니다.');\r\n    } else if (modifyInputs.newPasswd.state === 'fail') {\r\n      alert('새비밀번호를 확인해주세요.');\r\n    } else if (modifyInputs.newPasswdCheck.state === 'fail') {\r\n      alert('비밀번호가 일치하지 않습니다.');\r\n    } else {\r\n      try {\r\n        const result = await nicknameDuplicationAsync(modifyInputs.nickname.value);\r\n        const formData = new FormData();\r\n        if (imageFileState.file !== null) {\r\n          console.log('프로필이미지 저장');\r\n          formData.append('profileImg', imageFileState.file);\r\n        }\r\n        if (modifyInputs.nickname.value !== null) {\r\n          console.log('닉네임 저장');\r\n          formData.append('nickname', modifyInputs.nickname.value);\r\n        }\r\n        if (modifyInputs.passwd.value !== null) {\r\n          console.log('패스워드 저장');\r\n          formData.append('passwd', modifyInputs.passwd.value);\r\n        }\r\n        if (modifyInputs.newPasswd.value !== null) {\r\n          formData.append('newPasswd', modifyInputs.newPasswd.value);\r\n        }\r\n        if (result) {\r\n          dispatch(postModifyProfileRequest({\r\n            modifyProfile: formData,\r\n          }));\r\n        } else {\r\n          console.log('닉네임 중복');\r\n        }\r\n      } catch {\r\n        alert('서버통신중 에러발생');\r\n      }\r\n    }\r\n  };\r\n\r\n  const [imageFileState, setImageFileState] = useState<{file: File | null, previewURL: any}>({ file: null, previewURL: null });\r\n  const profileImageView = useRef<HTMLImageElement>(null);\r\n\r\n  const onChangeProfileImage = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files !== null) {\r\n      const reader = new FileReader();\r\n      const file = e.target.files[0];\r\n      reader.onloadend = () => {\r\n        setImageFileState({\r\n          ...imageFileState,\r\n          file,\r\n          previewURL: reader.result,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (imageFileState.previewURL !== null) {\r\n      if (profileImageView.current !== null) {\r\n        profileImageView.current.src = imageFileState.previewURL;\r\n      }\r\n    }\r\n  }, [imageFileState.previewURL]);\r\n\r\n  return (\r\n    <FormLayout method=\"post\" onSubmit={onSubmitModifyProfile}>\r\n      <Header>\r\n        <BackImg src=\"/images/icons/back.png\" onClick={() => history.push('/mypage')} />\r\n        <h1>프로필 편집</h1>\r\n        <ModifyButton type=\"submit\">완료</ModifyButton>\r\n      </Header>\r\n      <ImageBox>\r\n        <BackgroundImgBox>\r\n          <BackgroundImg src=\"/images/icons/profileBack.png\" />\r\n        </BackgroundImgBox>\r\n        <ProfileImgWrapper>\r\n          <ProfileImgBox>\r\n            <ProfileImg src={profileImg} ref={profileImageView} />\r\n            <ChangeImageButton type=\"button\">\r\n              <label htmlFor=\"profileImage\" />\r\n              <input id=\"profileImage\" accept=\"image/jpg,image/png,image/jpeg\" name=\"file\" style={{ visibility: 'hidden' }} type=\"file\" onChange={onChangeProfileImage} />\r\n              <ChangeImageButtonImg src=\"/images/icons/camera_white.png\" />\r\n            </ChangeImageButton>\r\n          </ProfileImgBox>\r\n        </ProfileImgWrapper>\r\n      </ImageBox>\r\n      <InputBox>\r\n        <InputGroup>\r\n          <label htmlFor=\"nickname\">닉네임</label>\r\n          <Input>\r\n            <input type=\"text\" onChange={onChangeInuts} id=\"nickname\" name=\"nickname\" value={modifyInputs.nickname.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.nickname.color }}>{modifyInputs.nickname.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"passwd\">현재 비밀번호</label>\r\n          <Input>\r\n            <input id=\"passwd\" name=\"passwd\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.passwd.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.passwd.color }}>{modifyInputs.passwd.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"newPasswd\">새 비밀번호</label>\r\n          <Input>\r\n            <input id=\"newPasswd\" name=\"newPasswd\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.newPasswd.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.newPasswd.color }}>{modifyInputs.newPasswd.message}</p>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <label htmlFor=\"newPasswdCheck\">새 비밀번호 확인</label>\r\n          <Input>\r\n            <input id=\"newPasswdCheck\" name=\"newPasswdCheck\" onChange={onChangeInuts} type=\"password\" value={modifyInputs.newPasswdCheck.value} />\r\n            <img src=\"/images/icons/none.png\" alt=\"\" />\r\n          </Input>\r\n          <p style={{ color: modifyInputs.newPasswdCheck.color }}>{modifyInputs.newPasswdCheck.message}</p>\r\n        </InputGroup>\r\n      </InputBox>\r\n      <RemoveBox>\r\n        <p>회원정보를 삭제하시겠어요?</p>\r\n        <button type=\"button\">회원 탈퇴</button>\r\n      </RemoveBox>\r\n    </FormLayout>\r\n  );\r\n}\r\n\r\nexport default ModifyProfile;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts",["437","438","439"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\AddPostPage.tsx",["440","441","442","443"],"import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { DefaultRootState, useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport { addBookPostRequest } from './addPostSlice';\nimport ImagePreView from './ImagePreView';\nimport ImageFileReaderPromise from '../../utils/imageFileReader';\nimport { getAladinBook } from '../../api/postBookApi';\nimport aladinIteminterface from '../../interfaces/AladinInterface';\nimport SearchBook from './SearchBook';\n\ninterface ParamTypes {\n  division: string\n}\ninterface ImageURLInterface {\n  id: string;\n  url: string;\n  image: Blob;\n}\nconst AddPostWrapper = styled.div`\n  width: 90%;\n  margin: 0 auto;\n  max-width: 600px;\n`;\nconst AddPostHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 0px;\n`;\nconst Logo = styled.img`\n  width: 40px;\n`;\nconst DeleteImg = styled.img`\n  width: 20px;\n  align-self: flex-start;\n`;\nconst BookWrapper = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    width: 30%;\n    max-width: 200px;\n  }\n  border: 1px solid #e8e8e8;\n  margin: 10px 0px;\n`;\nconst BookDetail = styled.div`\n  margin-left: 20px;\n`;\nconst Category = styled.div`\n  font-size: 12px;\n  margin-bottom: 20px;\n`;\nconst BookTitle = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n  font-weight: 800;\n`;\nconst BookPrice = styled.div`\n  font-size: 15px;\n  margin-bottom: 20px;\n`;\nconst FormWrapper = styled.form`\n`;\nconst BookDetailInputWrapper = styled.div`\n  & input {\n    margin: 20px 0;\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n  }\n  & textArea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #e8e8e8;\n    height: 80px;\n    resize: none;\n    overflow: scroll;\n  }\n`;\nconst AddPostButton = styled.button`\n  width: 100%;\n  border: 0;\n  background-color: #3960a6;\n  padding: 10px;\n  margin: 20px 0px;\n  border-radius: 5px;\n  color: white;\n  font-weight: 700;\n`;\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  background-color: #e9e9e9;\n  width: 100%;\n  margin: auto;\n  & input {\n    border:0;\n    width:80%;\n    background-color: inherit;\n  }\n  & button {\n    border: 0;\n  }\n  & img {\n    width: 20px;\n  }\n`;\n\nfunction AddPostPage():JSX.Element {\n  const [searchTitle, setSearchTitle] = useState<string>('');\n  const [searchResult, setSearchResult] = useState<aladinIteminterface[]>([]);\n  const [title, setTitle] = useState<string>('');\n  const [category, setCategory] = useState<string>('');\n  const [cid, setCid] = useState<number>();\n  const [thumbnail, setThumbnail] = useState<string>('');\n  const [images, setImages] = useState<ImageURLInterface[]>([]);\n  const [realPrice, setRealPrice] = useState<number>();\n  const [price, setPrice] = useState<string>('');\n  const [content, setContent] = useState<string>('');\n  const [isOpenSearchBox, setIsOpenSearchBox] = useState<boolean>(false);\n  const history = useHistory();\n\n  const { isAddBookPostLoading, isAddBookPostDone, isAddBookPostError } = useSelector((state: any) => state.addPostSlice);\n  const dispatch = useDispatch();\n\n  const { division } = useParams<ParamTypes>();\n  const upperCaseDivision:string = division.toUpperCase();\n\n  const ImageFileReader = async (file: Blob) => {\n    try {\n      const image: string = await ImageFileReaderPromise(file);\n      if (images.length < 2) {\n        setImages(images.concat({ id: uuidv4(), url: image, image: file }));\n      } else {\n        ToastsStore.error('최대 두장의 사진만 업로드 가능합니다.');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const loadSearchResultBook = async () => {\n    getAladinBook(searchTitle).then(({ data }) => {\n      const a = data.replace(/\\\\/ig, '\\\\\\\\', /;/g, '');\n      const b = a.substr(0, a.length - 1);\n      console.log(data);\n      console.log(b[3970]);\n      console.log(b[3971]);\n      console.log(b[3972]);\n\n      const parseData = JSON.parse(b);\n      console.log(parseData);\n      setSearchResult(parseData.item);\n      if (parseData.item.length === 0) {\n        ToastsStore.error('검색결과가 없습니다');\n      } else {\n        setIsOpenSearchBox(true);\n      }\n    }).catch((error) => {\n      console.log(error);\n    });\n  };\n  const handleChangeSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTitle(e.target.value);\n  };\n  const handleClickSearch = () => {\n    loadSearchResultBook();\n  };\n  const handleXButtonClick = () => {\n    history.push('/home');\n  };\n  const handleDeleteImage = useCallback((imageId: string) => {\n    const filteringImageFile = images.filter((image) => image.id !== imageId);\n    setImages([...filteringImageFile]);\n  }, [images]);\n  const handleChangePrice = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPrice(e.target.value);\n  }, []);\n  const handleChangeContent = useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setContent(e.target.value);\n  }, []);\n  const handleChangeImages = (e: any) => {\n    ImageFileReader(e.target.files[0]);\n  };\n  const handleClickItem = (item: aladinIteminterface) => {\n    setCategory(item.categoryName);\n    setTitle(item.title);\n    setCid(item.categoryId);\n    setThumbnail(item.cover);\n    setRealPrice(item.priceStandard);\n    setIsOpenSearchBox(false);\n  };\n  const handleSubmitPost = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (images.length < 2) {\n      ToastsStore.error('최소 두장의 사진이 업로드 되어야합니다');\n      return;\n    }\n    const formData = new FormData();\n    for (let i = 0; i < images.length; i++) {\n      formData.append('file', images[i].image); // 사용자가 등록한 이미지\n    }\n    formData.append('category', category); // category\n    formData.append('cid', String(cid)); // 알라딘에서 받은 정보\n    formData.append('title', title); // 알라딘에서 받은 정보\n    formData.append('image', thumbnail); // 알라딘에서 받은 정보\n    formData.append('rprice', String(realPrice)); // 알라딘에서 받은 정보\n    formData.append('content', content); // 사용자가 입력한 정보\n    formData.append('tprice', price); // 사용자가 입력한 정보\n    formData.append('division', upperCaseDivision); // 사용자가 입력한 정보\n\n    console.log(formData.keys(), formData.getAll('file'));\n\n    dispatch(addBookPostRequest({ data: formData }));\n\n    if (isAddBookPostLoading === false && isAddBookPostError !== null) {\n      ToastsStore.error('업로드에 실패했습니다.');\n    }\n  }, [category, cid, content, dispatch, images, isAddBookPostError, isAddBookPostLoading, price, realPrice, thumbnail, title, upperCaseDivision]);\n  return (\n    <>\n      <AddPostWrapper>\n        {isOpenSearchBox && <SearchBook searchResult={searchResult} onClickItem={handleClickItem} />}\n        <AddPostHeader>\n          <Logo src=\"/images/icons/logo.jpeg\" alt=\"logo\" />\n          <button type=\"button\" onClick={handleXButtonClick}>\n            <DeleteImg src=\"/images/icons/x.png\" alt=\"x_button\" />\n          </button>\n        </AddPostHeader>\n        <SearchInput>\n          <input placeholder=\"책 이름을 검색해보세요!\" onChange={handleChangeSearch} />\n          <button type=\"button\" onClick={handleClickSearch}>\n            <img src=\"/images/icons/search.png\" alt=\"search_icon\" />\n          </button>\n        </SearchInput>\n        <BookWrapper>\n          {\n          title\n            ? (\n              <>\n                <img src={thumbnail} alt=\"thumbnail\" />\n                <BookDetail>\n                  <Category>{category}</Category>\n                  <BookTitle>{title}</BookTitle>\n                  <BookPrice>{realPrice} 원</BookPrice>\n                </BookDetail>\n              </>\n            )\n            : <div>책을 검색해서 등록하세요!</div>\n        }\n        </BookWrapper>\n        <FormWrapper encType=\"multipart/form-data\" onSubmit={handleSubmitPost}>\n          <ImagePreView onChangeImage={handleChangeImages} images={images} onDelete={handleDeleteImage} />\n          <BookDetailInputWrapper>\n            <input type=\"text\" pattern=\"[0-9]+\" placeholder=\"₩ 가격입력\" onChange={handleChangePrice} value={price} />\n            <textarea onChange={handleChangeContent} value={content} placeholder=\"상품설명을 입력하세요\" />\n          </BookDetailInputWrapper>\n          <AddPostButton type=\"submit\">등록하기</AddPostButton>\n          <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\n        </FormWrapper>\n      </AddPostWrapper>\n    </>\n  );\n}\n\nexport default AddPostPage;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts",["444"],"import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostView.tsx",["445","446"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\chattingApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\questionApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\pages\\myPage\\myMarket\\myMarketSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myMarketApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts",["447","448","449","450"],{"ruleId":"451","severity":1,"message":"452","line":1,"column":10,"nodeType":"453","messageId":"454","endLine":1,"endColumn":24},{"ruleId":"451","severity":1,"message":"455","line":1,"column":39,"nodeType":"453","messageId":"454","endLine":1,"endColumn":52},{"ruleId":"451","severity":1,"message":"456","line":40,"column":38,"nodeType":"453","messageId":"454","endLine":40,"endColumn":44},{"ruleId":"451","severity":1,"message":"456","line":53,"column":34,"nodeType":"453","messageId":"454","endLine":53,"endColumn":40},{"ruleId":"451","severity":1,"message":"457","line":102,"column":9,"nodeType":"453","messageId":"454","endLine":102,"endColumn":16},{"ruleId":"451","severity":1,"message":"458","line":104,"column":11,"nodeType":"453","messageId":"454","endLine":104,"endColumn":24},{"ruleId":"451","severity":1,"message":"459","line":104,"column":37,"nodeType":"453","messageId":"454","endLine":104,"endColumn":67},{"ruleId":"460","severity":1,"message":"461","line":104,"column":92,"nodeType":"462","messageId":"463","endLine":104,"endColumn":95,"suggestions":"464"},{"ruleId":"451","severity":1,"message":"465","line":105,"column":9,"nodeType":"453","messageId":"454","endLine":105,"endColumn":21},{"ruleId":"451","severity":1,"message":"456","line":11,"column":31,"nodeType":"453","messageId":"454","endLine":11,"endColumn":37},{"ruleId":"451","severity":1,"message":"456","line":15,"column":31,"nodeType":"453","messageId":"454","endLine":15,"endColumn":37},{"ruleId":"451","severity":1,"message":"456","line":13,"column":38,"nodeType":"453","messageId":"454","endLine":13,"endColumn":44},{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","replacedBy":"469"},{"ruleId":"470","replacedBy":"471"},{"ruleId":"472","replacedBy":"473"},{"ruleId":"474","replacedBy":"475"},{"ruleId":"476","replacedBy":"477"},{"ruleId":"466","replacedBy":"478"},{"ruleId":"468","replacedBy":"479"},{"ruleId":"470","replacedBy":"480"},{"ruleId":"472","replacedBy":"481"},{"ruleId":"474","replacedBy":"482"},{"ruleId":"476","replacedBy":"483"},{"ruleId":"460","severity":1,"message":"461","line":85,"column":45,"nodeType":"462","messageId":"463","endLine":85,"endColumn":48,"suggestions":"484"},{"ruleId":"466","replacedBy":"485"},{"ruleId":"468","replacedBy":"486"},{"ruleId":"470","replacedBy":"487"},{"ruleId":"472","replacedBy":"488"},{"ruleId":"474","replacedBy":"489"},{"ruleId":"476","replacedBy":"490"},{"ruleId":"466","replacedBy":"491"},{"ruleId":"468","replacedBy":"492"},{"ruleId":"470","replacedBy":"493"},{"ruleId":"472","replacedBy":"494"},{"ruleId":"474","replacedBy":"495"},{"ruleId":"476","replacedBy":"496"},{"ruleId":"466","replacedBy":"497"},{"ruleId":"468","replacedBy":"498"},{"ruleId":"470","replacedBy":"499"},{"ruleId":"472","replacedBy":"500"},{"ruleId":"474","replacedBy":"501"},{"ruleId":"476","replacedBy":"502"},{"ruleId":"466","replacedBy":"503"},{"ruleId":"468","replacedBy":"504"},{"ruleId":"470","replacedBy":"505"},{"ruleId":"472","replacedBy":"506"},{"ruleId":"474","replacedBy":"507"},{"ruleId":"476","replacedBy":"508"},{"ruleId":"460","severity":1,"message":"461","line":176,"column":40,"nodeType":"462","messageId":"463","endLine":176,"endColumn":43,"suggestions":"509"},{"ruleId":"460","severity":1,"message":"461","line":168,"column":57,"nodeType":"462","messageId":"463","endLine":168,"endColumn":60,"suggestions":"510"},{"ruleId":"451","severity":1,"message":"456","line":13,"column":33,"nodeType":"453","messageId":"454","endLine":13,"endColumn":39},{"ruleId":"511","severity":1,"message":"512","line":1,"column":26,"nodeType":"513","messageId":"514","endLine":1,"endColumn":42},{"ruleId":"466","replacedBy":"515"},{"ruleId":"468","replacedBy":"516"},{"ruleId":"470","replacedBy":"517"},{"ruleId":"472","replacedBy":"518"},{"ruleId":"474","replacedBy":"519"},{"ruleId":"476","replacedBy":"520"},{"ruleId":"466","replacedBy":"521"},{"ruleId":"468","replacedBy":"522"},{"ruleId":"470","replacedBy":"523"},{"ruleId":"472","replacedBy":"524"},{"ruleId":"474","replacedBy":"525"},{"ruleId":"476","replacedBy":"526"},{"ruleId":"451","severity":1,"message":"456","line":13,"column":42,"nodeType":"453","messageId":"454","endLine":13,"endColumn":48},{"ruleId":"460","severity":1,"message":"461","line":213,"column":64,"nodeType":"462","messageId":"463","endLine":213,"endColumn":67,"suggestions":"527"},{"ruleId":"460","severity":1,"message":"461","line":167,"column":59,"nodeType":"462","messageId":"463","endLine":167,"endColumn":62,"suggestions":"528"},{"ruleId":"451","severity":1,"message":"529","line":10,"column":12,"nodeType":"453","messageId":"454","endLine":10,"endColumn":15},{"ruleId":"451","severity":1,"message":"530","line":10,"column":33,"nodeType":"453","messageId":"454","endLine":10,"endColumn":38},{"ruleId":"451","severity":1,"message":"529","line":20,"column":12,"nodeType":"453","messageId":"454","endLine":20,"endColumn":15},{"ruleId":"451","severity":1,"message":"530","line":20,"column":33,"nodeType":"453","messageId":"454","endLine":20,"endColumn":38},{"ruleId":"451","severity":1,"message":"531","line":1,"column":38,"nodeType":"453","messageId":"454","endLine":1,"endColumn":46},{"ruleId":"460","severity":1,"message":"461","line":11,"column":22,"nodeType":"462","messageId":"463","endLine":11,"endColumn":25,"suggestions":"532"},{"ruleId":"460","severity":1,"message":"461","line":11,"column":11,"nodeType":"462","messageId":"463","endLine":11,"endColumn":14,"suggestions":"533"},{"ruleId":"460","severity":1,"message":"461","line":54,"column":86,"nodeType":"462","messageId":"463","endLine":54,"endColumn":89,"suggestions":"534"},{"ruleId":"460","severity":1,"message":"461","line":213,"column":76,"nodeType":"462","messageId":"463","endLine":213,"endColumn":79,"suggestions":"535"},{"ruleId":"536","severity":1,"message":"537","line":250,"column":7,"nodeType":"538","messageId":"539","endLine":250,"endColumn":53},{"ruleId":"536","severity":1,"message":"537","line":253,"column":7,"nodeType":"538","messageId":"539","endLine":253,"endColumn":28},{"ruleId":"460","severity":1,"message":"461","line":16,"column":55,"nodeType":"462","messageId":"463","endLine":16,"endColumn":58,"suggestions":"540"},{"ruleId":"451","severity":1,"message":"459","line":213,"column":37,"nodeType":"453","messageId":"454","endLine":213,"endColumn":67},{"ruleId":"460","severity":1,"message":"461","line":213,"column":92,"nodeType":"462","messageId":"463","endLine":213,"endColumn":95,"suggestions":"541"},{"ruleId":"466","replacedBy":"542"},{"ruleId":"468","replacedBy":"543"},{"ruleId":"470","replacedBy":"544"},{"ruleId":"472","replacedBy":"545"},{"ruleId":"474","replacedBy":"546"},{"ruleId":"476","replacedBy":"547"},{"ruleId":"451","severity":1,"message":"548","line":2,"column":10,"nodeType":"453","messageId":"454","endLine":2,"endColumn":17},{"ruleId":"466","replacedBy":"549"},{"ruleId":"468","replacedBy":"550"},{"ruleId":"470","replacedBy":"551"},{"ruleId":"472","replacedBy":"552"},{"ruleId":"474","replacedBy":"553"},{"ruleId":"476","replacedBy":"554"},{"ruleId":"511","severity":1,"message":"512","line":5,"column":33,"nodeType":"513","messageId":"514","endLine":5,"endColumn":64},{"ruleId":"511","severity":1,"message":"512","line":58,"column":34,"nodeType":"513","messageId":"514","endLine":58,"endColumn":57},{"ruleId":"451","severity":1,"message":"555","line":5,"column":10,"nodeType":"453","messageId":"454","endLine":5,"endColumn":26},{"ruleId":"536","severity":1,"message":"537","line":91,"column":9,"nodeType":"538","messageId":"539","endLine":91,"endColumn":33},{"ruleId":"536","severity":1,"message":"537","line":93,"column":9,"nodeType":"538","messageId":"539","endLine":93,"endColumn":30},{"ruleId":"536","severity":1,"message":"537","line":37,"column":7,"nodeType":"538","messageId":"539","endLine":37,"endColumn":27},{"ruleId":"451","severity":1,"message":"556","line":47,"column":12,"nodeType":"453","messageId":"454","endLine":47,"endColumn":18},{"ruleId":"451","severity":1,"message":"530","line":62,"column":13,"nodeType":"453","messageId":"454","endLine":62,"endColumn":18},{"ruleId":"451","severity":1,"message":"529","line":73,"column":12,"nodeType":"453","messageId":"454","endLine":73,"endColumn":15},{"ruleId":"511","severity":1,"message":"512","line":4,"column":28,"nodeType":"513","messageId":"514","endLine":4,"endColumn":60},{"ruleId":"466","replacedBy":"557"},{"ruleId":"468","replacedBy":"558"},{"ruleId":"470","replacedBy":"559"},{"ruleId":"472","replacedBy":"560"},{"ruleId":"474","replacedBy":"561"},{"ruleId":"476","replacedBy":"562"},{"ruleId":"466","replacedBy":"563"},{"ruleId":"468","replacedBy":"564"},{"ruleId":"470","replacedBy":"565"},{"ruleId":"472","replacedBy":"566"},{"ruleId":"474","replacedBy":"567"},{"ruleId":"476","replacedBy":"568"},{"ruleId":"451","severity":1,"message":"569","line":158,"column":21,"nodeType":"453","messageId":"454","endLine":158,"endColumn":33},{"ruleId":"570","severity":1,"message":"571","line":166,"column":24,"nodeType":"572","messageId":"573","endLine":166,"endColumn":33},{"ruleId":"451","severity":1,"message":"574","line":166,"column":34,"nodeType":"453","messageId":"454","endLine":166,"endColumn":39},{"ruleId":"570","severity":1,"message":"571","line":181,"column":27,"nodeType":"572","messageId":"573","endLine":181,"endColumn":36},{"ruleId":"451","severity":1,"message":"574","line":181,"column":37,"nodeType":"453","messageId":"454","endLine":181,"endColumn":42},{"ruleId":"460","severity":1,"message":"461","line":187,"column":29,"nodeType":"462","messageId":"463","endLine":187,"endColumn":32,"suggestions":"575"},{"ruleId":"460","severity":1,"message":"461","line":142,"column":44,"nodeType":"462","messageId":"463","endLine":142,"endColumn":47,"suggestions":"576"},{"ruleId":"460","severity":1,"message":"461","line":143,"column":50,"nodeType":"462","messageId":"463","endLine":143,"endColumn":53,"suggestions":"577"},{"ruleId":"536","severity":1,"message":"537","line":463,"column":7,"nodeType":"538","messageId":"539","endLine":463,"endColumn":35},{"ruleId":"536","severity":1,"message":"537","line":506,"column":7,"nodeType":"538","messageId":"539","endLine":506,"endColumn":35},{"ruleId":"536","severity":1,"message":"537","line":573,"column":7,"nodeType":"538","messageId":"539","endLine":573,"endColumn":31},{"ruleId":"536","severity":1,"message":"537","line":575,"column":7,"nodeType":"538","messageId":"539","endLine":575,"endColumn":40},{"ruleId":"536","severity":1,"message":"537","line":577,"column":7,"nodeType":"538","messageId":"539","endLine":577,"endColumn":33},{"ruleId":"536","severity":1,"message":"537","line":579,"column":7,"nodeType":"538","messageId":"539","endLine":579,"endColumn":32},{"ruleId":"536","severity":1,"message":"537","line":581,"column":7,"nodeType":"538","messageId":"539","endLine":581,"endColumn":27},{"ruleId":"536","severity":1,"message":"537","line":583,"column":7,"nodeType":"538","messageId":"539","endLine":583,"endColumn":33},{"ruleId":"536","severity":1,"message":"537","line":586,"column":7,"nodeType":"538","messageId":"539","endLine":586,"endColumn":30},{"ruleId":"460","severity":1,"message":"461","line":248,"column":62,"nodeType":"462","messageId":"463","endLine":248,"endColumn":65,"suggestions":"578"},{"ruleId":"536","severity":1,"message":"537","line":292,"column":7,"nodeType":"538","messageId":"539","endLine":292,"endColumn":24},{"ruleId":"536","severity":1,"message":"537","line":436,"column":7,"nodeType":"538","messageId":"539","endLine":436,"endColumn":28},{"ruleId":"536","severity":1,"message":"537","line":438,"column":7,"nodeType":"538","messageId":"539","endLine":438,"endColumn":35},{"ruleId":"536","severity":1,"message":"537","line":440,"column":7,"nodeType":"538","messageId":"539","endLine":440,"endColumn":30},{"ruleId":"536","severity":1,"message":"537","line":442,"column":7,"nodeType":"538","messageId":"539","endLine":442,"endColumn":32},{"ruleId":"536","severity":1,"message":"537","line":470,"column":9,"nodeType":"538","messageId":"539","endLine":470,"endColumn":28},{"ruleId":"460","severity":1,"message":"461","line":475,"column":88,"nodeType":"462","messageId":"463","endLine":475,"endColumn":91,"suggestions":"579"},{"ruleId":"451","severity":1,"message":"529","line":8,"column":12,"nodeType":"453","messageId":"454","endLine":8,"endColumn":15},{"ruleId":"451","severity":1,"message":"529","line":22,"column":12,"nodeType":"453","messageId":"454","endLine":22,"endColumn":15},{"ruleId":"451","severity":1,"message":"529","line":36,"column":12,"nodeType":"453","messageId":"454","endLine":36,"endColumn":15},{"ruleId":"451","severity":1,"message":"580","line":3,"column":10,"nodeType":"453","messageId":"454","endLine":3,"endColumn":26},{"ruleId":"451","severity":1,"message":"581","line":129,"column":33,"nodeType":"453","messageId":"454","endLine":129,"endColumn":50},{"ruleId":"460","severity":1,"message":"461","line":129,"column":95,"nodeType":"462","messageId":"463","endLine":129,"endColumn":98,"suggestions":"582"},{"ruleId":"460","severity":1,"message":"461","line":187,"column":34,"nodeType":"462","messageId":"463","endLine":187,"endColumn":37,"suggestions":"583"},{"ruleId":"511","severity":1,"message":"512","line":3,"column":25,"nodeType":"513","messageId":"514","endLine":3,"endColumn":57},{"ruleId":"451","severity":1,"message":"584","line":28,"column":27,"nodeType":"453","messageId":"454","endLine":28,"endColumn":34},{"ruleId":"460","severity":1,"message":"461","line":30,"column":50,"nodeType":"462","messageId":"463","endLine":30,"endColumn":53,"suggestions":"585"},{"ruleId":"451","severity":1,"message":"586","line":3,"column":10,"nodeType":"453","messageId":"454","endLine":3,"endColumn":30},{"ruleId":"451","severity":1,"message":"587","line":4,"column":10,"nodeType":"453","messageId":"454","endLine":4,"endColumn":27},{"ruleId":"451","severity":1,"message":"588","line":5,"column":10,"nodeType":"453","messageId":"454","endLine":5,"endColumn":24},{"ruleId":"451","severity":1,"message":"589","line":5,"column":61,"nodeType":"453","messageId":"454","endLine":5,"endColumn":85},"@typescript-eslint/no-unused-vars","'createSelector' is defined but never used.","Identifier","unusedVar","'PayloadAction' is defined but never used.","'action' is defined but never used.","'history' is assigned a value but never used.","'mySaleArticle' is assigned a value but never used.","'isGetMyPurchaseArticlesLoading' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["590","591"],"'progressForm' is assigned a value but never used.","lines-around-directive",["592"],"no-spaced-func",["593"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["592"],["593"],[],[],[],[],["594","595"],["592"],["593"],[],[],[],[],["592"],["593"],[],[],[],[],["592"],["593"],[],[],[],[],["592"],["593"],[],[],[],[],["596","597"],["598","599"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["592"],["593"],[],[],[],[],["592"],["593"],[],[],[],[],["600","601"],["602","603"],"'res' is defined but never used.","'error' is defined but never used.","'useState' is defined but never used.",["604","605"],["606","607"],["608","609"],["610","611"],"no-alert","Unexpected alert.","CallExpression","unexpected",["612","613"],["614","615"],["592"],["593"],[],[],[],[],"'Console' is defined but never used.",["592"],["593"],[],[],[],[],"'postLoginRequest' is defined but never used.","'result' is defined but never used.",["592"],["593"],[],[],[],[],["592"],["593"],[],[],[],[],"'userNickname' is defined but never used.","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","'frame' is defined but never used.",["616","617"],["618","619"],["620","621"],["622","623"],["624","625"],"'DefaultRootState' is defined but never used.","'isAddBookPostDone' is assigned a value but never used.",["626","627"],["628","629"],"'history' is defined but never used.",["630","631"],"'AddBookPostInterface' is defined but never used.","'generateDummyPost' is defined but never used.","'addBookPostAPI' is defined but never used.","'getBookPostDetailViewAPI' is defined but never used.",{"messageId":"632","fix":"633","desc":"634"},{"messageId":"635","fix":"636","desc":"637"},"padding-line-between-statements","func-call-spacing",{"messageId":"632","fix":"638","desc":"634"},{"messageId":"635","fix":"639","desc":"637"},{"messageId":"632","fix":"640","desc":"634"},{"messageId":"635","fix":"641","desc":"637"},{"messageId":"632","fix":"642","desc":"634"},{"messageId":"635","fix":"643","desc":"637"},{"messageId":"632","fix":"644","desc":"634"},{"messageId":"635","fix":"645","desc":"637"},{"messageId":"632","fix":"646","desc":"634"},{"messageId":"635","fix":"647","desc":"637"},{"messageId":"632","fix":"648","desc":"634"},{"messageId":"635","fix":"649","desc":"637"},{"messageId":"632","fix":"650","desc":"634"},{"messageId":"635","fix":"651","desc":"637"},{"messageId":"632","fix":"652","desc":"634"},{"messageId":"635","fix":"653","desc":"637"},{"messageId":"632","fix":"654","desc":"634"},{"messageId":"635","fix":"655","desc":"637"},{"messageId":"632","fix":"656","desc":"634"},{"messageId":"635","fix":"657","desc":"637"},{"messageId":"632","fix":"658","desc":"634"},{"messageId":"635","fix":"659","desc":"637"},{"messageId":"632","fix":"660","desc":"634"},{"messageId":"635","fix":"661","desc":"637"},{"messageId":"632","fix":"662","desc":"634"},{"messageId":"635","fix":"663","desc":"637"},{"messageId":"632","fix":"664","desc":"634"},{"messageId":"635","fix":"665","desc":"637"},{"messageId":"632","fix":"666","desc":"634"},{"messageId":"635","fix":"667","desc":"637"},{"messageId":"632","fix":"668","desc":"634"},{"messageId":"635","fix":"669","desc":"637"},{"messageId":"632","fix":"670","desc":"634"},{"messageId":"635","fix":"671","desc":"637"},{"messageId":"632","fix":"672","desc":"634"},{"messageId":"635","fix":"673","desc":"637"},{"messageId":"632","fix":"674","desc":"634"},{"messageId":"635","fix":"675","desc":"637"},"suggestUnknown",{"range":"676","text":"677"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"676","text":"678"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"679","text":"677"},{"range":"679","text":"678"},{"range":"680","text":"677"},{"range":"680","text":"678"},{"range":"681","text":"677"},{"range":"681","text":"678"},{"range":"682","text":"677"},{"range":"682","text":"678"},{"range":"683","text":"677"},{"range":"683","text":"678"},{"range":"684","text":"677"},{"range":"684","text":"678"},{"range":"685","text":"677"},{"range":"685","text":"678"},{"range":"686","text":"677"},{"range":"686","text":"678"},{"range":"687","text":"677"},{"range":"687","text":"678"},{"range":"688","text":"677"},{"range":"688","text":"678"},{"range":"689","text":"677"},{"range":"689","text":"678"},{"range":"690","text":"677"},{"range":"690","text":"678"},{"range":"691","text":"677"},{"range":"691","text":"678"},{"range":"692","text":"677"},{"range":"692","text":"678"},{"range":"693","text":"677"},{"range":"693","text":"678"},{"range":"694","text":"677"},{"range":"694","text":"678"},{"range":"695","text":"677"},{"range":"695","text":"678"},{"range":"696","text":"677"},{"range":"696","text":"678"},{"range":"697","text":"677"},{"range":"697","text":"678"},[2178,2181],"unknown","never",[1839,1842],[3400,3403],[3300,3303],[4270,4273],[3307,3310],[235,238],[397,400],[1282,1285],[4249,4252],[667,670],[4285,4288],[4332,4335],[3192,3195],[3272,3275],[4776,4779],[11033,11036],[3260,3263],[5162,5165],[816,819]]