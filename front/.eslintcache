[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSaga.ts":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx":"12"},{"size":2543,"mtime":1613272432316,"results":"13","hashOfConfig":"14"},{"size":191,"mtime":1613346897167,"results":"15","hashOfConfig":"14"},{"size":1137,"mtime":1613272432292,"results":"16","hashOfConfig":"14"},{"size":343,"mtime":1613272432332,"results":"17","hashOfConfig":"14"},{"size":1565,"mtime":1613272432279,"results":"18","hashOfConfig":"14"},{"size":2098,"mtime":1613348407293,"results":"19","hashOfConfig":"14"},{"size":3737,"mtime":1613348443631,"results":"20","hashOfConfig":"14"},{"size":2247,"mtime":1613272432314,"results":"21","hashOfConfig":"14"},{"size":463,"mtime":1613346897111,"results":"22","hashOfConfig":"14"},{"size":1772,"mtime":1613347763857,"results":"23","hashOfConfig":"14"},{"size":253,"mtime":1613272432331,"results":"24","hashOfConfig":"14"},{"size":3604,"mtime":1613272432308,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"sthwp6",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts",["51","52","53","54"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\numberArrayUtill.ts",["55"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx",["56"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSaga.ts",["57","58","59","60"],"import { all, call, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  logoutAsync,\r\n  modifyProfileAsync,\r\n  postLoginAsync,\r\n  socialLoginAsync,\r\n} from '../../api/userApi';\r\nimport {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  getWishListRequest,\r\n  postModifyProfileRequest,\r\n  postAddWishListRequest,\r\n  postRemoveWishListRequest,\r\n  postModifyProfileRequestError,\r\n  postModifyProfileRequestSuccess,\r\n} from './userSlice';\r\nimport { modifyProfileInterface } from '../../interfaces/UserInterface';\r\n\r\nfunction* postLoginRequestSaga(action: { payload: { user: { email: string, passwd: string } } }) {\r\n  try {\r\n    const loginUser = yield call(postLoginAsync, action.payload.user);\r\n\r\n    if (loginUser.nickname) {\r\n      yield put({\r\n        type: postLoginRequestSuccess,\r\n        payload: loginUser,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: postLoginRequestError,\r\n        payload: '로그인 정보를 확인해주세요.',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postSocialLoginRequestSaga(action: { payload: { social: string } }) {\r\n  try {\r\n    yield call(socialLoginAsync, action.payload.social);\r\n\r\n    yield put({\r\n      type: postLoginRequestSuccess,\r\n      payload: 'social',\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postLogoutRequestSaga() {\r\n  try {\r\n    yield call(logoutAsync);\r\n\r\n    yield put({\r\n      type: postLogoutRequestSuccess,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLogoutRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postModifyProfileRequestSaga(action: {payload: {modifyProfile: modifyProfileInterface, modifyInputs: any, setModifInputs: any}}) {\r\n  try {\r\n    const result = yield call(modifyProfileAsync, action.payload.modifyProfile);\r\n    console.log(result);\r\n    if (result) {\r\n      yield put({\r\n        type: postModifyProfileRequestSuccess,\r\n        payload: action.payload.modifyProfile.nickname,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: postModifyProfileRequestError,\r\n        payload: '비밀번호 불일치',\r\n      });\r\n      action.payload.setModifInputs({\r\n        ...action.payload.modifyInputs,\r\n        passwd: {\r\n          ...action.payload.modifyInputs.passwd,\r\n          message: '비밀번호가 일치하지 않습니다.',\r\n          state: 'fail',\r\n          color: 'red',\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: postModifyProfileRequestError,\r\n      payload: error,\r\n    });\r\n    alert('서버 통신 에러');\r\n  }\r\n}\r\n\r\nfunction* postAddWishListRequestSaga() {\r\n  yield console.log('찜하기');\r\n}\r\n\r\nfunction* postRemoveWishListRequestSaga() {\r\n  yield console.log('찜 해제하기');\r\n}\r\n\r\nfunction* watchLogin(): Generator {\r\n  yield takeLatest(postLoginRequest, postLoginRequestSaga);\r\n  yield takeLatest(postSocialLoginRequest, postSocialLoginRequestSaga);\r\n  yield takeLatest(postLogoutRequest, postLogoutRequestSaga);\r\n}\r\n\r\nfunction* watchProfile(): Generator {\r\n  yield takeLatest(postModifyProfileRequest, postModifyProfileRequestSaga);\r\n}\r\n\r\nfunction* watchWishList(): Generator {\r\n  yield takeLatest(postAddWishListRequest, postAddWishListRequestSaga);\r\n  yield takeLatest(postRemoveWishListRequest, postRemoveWishListRequestSaga);\r\n}\r\n\r\nexport default function* loginSaga(): Generator {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchProfile),\r\n    fork(watchWishList),\r\n  ]);\r\n}\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts",["61","62","63","64","65","66"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\myArticleApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts",["67"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx",[],{"ruleId":"68","severity":1,"message":"69","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":24},{"ruleId":"68","severity":1,"message":"72","line":1,"column":39,"nodeType":"70","messageId":"71","endLine":1,"endColumn":52},{"ruleId":"68","severity":1,"message":"73","line":40,"column":38,"nodeType":"70","messageId":"71","endLine":40,"endColumn":44},{"ruleId":"68","severity":1,"message":"73","line":53,"column":34,"nodeType":"70","messageId":"71","endLine":53,"endColumn":40},{"ruleId":"74","severity":1,"message":"75","line":1,"column":26,"nodeType":"76","messageId":"77","endLine":1,"endColumn":42},{"ruleId":"78","severity":1,"message":"79","line":71,"column":7,"nodeType":"80","messageId":"81","endLine":71,"endColumn":26},{"ruleId":"68","severity":1,"message":"82","line":16,"column":3,"nodeType":"70","messageId":"71","endLine":16,"endColumn":21},{"ruleId":"83","severity":1,"message":"84","line":79,"column":112,"nodeType":"85","messageId":"86","endLine":79,"endColumn":115,"suggestions":"87"},{"ruleId":"83","severity":1,"message":"84","line":79,"column":133,"nodeType":"85","messageId":"86","endLine":79,"endColumn":136,"suggestions":"88"},{"ruleId":"78","severity":1,"message":"79","line":108,"column":5,"nodeType":"80","messageId":"81","endLine":108,"endColumn":22},{"ruleId":"68","severity":1,"message":"89","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":30},{"ruleId":"68","severity":1,"message":"90","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":24},{"ruleId":"68","severity":1,"message":"91","line":5,"column":45,"nodeType":"70","messageId":"71","endLine":5,"endColumn":59},{"ruleId":"68","severity":1,"message":"92","line":5,"column":61,"nodeType":"70","messageId":"71","endLine":5,"endColumn":85},{"ruleId":"68","severity":1,"message":"73","line":13,"column":24,"nodeType":"70","messageId":"71","endLine":13,"endColumn":59},{"ruleId":"68","severity":1,"message":"73","line":23,"column":30,"nodeType":"70","messageId":"71","endLine":23,"endColumn":59},{"ruleId":"68","severity":1,"message":"93","line":57,"column":12,"nodeType":"70","messageId":"71","endLine":57,"endColumn":15},"@typescript-eslint/no-unused-vars","'createSelector' is defined but never used.","Identifier","unusedVar","'PayloadAction' is defined but never used.","'action' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","no-alert","Unexpected alert.","CallExpression","unexpected","'getWishListRequest' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["94","95"],["96","97"],"'AddBookPostInterface' is defined but never used.","'addBookPostAPI' is defined but never used.","'getBookPostAPI' is defined but never used.","'getBookPostDetailViewAPI' is defined but never used.","'res' is defined but never used.",{"messageId":"98","fix":"99","desc":"100"},{"messageId":"101","fix":"102","desc":"103"},{"messageId":"98","fix":"104","desc":"100"},{"messageId":"101","fix":"105","desc":"103"},"suggestUnknown",{"range":"106","text":"107"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"106","text":"108"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"109","text":"107"},{"range":"109","text":"108"},[1940,1943],"unknown","never",[1961,1964]]