[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mypage\\MyPage.tsx":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx":"12","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx":"13","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx":"14","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx":"15","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\modifyProfile\\ModifyProfile.tsx":"16","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx":"17","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\Notice.tsx":"18","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\mockdata.ts":"19","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts":"20","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts":"21","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSlice.ts":"22","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSlice.ts":"23","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\interfaces\\mockdata.ts":"24","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\AddPostButton.tsx":"25","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx":"26","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts":"27","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx":"28","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx":"29","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts":"30","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts":"31","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx":"32","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts":"33","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSaga.ts":"34","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts":"35","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts":"36","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSaga.ts":"37","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSlice.ts":"38","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSaga.ts":"39","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSlice.ts":"40","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts":"41","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\AddPostPage.tsx":"42","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostView.tsx":"43"},{"size":894,"mtime":1612832857469,"results":"44","hashOfConfig":"45"},{"size":2543,"mtime":1612832857510,"results":"46","hashOfConfig":"45"},{"size":18021,"mtime":1613203555182,"results":"47","hashOfConfig":"45"},{"size":2247,"mtime":1612842318301,"results":"48","hashOfConfig":"45"},{"size":1414,"mtime":1612832857476,"results":"49","hashOfConfig":"45"},{"size":440,"mtime":1611271238964,"results":"50","hashOfConfig":"45"},{"size":4972,"mtime":1613011488002,"results":"51","hashOfConfig":"45"},{"size":2894,"mtime":1612842322914,"results":"52","hashOfConfig":"45"},{"size":569,"mtime":1612832857526,"results":"53","hashOfConfig":"45"},{"size":3604,"mtime":1612959993712,"results":"54","hashOfConfig":"45"},{"size":3373,"mtime":1612832857504,"results":"55","hashOfConfig":"45"},{"size":833,"mtime":1613011488005,"results":"56","hashOfConfig":"45"},{"size":2278,"mtime":1612959993696,"results":"57","hashOfConfig":"45"},{"size":1515,"mtime":1612959993692,"results":"58","hashOfConfig":"45"},{"size":1137,"mtime":1612863561538,"results":"59","hashOfConfig":"45"},{"size":5160,"mtime":1612912327051,"results":"60","hashOfConfig":"45"},{"size":1327,"mtime":1612921328553,"results":"61","hashOfConfig":"45"},{"size":4767,"mtime":1613206980787,"results":"62","hashOfConfig":"45"},{"size":1837,"mtime":1612932852492,"results":"63","hashOfConfig":"45"},{"size":455,"mtime":1612953250069,"results":"64","hashOfConfig":"45"},{"size":1508,"mtime":1613206759723,"results":"65","hashOfConfig":"45"},{"size":885,"mtime":1612832857470,"results":"66","hashOfConfig":"45"},{"size":924,"mtime":1612832857480,"results":"67","hashOfConfig":"45"},{"size":3079,"mtime":1612832857518,"results":"68","hashOfConfig":"45"},{"size":1431,"mtime":1612832857501,"results":"69","hashOfConfig":"45"},{"size":4775,"mtime":1612832857473,"results":"70","hashOfConfig":"45"},{"size":987,"mtime":1612832857460,"results":"71","hashOfConfig":"45"},{"size":2305,"mtime":1612849413574,"results":"72","hashOfConfig":"45"},{"size":1565,"mtime":1612832857477,"results":"73","hashOfConfig":"45"},{"size":253,"mtime":1612832857527,"results":"74","hashOfConfig":"45"},{"size":1466,"mtime":1612832857461,"results":"75","hashOfConfig":"45"},{"size":782,"mtime":1612832857507,"results":"76","hashOfConfig":"45"},{"size":343,"mtime":1612832857529,"results":"77","hashOfConfig":"45"},{"size":851,"mtime":1612832857479,"results":"78","hashOfConfig":"45"},{"size":494,"mtime":1613203555209,"results":"79","hashOfConfig":"45"},{"size":1380,"mtime":1613203555180,"results":"80","hashOfConfig":"45"},{"size":3666,"mtime":1613203555186,"results":"81","hashOfConfig":"45"},{"size":5786,"mtime":1612912327048,"results":"82","hashOfConfig":"45"},{"size":872,"mtime":1613203555196,"results":"83","hashOfConfig":"45"},{"size":1376,"mtime":1613205741949,"results":"84","hashOfConfig":"45"},{"size":358,"mtime":1612832857524,"results":"85","hashOfConfig":"45"},{"size":459,"mtime":1612832857467,"results":"86","hashOfConfig":"45"},{"size":1308,"mtime":1612832857475,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"sthwp6",{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"143"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"90"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts",[],["199","200","201","202","203","204"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts",["205","206","207","208"],"import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { articleInterface } from '../../interfaces/PostList.interface';\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    bookPost: [],\n    hasMorePost: true,\n    filtering: { division: 'sales', category: '' },\n\n    isLoadBookPostLoading: false,\n    isLoadBookPostDone: false,\n    isLoadBookPostError: false,\n\n    isLoadScrollBookPostLoading: false,\n    isLoadScrollPostDone: false,\n    isLoadScrollPostError: null,\n\n    isDeleteBookPostLoading: false,\n    isDeleteBookPostDone: false,\n    isDeleteBookPostError: null,\n  },\n  reducers: {\n    loadBookPostRequest(state, action) {\n      state.isLoadBookPostLoading = true;\n      state.isLoadScrollBookPostLoading = false;\n      state.hasMorePost = true;\n      state.filtering.division = action.payload.division;\n      state.filtering.category = action.payload.category;\n    },\n    loadBookPostSuccess(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostDone = true;\n      state.bookPost = action.payload;\n    },\n    loadBookPostError(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostError = action.payload.error;\n    },\n    loadScrollBookPostRequest(state, action) {\n      state.isLoadScrollBookPostLoading = true;\n    },\n    loadScrollBookPostSuccess(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostDone = true;\n      state.bookPost = state.bookPost.concat(action.payload);\n      state.hasMorePost = state.bookPost.length === 10;\n    },\n    loadScrollBookPostError(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostError = action.payload.error;\n    },\n    deleteBookPostRequest(state, action) {\n      state.isDeleteBookPostLoading = true;\n    },\n    deleteBookPostSuccess(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostDone = true;\n      state.bookPost.filter((post:articleInterface) => post.articleId !== action.payload);\n    },\n    deleteBookPostError(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  loadBookPostRequest,\n  loadBookPostSuccess,\n  loadBookPostError,\n  loadScrollBookPostRequest,\n  loadScrollBookPostSuccess,\n  loadScrollBookPostError,\n  deleteBookPostRequest,\n  deleteBookPostSuccess,\n  deleteBookPostError,\n} = postSlice.actions;\n\nexport default postSlice.reducer;\n",["209","210","211","212","213","214"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx",["215","216","217","218","219","220","221"],"import React, { useRef, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport DaumPostCode, { AddressData } from 'react-daum-postcode';\nimport { emailCertificationAsync, emailDuplicationAsync, joinRequestAsync, nicknameDuplicationAsync } from '../../api/joinApi';\n\nconst Positional = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  font-size: 4.5vw;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n  }\n`;\n\nconst Header = styled.header`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  border-bottom: 1px solid #e0e0e0;\n  padding: 0.8em 0;\n  & h1 {\n    font-size: 4.5vw;\n    font-weight: 400;\n  }\n  @media screen and (min-width: 460px) {\n    width: 460px;\n    & h1 {\n    font-size: 20px;\n  }\n  }\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 1.5em 0;\n  display: flex;\n  justify-content: center;\n  overflow: auto;\n`;\n\nconst BackLink = styled(Link)`\n  position: absolute;\n  left: 0.5em;\n`;\n\nconst BackLogo = styled.img`\n  width: 1.8em;\n  height: 1.8em;\n`;\n\nconst JoinForm = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  & > div:last-child {\n    margin-bottom: 1.5em;\n  }\n  @media screen and (min-width: 460px) {\n    width: 414px;\n  }\n  `;\n\nconst JoinInputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1em;\n  & label {\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  @media screen and (min-width: 460px) {\n    & label {\n      font-size: 16.1px;\n    }\n  }\n`;\n\nconst JoinInput = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  padding: 0.5em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 4vw;\n  background: none;\n  border: none;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst CheckLogo = styled.img`\n  width: 1.2em;\n  height: 1.2em;\n  flex-grow: 1;\n  flex-shrink: 0;\n`;\n\nconst CertificationRequest = styled.button`\n  position: absolute;\n  right: 0;\n  font-size: 3vw;\n  font-weight: bold;\n  padding: 1em 1.5em;\n  background: ;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 13.8px;\n  }\n`;\n\nconst CertificationBox = styled.div`\n  display: none;\n  flex-direction: column;\n  margin-top: 0.5em;\n`;\n\nconst CertificationInputBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CertificationInput = styled.input`\n  width: 10em;\n  font-size: 4vw;\n  padding: 0.5em 1em;\n  margin-right: 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\nconst CertificationButton = styled.button`\n  font-size: 4vw;\n  font-weight: bold;\n  padding: 0.5em 1em;\n  background: ;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  outline: none;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst InputMessage = styled.p`\n  font-size: 2vw;\n  margin-top: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 9.2px;\n  }\n`;\n\nconst SearchModal = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  background: #5c5c5c55;\n`;\n\nconst CloseButton = styled.img`\n  position: absolute;\n  width: 1.5em;\n  height: 1.5em;\n  top: 0.4em;\n  right: 0.4em;\n  font-size: 6vw;\n  @media screen and (min-width: 460px) {\n    font-size: 27.6px;\n  }\n`;\n\nconst AddressFormBox = styled.div`\n  margin-bottom: 2em;\n  & label {\n    display: block;\n    font-size: 3.5vw;\n    margin-bottom: 0.5em;\n  }\n  & ${JoinInput}:not(:last-child) {\n    margin-bottom: 1em;\n  }\n  & ${JoinInput} {\n    padding: 0.5em;\n  }\n\n  @media screen and (min-width: 460px) {\n    & label {\n      font-size: 16.1px;\n    }\n  }\n`;\n\nconst AddressSearchBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1em;\n`;\nconst AddressSearchInput = styled.input`\n  width: 10em;\n  padding: 0.6em 0.5em;\n  background: #f9f9f9;\n  box-shadow: 3px 3px 10px #c4c4c4;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  margin-right: 0.5em;\n  font-size: 4vw;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\nconst AddressSearchButton = styled.button`\n  padding: 0.7em;\n  background: ;\n  color: #fff;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  font-size: 3.5vw;\n  @media screen and (min-width: 460px) {\n    font-size: 16.1px;\n  }\n`;\n\nconst AgreementBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90vw;\n  margin-bottom: 2.5em;\n  @media screen and (min-width: 460px) {\n    width: 414px;\n  }\n`;\nconst AllAgreeBox = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 4.5vw;\n  font-weight: bold;\n  margin-bottom: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 20px;\n  }\n`;\nconst AgreeCheckBox = styled.img`\n  width: 1.5em;\n  height: 1.5em;\n  margin-right: 0.5em;\n`;\nconst AgreeText = styled.div`\n  & span {\n    color: ;\n  }\n`;\n\nconst SubAgreeBox = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-size: 4vw;\n  margin-bottom: 1em;\n  @media screen and (min-width: 460px) {\n    font-size: 18.4px;\n  }\n`;\n\nconst AgreeDetail = styled.img`\n  width: 1em;\n  height: 1em;\n  position: absolute;\n  right: 0;\n  transform: rotate(-90deg);\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst JoinButton = styled.button`\n  width: 80vw;\n  font-size: 4.5vw;\n  padding: 0.8em 0;\n  text-align: center;\n  color: #fff;\n  background: ;\n  border: none;\n  outline: none;\n  margin-bottom: 1.5em;\n  @media screen and (min-width: 460px) {\n    width: 368px;\n    font-size: 20px;\n  }\n`;\n\nfunction Join():JSX.Element {\n  const initialInputs = {\n    email: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n      duplicationCheck: false,\n      code: '',\n      certificationCheck: false,\n    },\n    nickname: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwd: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    passwdCheck: {\n      value: '',\n      state: 'none',\n      message: '',\n      color: 'red',\n    },\n    address: {\n      zipcode: '',\n      baseAddress: '',\n      detailAddress: '',\n    },\n    agreement: {\n      all: false,\n      agree1: false,\n      agree2: false,\n      agree3: false,\n    },\n  };\n\n  const [showsModal, setShowsModal] = useState(false);\n  const [inputs, setInputs] = useState(initialInputs);\n  const emailCertificationBox = useRef<HTMLInputElement>(null);\n  const history = useHistory();\n\n  const {\n    email,\n    nickname,\n    passwd,\n    passwdCheck,\n    address,\n    agreement,\n  } = inputs;\n\n  const inputChange = (name: 'email' | 'nickname' | 'passwd' | 'passwdCheck', value: string, state: 'check' | 'fail' | 'none', message: string, color: 'red' | 'blue') => {\n    setInputs({\n      ...inputs,\n      [name]: {\n        ...inputs[name],\n        value,\n        state,\n        message,\n        color,\n      },\n    });\n  };\n\n  const onChangeText = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        if (/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '이메일 형식이 아닙니다.', 'red');\n        }\n        break;\n      case 'nickname':\n        if (value.length < 4) {\n          inputChange(name, value, 'fail', '닉네임을 4자 이상 입력해주세요.', 'red');\n        } else {\n          try {\n            await nicknameDuplicationAsync(value);\n            inputChange(name, value, 'check', '', 'blue');\n          } catch {\n            inputChange(name, value, 'fail', '이미 사용중인 닉네임입니다.', 'red');\n          }\n        }\n        break;\n      case 'passwd':\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.', 'red');\n        }\n        break;\n      case 'passwdCheck':\n        if (value === passwd.value) {\n          inputChange(name, value, 'check', '', 'blue');\n        } else {\n          inputChange(name, value, 'fail', '비밀번호가 일치하지 않습니다.', 'red');\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onClickEmailDuplication = async () => {\n    try {\n      await emailDuplicationAsync(email.value);\n      setInputs({\n        ...inputs,\n        email: {\n          ...email,\n          duplicationCheck: true,\n        },\n      });\n      if (emailCertificationBox.current != null) {\n        emailCertificationBox.current.style.display = 'flex';\n      }\n    } catch {\n      setInputs({\n        ...inputs,\n        email: {\n          ...email,\n          message: '이미 사용중인 이메일입니다.',\n          color: 'red',\n          duplicationCheck: false,\n        },\n      });\n    }\n  };\n\n  const onChangeCode = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      email: {\n        ...email,\n        code: e.target.value,\n      },\n    });\n  };\n\n  const onClickEmailCertification = async () => {\n    try {\n      await emailCertificationAsync(email.value, email.code);\n      setInputs({\n        ...inputs,\n        email: {\n          ...email,\n          message: '인증이 완료되었습니다.',\n          color: 'blue',\n          certificationCheck: true,\n        },\n      });\n      if (emailCertificationBox.current != null) {\n        emailCertificationBox.current.style.display = 'none';\n      }\n    } catch {\n      setInputs({\n        ...inputs,\n        email: {\n          ...email,\n          message: '코드를 확인해주세요.',\n          color: 'red',\n          certificationCheck: false,\n        },\n      });\n    }\n  };\n\n  const onCompleteAddressSelect = (data: AddressData) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        zipcode: data.zonecode,\n        baseAddress: data.jibunAddress,\n      },\n    });\n    setShowsModal(false);\n  };\n\n  const onChangeDetailAddress = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputs({\n      ...inputs,\n      address: {\n        ...address,\n        detailAddress: e.target.value,\n      },\n    });\n  };\n\n  const onClickAgree = (agree: 'all' | 'agree1' | 'agree2' | 'agree3') => {\n    if (agree === 'all') {\n      setInputs({\n        ...inputs,\n        agreement: {\n          all: !agreement.all,\n          agree1: !agreement.all,\n          agree2: !agreement.all,\n          agree3: !agreement.all,\n        },\n      });\n    } else {\n      const resultArr: boolean[] = [];\n\n      Object.keys(agreement).forEach((key) => {\n        if (key !== 'all' && (key === 'agree1' || key === 'agree2' || key === 'agree3')) {\n          if (key === agree) {\n            resultArr.push(!agreement[key]);\n          } else {\n            resultArr.push(agreement[key]);\n          }\n        }\n      });\n\n      if (agree === 'agree1' || agree === 'agree2' || agree === 'agree3') {\n        setInputs({\n          ...inputs,\n          agreement: {\n            ...agreement,\n            all: resultArr.every((value) => value === true),\n            [agree]: !agreement[agree],\n          },\n        });\n      }\n    }\n  };\n\n  const onsubmitJoin = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!email.certificationCheck) {\n      alert('이메일 인증을 진행해주세요.');\n    } else if (nickname.state !== 'check') {\n      alert('닉네임이 중복되었거나 형식이 맞지 않습니다.');\n    } else if (passwd.state !== 'check') {\n      alert('비밀번호 형식이 맞지 않습니다.');\n    } else if (passwdCheck.state !== 'check') {\n      alert('비밀번호가 일치하지 않습니다.');\n    } else if (address.zipcode === '') {\n      alert('주소를 입력해주세요.');\n    } else if (!agreement.agree1 || !agreement.agree2) {\n      alert('필수 약관 항목에 동의해주세요.');\n    } else {\n      await joinRequestAsync(email.value, nickname.value, passwd.value, `${address.baseAddress} ${address.detailAddress}`);\n      alert('회원가입이 완료되었습니다.');\n      history.push('/');\n    }\n  };\n\n  return (\n    <Positional>\n      <Header>\n        <BackLink to=\"/\">\n          <BackLogo src=\"/images/icons/back.png\" />\n        </BackLink>\n        <h1>회원가입</h1>\n      </Header>\n      <Main>\n        <JoinForm method=\"post\" onSubmit={onsubmitJoin}>\n          <JoinInputBox>\n            <label htmlFor=\"email\">이메일</label>\n            <JoinInput>\n              <Input required type=\"email\" id=\"email\" name=\"email\" onChange={onChangeText} value={email.value} disabled={email.duplicationCheck} />\n              <CheckLogo src={`/images/icons/${email.state}.png`} />\n              <CertificationRequest style={{ display: email.state === 'check' && !email.certificationCheck ? 'block' : 'none' }} type=\"button\" onClick={onClickEmailDuplication}>인증요청</CertificationRequest>\n            </JoinInput>\n            <CertificationBox ref={emailCertificationBox}>\n              <CertificationInputBox>\n                <CertificationInput name=\"certification\" onChange={onChangeCode} value={email.code} />\n                <CertificationButton type=\"button\" onClick={onClickEmailCertification}>확인</CertificationButton>\n              </CertificationInputBox>\n            </CertificationBox>\n            <InputMessage style={{ color: email.color }}>{email.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"nickname\">닉네임</label>\n            <JoinInput>\n              <Input required type=\"text\" maxLength={10} id=\"nickname\" name=\"nickname\" onChange={onChangeText} value={nickname.value} />\n              <CheckLogo src={`/images/icons/${nickname.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: nickname.color }}>{nickname.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwd\">비밀번호</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwd\" name=\"passwd\" onChange={onChangeText} value={passwd.value} />\n              <CheckLogo src={`/images/icons/${passwd.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwd.color }}>{passwd.message}</InputMessage>\n          </JoinInputBox>\n          <JoinInputBox>\n            <label htmlFor=\"passwdCheck\">비밀번호 확인</label>\n            <JoinInput>\n              <Input maxLength={20} required type=\"password\" id=\"passwdCheck\" name=\"passwdCheck\" onChange={onChangeText} value={passwdCheck.value} />\n              <CheckLogo src={`/images/icons/${passwdCheck.state}.png`} />\n            </JoinInput>\n            <InputMessage style={{ color: passwdCheck.color }}>{passwdCheck.message}</InputMessage>\n          </JoinInputBox>\n          <AddressFormBox>\n            <label>주소</label>\n            <AddressSearchBox>\n              <AddressSearchInput disabled value={address.zipcode} />\n              <AddressSearchButton type=\"button\" onClick={() => setShowsModal(true)}>우편번호 검색</AddressSearchButton>\n            </AddressSearchBox>\n            <JoinInput>\n              <Input type=\"text\" disabled placeholder=\"상세 주소\" value={address.baseAddress} />\n            </JoinInput>\n            <JoinInput>\n              <Input type=\"text\" placeholder=\"나머지 주소\" onChange={onChangeDetailAddress} value={address.detailAddress} />\n            </JoinInput>\n          </AddressFormBox>\n          <AgreementBox>\n            <AllAgreeBox onClick={() => onClickAgree('all')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.all ? 'check' : 'check_default'}.png`} />\n              <AgreeText>전체 약관에 동의합니다.</AgreeText>\n            </AllAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree1')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree1 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>서비스 이용약관 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree2')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree2 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>개인정보 처리방침 <span>(필수)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n            <SubAgreeBox onClick={() => onClickAgree('agree3')}>\n              <AgreeCheckBox src={`/images/icons/${agreement.agree3 ? 'check' : 'check_default'}.png`} />\n              <AgreeText>이벤트 마케팅 수신 동의 <span>(선택)</span></AgreeText>\n              <AgreeDetail src=\"/images/icons/back.png\" />\n            </SubAgreeBox>\n          </AgreementBox>\n          <ButtonWrapper>\n            <JoinButton type=\"submit\">회원가입</JoinButton>\n          </ButtonWrapper>\n        </JoinForm>\n      </Main>\n      <SearchModal style={{ display: showsModal ? 'flex' : 'none' }}>\n        <CloseButton src=\"/images/icons/x.png\" onClick={() => setShowsModal(false)} />\n        <DaumPostCode onComplete={onCompleteAddressSelect} />\n      </SearchModal>\n    </Positional>\n  );\n}\n\nexport default Join;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts",["222","223","224","225","226","227"],"import { PayloadAction } from '@reduxjs/toolkit';\nimport { all, takeLatest, put, fork, call, throttle, select } from 'redux-saga/effects';\nimport { AddBookPostInterface } from '../../interfaces/PostList.interface';\nimport { generateDummyPost } from '../../interfaces/mockdata';\nimport { addBookPostAPI, deleteBookPostAPI, getBookPostAPI, getBookPostDetailViewAPI } from '../../api/postBookApi';\nimport { loadBookPostRequest, loadBookPostSuccess, loadBookPostError,\n  loadScrollBookPostRequest, loadScrollBookPostSuccess, loadScrollBookPostError, deleteBookPostSuccess, deleteBookPostError, deleteBookPostRequest } from './postSlice';\n\ninterface loadBookPost {\n  division: 'purchase' | 'sale',\n  categoty?: string\n}\nfunction* loadBookPost(action: PayloadAction<loadBookPost>) {\n  try {\n    // const result = yield call(getBookPostAPI, action.payload.division);\n    const result = generateDummyPost(10);\n    console.log(result);\n    yield put(loadBookPostSuccess(result));\n  } catch (error) {\n    yield put(loadBookPostError({ error: error.response.data }));\n  }\n}\nfunction* loadScrollBookPost(action: PayloadAction<number>) {\n  try {\n    const { filtering } = yield select((state) => state.postSlice);\n    // const result = yield call(getBookPostAPI, filtering, action.payload);\n    console.log(filtering);\n    const result = generateDummyPost(10);\n    console.log(result);\n    yield put(loadScrollBookPostSuccess(result));\n  } catch (error) {\n    yield put(loadScrollBookPostError({ error: error.response.data }));\n  }\n}\nfunction* deleteBookPost(action: PayloadAction<number>) {\n  try {\n    yield call(deleteBookPostAPI, action.payload);\n    yield put(deleteBookPostSuccess(action.payload));\n  } catch (error) {\n    yield put(deleteBookPostError({ error: error.response.data }));\n  }\n}\nfunction* watchLoadBookPost() {\n  yield takeLatest(loadBookPostRequest, loadBookPost);\n}\nfunction* watchloadScrollBookPost() {\n  yield throttle(2000, loadScrollBookPostRequest, loadScrollBookPost);\n}\nfunction* watchdeleteBookPost() {\n  yield takeLatest(deleteBookPostRequest, deleteBookPost);\n}\n\nexport default function* postSaga():Generator {\n  yield all([\n    fork(watchloadScrollBookPost),\n    fork(watchLoadBookPost),\n    fork(watchdeleteBookPost),\n  ]);\n}\n",["228","229","230","231","232","233"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx",[],["234","235","236","237","238","239"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts",["240"],"import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",["241","242","243","244","245","246"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mypage\\MyPage.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx",["247"],"import React from 'react';\nimport { List, AutoSizer } from 'react-virtualized';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport CategoryFormatUtil from '../../utils/categoryFormatUtil';\nimport { loadScrollBookPostRequest } from './postSlice';\n\ninterface IndexInterface {\n  index: number;\n  style?: any;\n}\ninterface OnScrollParams {\n  clientHeight: number;\n  clientWidth: number;\n  scrollHeight: number;\n  scrollLeft: number;\n  scrollTop: number;\n  scrollWidth: number;\n}\nconst ListWrapper = styled.div`\n  display: flex;\n  max-width: 100%;\n  flex-wrap: wrap;\n  margin-top: 150px;\n  overflow: hidden;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 200px;\n  flex-basis: 50%;\n  padding:10px;\n  border-top: 1px solid #e8e8e8;\n  & img {\n    width: 150px;\n    height: 150px;\n    border-radius: 10px;\n  }\n`;\nconst ContentExplanation = styled.div`\n  padding: 0px 20px;\n  & h3 {\n    overflow:hidden;\n    padding: 10px 0px;\n  }\n`;\nconst Categoty = styled.div`\n  font-size: 9px;\n`;\nfunction InfiniteScrollList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, hasMorePost, isLoadScrollBookPostLoading } = useSelector((state) => state.postSlice);\n\n  const scrollListener = (params:OnScrollParams) => {\n    if (params.scrollTop + params.clientHeight >= params.scrollHeight - 300) {\n      console.log(hasMorePost, !isLoadScrollBookPostLoading);\n      if (hasMorePost && !isLoadScrollBookPostLoading) {\n        const LastId = bookPost[bookPost.length - 1].articleId;\n        dispatch(loadScrollBookPostRequest(LastId));\n      }\n    }\n  };\n\n  const rowRanderer = ({ index, style }: IndexInterface) => {\n    const post = bookPost[index];\n    return (\n      <div style={style}>\n        <NavLink to={`post/${post.articleId}`}>\n          <Content key={post.articleId}>\n            <img src={post.image} alt=\"\" />\n            <ContentExplanation>\n              <Categoty>{CategoryFormatUtil(post.category)}</Categoty>\n              <h3>{post.title}</h3>\n              <h3>{post.tprice}원</h3>\n            </ContentExplanation>\n          </Content>\n        </NavLink>\n      </div>\n    );\n  };\n\n  return (\n    <ListWrapper>\n      <AutoSizer disableHeight>\n        {({ width }) => (\n          <List\n            rowCount={bookPost.length} // 항목의 개수\n            height={800} // 실제 렌더링 되는 높이범위\n            rowHeight={200} // 항목의높이\n            width={width} // 항목의 너비\n            rowRenderer={rowRanderer} // 항목렌더링할때쓰는 함수\n            onScroll={scrollListener} // scroll 함수\n            overscanRowCount={2} // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\n          />\n        )}\n      </AutoSizer>\n    </ListWrapper>\n  );\n}\n\nexport default InfiniteScrollList;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts",["248"],"interface categoryInterface {\n  cid: number, oneDepth: string, twoDepth: string, threeDepth: string, fourDepth: string, fiveDepth: string,\n}\nconst CategoryFormatUtil = (category: categoryInterface) => {\n  const cate = [category.oneDepth, category.twoDepth, category.threeDepth, category.fourDepth, category.fiveDepth];\n  const newCate = [];\n  for (let i = 0; i < cate.length; i++) {\n    if (cate[i] === '') {\n      return newCate.join('>');\n    }\n    newCate.push(cate[i]);\n  }\n  console.log(newCate);\n  return newCate.join('>');\n};\n\nexport default CategoryFormatUtil;\n",["249","250","251","252","253","254"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\Header.tsx",[],["255","256","257","258","259","260"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\index.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx",["261","262"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\Login.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\SocialLogin.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\modifyProfile\\ModifyProfile.tsx",[],["263","264","265","266","267","268"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\App.tsx",[],["269","270","271","272","273","274"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\Notice.tsx",["275"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\mockdata.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootReducers.ts",[],["276","277","278","279","280","281"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\noticeApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSlice.ts",["282","283"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst addPostSlice = createSlice({\n  name: 'addPost',\n  initialState: {\n    isAddBookPostLoading: false,\n    isAddBookPostDone: false,\n    isAddBookPostError: null,\n  },\n  reducers: {\n    addBookPostRequest(state, action) {\n      state.isAddBookPostLoading = true;\n      state.isAddBookPostDone = false;\n    },\n    addBookPostSuccess(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = true;\n      // state.bookPost.unshift(dummyBookPost(action.payload));\n    },\n    addBookPostError(state, action) {\n      state.isAddBookPostLoading = false;\n      state.isAddBookPostDone = false;\n      state.isAddBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  addBookPostRequest,\n  addBookPostSuccess,\n  addBookPostError,\n} = addPostSlice.actions;\n\nexport default addPostSlice.reducer;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSlice.ts",["284"],"import { createSlice } from '@reduxjs/toolkit';\n\nconst detailViewSlice = createSlice({\n  name: 'detailView',\n  initialState: {\n    detailBookPost: null,\n    isLoadDetailBookPostLoading: false,\n    isLoadDetailBookPostDone: false,\n    isLoadDetailBookPostError: null,\n  },\n  reducers: {\n    loadDetailBookPostRequest(state, action) {\n      state.isLoadDetailBookPostLoading = true;\n    },\n    loadDetailBookPostSuccess(state, action) {\n      state.isLoadDetailBookPostLoading = false;\n      state.isLoadDetailBookPostDone = true;\n      state.detailBookPost = action.payload;\n    },\n    loadDetailBookPostError(state, action) {\n      state.isLoadDetailBookPostLoading = false;\n      state.isLoadDetailBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  loadDetailBookPostRequest,\n  loadDetailBookPostSuccess,\n  loadDetailBookPostError,\n} = detailViewSlice.actions;\n\nexport default detailViewSlice.reducer;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\interfaces\\mockdata.ts",["285","286"],"import faker from 'faker';\nimport { AddBookPostInterface, PostListInterface, articleDetailInterface } from './PostList.interface';\n\nexport const dummyAddBookPost = (data: AddBookPostInterface) => ({\n  articleId: faker.random.number(),\n  memberId: data.memberId, // 내가 넣어줄 값\n  rprice: data.rprice, // 내가 넣어줄 값\n  writeDate: new Date(),\n  progress: data.progress, // 내가 넣어줄 값\n  title: data.title, // 내가 넣어줄 값\n  thumnail: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNEqDnzERi5Aa-o2Qk7r-GmibgwZWM0wV4utkTJZBRNULFk8KwNzUKtPXvgPE&usqp=CAc', // 내가 넣어줄 값\n  images: [], // 내가 넣어줄 값\n  content: data.content, // 내가 넣어줄 값\n  category: data.category, // 내가 넣어줄 값\n  tprice: data.tprice, // 내가 넣어줄 값\n  division: data.division, // 내가 넣어줄 값\n});\n\nexport const dummyPost: AddBookPostInterface = {\n  memberId: 3, // 작성자\n  rprice: 13000, // 판매가격\n  tprice: 16000, // 원래가격\n  content: '두번만 읽은 책입니다', // 내용\n  progress: 'POSTING', // 게시글 상태\n  title: '진격의거인', // 책제목\n  thumnail: 'http://image.yes24.com/momo/TopCate3025/MidCate007/302460746.jpg',\n  images: ['https://blog.kakaocdn.net/dn/28NKv/btqFjFQr9pe/n0TKtuuV3zmBSTF1olKqIK/img.jpg', 'https://www.hanbit.co.kr/data/editor/20200706083421_vfsgqsvu.jpg', 'https://www.hanbit.co.kr/data/editor/20200705234134_skcbzgms.jpg'],\n  category: '국내도서>자기계발', // 카테고리 키\n  division: 'SALE', // 구매 판매 구분\n};\n\nexport const dummyBookPost: PostListInterface = {\n  data: [],\n};\nexport const dummyDetailBookPost: articleDetailInterface = {\n  articleId: 1,\n  memberId: 2,\n  countDAO: {\n    chatCount: 10,\n    countId: 2,\n    views: 3,\n    wishCount: 5,\n  },\n  title: '이것이 MYSQL 이다',\n  content: '한번밖에 안읽은 책입니다. 상태 깨끗하고요.',\n  writeDate: new Date('2020-10-11'),\n  rprice: 13000,\n  tprice: 28000,\n  progress: 'POSTING',\n  category: {\n    cid: 2435, oneDepth: '국내도서', twoDepth: '자기계발', threeDepth: 'IT서적', fourDepth: '', fiveDepth: '',\n  },\n  division: 'SALE',\n  thumbnail: 'http://image.yes24.com/momo/TopCate3025/MidCate007/302460746.jpg',\n  image: ['https://blog.kakaocdn.net/dn/28NKv/btqFjFQr9pe/n0TKtuuV3zmBSTF1olKqIK/img.jpg', 'https://www.hanbit.co.kr/data/editor/20200706083421_vfsgqsvu.jpg', 'https://www.hanbit.co.kr/data/editor/20200705234134_skcbzgms.jpg'],\n};\nexport const generateDummyPost = (Postnumber: number) => Array(Postnumber).fill(0).map(() => (\n  {\n    articleId: faker.random.number(),\n    countDAO: {\n      chatCount: 2,\n      countId: 2,\n      views: 2,\n      wishCount: 3,\n    },\n    title: faker.commerce.productName(),\n    writeDate: new Date(),\n    tprice: 20000,\n    progress: 'POSTING',\n    category: {\n      cid: faker.random.number(), oneDepth: '국내도서', twoDepth: '소설/시/희곡', threeDepth: '', fourDepth: '', fiveDepth: '',\n    },\n    image: faker.random.image(),\n    nickname: faker.name.findName(),\n    market: null,\n  }\n));\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\AddPostButton.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts",[],["287","288","289","290","291","292"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx",["293","294"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\countDaoUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\postBookApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\PostList.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\detailViewSaga.ts",["295","296"],"import { PayloadAction } from '@reduxjs/toolkit';\nimport { all, takeLatest, put, fork, call } from 'redux-saga/effects';\nimport { loadDetailBookPostRequest, loadDetailBookPostSuccess, loadDetailBookPostError } from './detailViewSlice';\n\nimport { dummyDetailBookPost } from '../../interfaces/mockdata';\n\nfunction* loadDetailBookPost(action: PayloadAction<number>) {\n  try {\n    // const result = yield call(getBookPostDetailViewAPI, action.payload);\n    const result = dummyDetailBookPost;\n    yield put(loadDetailBookPostSuccess(result));\n  } catch (error) {\n    yield put(loadDetailBookPostError({ error: error.response.data }));\n  }\n}\n\nfunction* watchloadDetailBookPost() {\n  yield takeLatest(loadDetailBookPostRequest, loadDetailBookPost);\n}\n\nexport default function* postSaga():Generator {\n  yield all([\n    fork(watchloadDetailBookPost),\n  ]);\n}\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\rootSaga.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\userApi.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSaga.ts",["297","298","299"],"import { all, call, fork, put, takeLatest, getContext } from 'redux-saga/effects';\r\nimport {\r\n  logoutAsync,\r\n  modifyProfileAsync,\r\n  postLoginAsync,\r\n  socialLoginAsync,\r\n} from '../../api/userApi';\r\nimport {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  postModifyProfileRequest,\r\n  getWishListRequest,\r\n  postAddWishListRequest,\r\n  postRemoveWishListRequest,\r\n  getMySaleArticleRequest,\r\n  getMyPurchaseArticleRequest,\r\n  postModifyProfileRequestError,\r\n  postModifyProfileRequestSuccess,\r\n} from './userSlice';\r\nimport { modifyProfileInterface } from '../../interfaces/UserInterface';\r\n\r\nfunction* postLoginRequestSaga(action: { payload: { user: { email: string, passwd: string }, history: any } }) {\r\n  try {\r\n    const loginUser = yield call(postLoginAsync, action.payload.user);\r\n\r\n    yield put({\r\n      type: postLoginRequestSuccess,\r\n      payload: loginUser,\r\n    });\r\n\r\n    action.payload.history.push('/home');\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error,\r\n    });\r\n    alert('로그인 정보를 확인하세요.');\r\n  }\r\n}\r\n\r\nfunction* postSocialLoginRequestSaga(action: { payload: { social: string } }) {\r\n  try {\r\n    yield call(socialLoginAsync, action.payload.social);\r\n\r\n    yield put({\r\n      type: postLoginRequestSuccess,\r\n      payload: 'social',\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postLogoutRequestSaga() {\r\n  try {\r\n    yield call(logoutAsync);\r\n\r\n    yield put({\r\n      type: postLogoutRequestSuccess,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLogoutRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postModifyProfileRequestSaga(action: {payload: modifyProfileInterface}) {\r\n  try {\r\n    yield call(modifyProfileAsync, action.payload);\r\n\r\n    yield put({\r\n      type: postModifyProfileRequestSuccess,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postModifyProfileRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* getWishListRequestSaga() {\r\n  yield console.log('찜목록 불러오기');\r\n}\r\n\r\nfunction* postAddWishListRequestSaga() {\r\n  yield console.log('찜하기');\r\n}\r\n\r\nfunction* postRemoveWishListRequestSaga() {\r\n  yield console.log('찜 해제하기');\r\n}\r\n\r\nfunction* getMySaleArticleRequestSaga() {\r\n  yield console.log('내 판매글 불러오기');\r\n}\r\n\r\nfunction* getMyPurchaseArticleRequestSaga() {\r\n  yield console.log('내 구매글 불러오기');\r\n}\r\n\r\nfunction* watchLogin(): Generator {\r\n  yield takeLatest(postLoginRequest, postLoginRequestSaga);\r\n  yield takeLatest(postSocialLoginRequest, postSocialLoginRequestSaga);\r\n  yield takeLatest(postLogoutRequest, postLogoutRequestSaga);\r\n}\r\n\r\nfunction* watchProfile(): Generator {\r\n  yield takeLatest(postModifyProfileRequest, postModifyProfileRequestSaga);\r\n}\r\n\r\nfunction* watchWishList(): Generator {\r\n  yield takeLatest(getWishListRequest, getWishListRequestSaga);\r\n  yield takeLatest(postAddWishListRequest, postAddWishListRequestSaga);\r\n  yield takeLatest(postRemoveWishListRequest, postRemoveWishListRequestSaga);\r\n}\r\n\r\nfunction* watchMyArticles(): Generator {\r\n  yield takeLatest(getMySaleArticleRequest, getMySaleArticleRequestSaga);\r\n  yield takeLatest(getMyPurchaseArticleRequest, getMyPurchaseArticleRequestSaga);\r\n}\r\n\r\nexport default function* loginSaga(): Generator {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchProfile),\r\n    fork(watchWishList),\r\n    fork(watchMyArticles),\r\n  ]);\r\n}\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\userSlice.ts",["300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { memberInterface } from '../../interfaces/UserInterface';\r\n\r\nconst initialUser: memberInterface = {\r\n  nickname: '', // 닉네임\r\n  profileImg: '', // 프로필 이미지\r\n  latitude: 0, // 위도\r\n  longitude: 0, // 경도\r\n  role: '', // 권한\r\n  articles: [], // 아이디 만\r\n  wishList: [], // 아이디 만\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: initialUser,\r\n    isLoginLoading: false, // 로그인\r\n    isLoginSucceed: false,\r\n    isLoginError: null,\r\n    isLogoutLoading: false, // 로그아웃\r\n    isLogoutSucceed: false,\r\n    isLogoutError: null,\r\n    isModifyProfileLoading: false, // 프로필 수정\r\n    isModifyProfileSuccess: false,\r\n    isModifyProfileError: null,\r\n    isGetWishListLoading: false, // 내 찜목록 가져오기\r\n    isGetWishListSuccess: false,\r\n    isGetWishListError: null,\r\n    isAddWishListLoading: false, // 찜하기\r\n    isAddWishListSuccess: false,\r\n    isAddWishListError: null,\r\n    isRemoveWishListLoading: false, // 찜 해제하기\r\n    isRemoveWishListSuccess: false,\r\n    isRemoveWishListError: null,\r\n    isGetMySaleArticlesLoading: false, // 내 판매글 가져오기\r\n    isGetMySaleArticlesSuccess: false,\r\n    isGetMySaleArticlesError: null,\r\n    isGetMyPurchaseArticlesLoading: false, // 내 구매글 가져오기\r\n    isGetMyPurchaseArticlesSuccess: false,\r\n    isGetMyPurchaseArticlesError: null,\r\n  },\r\n  reducers: {\r\n    postLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n    },\r\n    postSocialLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n    },\r\n    postLoginRequestSuccess: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginSucceed = true;\r\n      state.user = action.payload;\r\n    },\r\n    postLoginRequestError: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginError = action.payload;\r\n    },\r\n    postLogoutRequest: (state, action) => {\r\n      state.isLogoutLoading = true;\r\n    },\r\n    postLogoutRequestSuccess: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutSucceed = true;\r\n      state.user = initialUser;\r\n    },\r\n    postLogoutRequestError: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutError = action.payload;\r\n    },\r\n    postModifyProfileRequest: (state, action) => {\r\n      state.isModifyProfileLoading = true;\r\n    },\r\n    postModifyProfileRequestSuccess: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileSuccess = true;\r\n    },\r\n    postModifyProfileRequestError: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileError = action.payload;\r\n    },\r\n    getWishListRequest: (state, action) => {\r\n      state.isGetWishListLoading = true;\r\n    },\r\n    getWishListRequestSuccess: (state, action) => {\r\n      state.isGetWishListLoading = false;\r\n      state.isGetWishListSuccess = true;\r\n    },\r\n    getWishListRequestError: (state, action) => {\r\n      state.isGetWishListLoading = false;\r\n      state.isGetWishListError = action.payload;\r\n    },\r\n    postAddWishListRequest: (state, action) => {\r\n      state.isAddWishListLoading = true;\r\n    },\r\n    postAddWishListRequestSuccess: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListSuccess = true;\r\n    },\r\n    postAddWishListRequestError: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListError = action.payload;\r\n    },\r\n    postRemoveWishListRequest: (state, action) => {\r\n      state.isRemoveWishListLoading = true;\r\n    },\r\n    postRemoveWishListRequestSuccess: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListSuccess = true;\r\n    },\r\n    postRemoveWishListRequestError: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListError = action.payload;\r\n    },\r\n    getMySaleArticleRequest: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = true;\r\n    },\r\n    getMySaleArticleRequestSuccess: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesSuccess = true;\r\n    },\r\n    getMySaleArticleRequestError: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesError = action.payload;\r\n    },\r\n    getMyPurchaseArticleRequest: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = true;\r\n    },\r\n    getMyPurchaseArticleRequestSuccess: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = false;\r\n      state.isGetMyPurchaseArticlesSuccess = true;\r\n    },\r\n    getMyPurchaseArticleRequestError: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = false;\r\n      state.isGetMyPurchaseArticlesError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  postModifyProfileRequest,\r\n  postModifyProfileRequestSuccess,\r\n  postModifyProfileRequestError,\r\n  getWishListRequest,\r\n  getWishListRequestSuccess,\r\n  getWishListRequestError,\r\n  postAddWishListRequest,\r\n  postAddWishListRequestSuccess,\r\n  postAddWishListRequestError,\r\n  postRemoveWishListRequest,\r\n  postRemoveWishListRequestSuccess,\r\n  postRemoveWishListRequestError,\r\n  getMySaleArticleRequest,\r\n  getMySaleArticleRequestSuccess,\r\n  getMySaleArticleRequestError,\r\n  getMyPurchaseArticleRequest,\r\n  getMyPurchaseArticleRequestSuccess,\r\n  getMyPurchaseArticleRequestError,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSaga.ts",["316"],"import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { all, call, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport { getNoticeRequestAsync } from '../../api/noticeApi';\r\nimport {\r\n  getNoticeRequest,\r\n  getNoticeRequestSuccess,\r\n  getNoticeRequestError,\r\n} from './noticeSlice';\r\n\r\nfunction* getNoticeRequestSaga(action: PayloadAction<number>) {\r\n  try {\r\n    const result = yield getNoticeRequestAsync(action.payload);\r\n    console.log(result);\r\n\r\n    yield put({\r\n      type: getNoticeRequestSuccess,\r\n      payload: result,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: getNoticeRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchNotice(): Generator {\r\n  yield takeLatest(getNoticeRequest, getNoticeRequestSaga);\r\n}\r\n\r\nexport default function* loginSaga(): Generator {\r\n  yield all([\r\n    fork(watchNotice),\r\n  ]);\r\n}\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\notice\\noticeSlice.ts",["317"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { noticeInterface } from '../../interfaces/NoticeInterface';\r\n\r\nconst initialNoticeList: noticeInterface[] = [];\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    noticeList: initialNoticeList,\r\n    totalPage: 0,\r\n    isGetNoticeLoading: false, // 로그인\r\n    isGetNoticeSucceed: false,\r\n    isGetNoticeError: null,\r\n  },\r\n  reducers: {\r\n    getNoticeRequest: (state, action) => {\r\n      state.isGetNoticeLoading = true;\r\n    },\r\n    getNoticeRequestSuccess: (state, action) => {\r\n      state.isGetNoticeLoading = false;\r\n      state.isGetNoticeSucceed = true;\r\n      state.noticeList = action.payload.data;\r\n      state.totalPage = action.payload.totalPage;\r\n    },\r\n    getNoticeRequestError: (state, action) => {\r\n      state.isGetNoticeLoading = false;\r\n      state.isGetNoticeError = action.payload;\r\n    },\r\n    toggleActiveNotice: (state, action) => {\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        noticeList: state.noticeList.map((item) => (item.noticeId === action.payload ? { ...item, active: !item.active } : item)),\r\n      };\r\n      console.log();\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getNoticeRequest,\r\n  getNoticeRequestSuccess,\r\n  getNoticeRequestError,\r\n  toggleActiveNotice,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\styles\\GlobalStyles.ts",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\AddPostPage.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostView.tsx",[],{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"331","line":1,"column":10,"nodeType":"332","messageId":"333","endLine":1,"endColumn":24},{"ruleId":"330","severity":1,"message":"334","line":1,"column":39,"nodeType":"332","messageId":"333","endLine":1,"endColumn":52},{"ruleId":"330","severity":1,"message":"335","line":40,"column":38,"nodeType":"332","messageId":"333","endLine":40,"endColumn":44},{"ruleId":"330","severity":1,"message":"335","line":53,"column":34,"nodeType":"332","messageId":"333","endLine":53,"endColumn":40},{"ruleId":"318","replacedBy":"336"},{"ruleId":"320","replacedBy":"337"},{"ruleId":"322","replacedBy":"338"},{"ruleId":"324","replacedBy":"339"},{"ruleId":"326","replacedBy":"340"},{"ruleId":"328","replacedBy":"341"},{"ruleId":"342","severity":1,"message":"343","line":563,"column":7,"nodeType":"344","messageId":"345","endLine":563,"endColumn":31},{"ruleId":"342","severity":1,"message":"343","line":565,"column":7,"nodeType":"344","messageId":"345","endLine":565,"endColumn":40},{"ruleId":"342","severity":1,"message":"343","line":567,"column":7,"nodeType":"344","messageId":"345","endLine":567,"endColumn":33},{"ruleId":"342","severity":1,"message":"343","line":569,"column":7,"nodeType":"344","messageId":"345","endLine":569,"endColumn":32},{"ruleId":"342","severity":1,"message":"343","line":571,"column":7,"nodeType":"344","messageId":"345","endLine":571,"endColumn":27},{"ruleId":"342","severity":1,"message":"343","line":573,"column":7,"nodeType":"344","messageId":"345","endLine":573,"endColumn":33},{"ruleId":"342","severity":1,"message":"343","line":576,"column":7,"nodeType":"344","messageId":"345","endLine":576,"endColumn":30},{"ruleId":"330","severity":1,"message":"346","line":3,"column":10,"nodeType":"332","messageId":"333","endLine":3,"endColumn":30},{"ruleId":"330","severity":1,"message":"347","line":5,"column":10,"nodeType":"332","messageId":"333","endLine":5,"endColumn":24},{"ruleId":"330","severity":1,"message":"348","line":5,"column":45,"nodeType":"332","messageId":"333","endLine":5,"endColumn":59},{"ruleId":"330","severity":1,"message":"349","line":5,"column":61,"nodeType":"332","messageId":"333","endLine":5,"endColumn":85},{"ruleId":"330","severity":1,"message":"335","line":13,"column":24,"nodeType":"332","messageId":"333","endLine":13,"endColumn":59},{"ruleId":"330","severity":1,"message":"335","line":23,"column":30,"nodeType":"332","messageId":"333","endLine":23,"endColumn":59},{"ruleId":"318","replacedBy":"350"},{"ruleId":"320","replacedBy":"351"},{"ruleId":"322","replacedBy":"352"},{"ruleId":"324","replacedBy":"353"},{"ruleId":"326","replacedBy":"354"},{"ruleId":"328","replacedBy":"355"},{"ruleId":"318","replacedBy":"356"},{"ruleId":"320","replacedBy":"357"},{"ruleId":"322","replacedBy":"358"},{"ruleId":"324","replacedBy":"359"},{"ruleId":"326","replacedBy":"360"},{"ruleId":"328","replacedBy":"361"},{"ruleId":"362","severity":1,"message":"363","line":3,"column":25,"nodeType":"364","messageId":"365","endLine":3,"endColumn":57},{"ruleId":"318","replacedBy":"366"},{"ruleId":"320","replacedBy":"367"},{"ruleId":"322","replacedBy":"368"},{"ruleId":"324","replacedBy":"369"},{"ruleId":"326","replacedBy":"370"},{"ruleId":"328","replacedBy":"371"},{"ruleId":"372","severity":1,"message":"373","line":11,"column":11,"nodeType":"374","messageId":"375","endLine":11,"endColumn":14,"suggestions":"376"},{"ruleId":"362","severity":1,"message":"363","line":4,"column":28,"nodeType":"364","messageId":"365","endLine":4,"endColumn":60},{"ruleId":"318","replacedBy":"377"},{"ruleId":"320","replacedBy":"378"},{"ruleId":"322","replacedBy":"379"},{"ruleId":"324","replacedBy":"380"},{"ruleId":"326","replacedBy":"381"},{"ruleId":"328","replacedBy":"382"},{"ruleId":"318","replacedBy":"383"},{"ruleId":"320","replacedBy":"384"},{"ruleId":"322","replacedBy":"385"},{"ruleId":"324","replacedBy":"386"},{"ruleId":"326","replacedBy":"387"},{"ruleId":"328","replacedBy":"388"},{"ruleId":"330","severity":1,"message":"389","line":3,"column":10,"nodeType":"332","messageId":"333","endLine":3,"endColumn":24},{"ruleId":"330","severity":1,"message":"390","line":3,"column":39,"nodeType":"332","messageId":"333","endLine":3,"endColumn":50},{"ruleId":"318","replacedBy":"391"},{"ruleId":"320","replacedBy":"392"},{"ruleId":"322","replacedBy":"393"},{"ruleId":"324","replacedBy":"394"},{"ruleId":"326","replacedBy":"395"},{"ruleId":"328","replacedBy":"396"},{"ruleId":"318","replacedBy":"397"},{"ruleId":"320","replacedBy":"398"},{"ruleId":"322","replacedBy":"399"},{"ruleId":"324","replacedBy":"400"},{"ruleId":"326","replacedBy":"401"},{"ruleId":"328","replacedBy":"402"},{"ruleId":"330","severity":1,"message":"403","line":6,"column":8,"nodeType":"332","messageId":"333","endLine":6,"endColumn":23},{"ruleId":"318","replacedBy":"404"},{"ruleId":"320","replacedBy":"405"},{"ruleId":"322","replacedBy":"406"},{"ruleId":"324","replacedBy":"407"},{"ruleId":"326","replacedBy":"408"},{"ruleId":"328","replacedBy":"409"},{"ruleId":"330","severity":1,"message":"335","line":11,"column":31,"nodeType":"332","messageId":"333","endLine":11,"endColumn":37},{"ruleId":"330","severity":1,"message":"335","line":15,"column":31,"nodeType":"332","messageId":"333","endLine":15,"endColumn":37},{"ruleId":"330","severity":1,"message":"335","line":12,"column":38,"nodeType":"332","messageId":"333","endLine":12,"endColumn":44},{"ruleId":"362","severity":1,"message":"363","line":4,"column":33,"nodeType":"364","messageId":"365","endLine":4,"endColumn":64},{"ruleId":"362","severity":1,"message":"363","line":57,"column":34,"nodeType":"364","messageId":"365","endLine":57,"endColumn":57},{"ruleId":"318","replacedBy":"410"},{"ruleId":"320","replacedBy":"411"},{"ruleId":"322","replacedBy":"412"},{"ruleId":"324","replacedBy":"413"},{"ruleId":"326","replacedBy":"414"},{"ruleId":"328","replacedBy":"415"},{"ruleId":"330","severity":1,"message":"416","line":4,"column":8,"nodeType":"332","messageId":"333","endLine":4,"endColumn":16},{"ruleId":"330","severity":1,"message":"417","line":5,"column":8,"nodeType":"332","messageId":"333","endLine":5,"endColumn":14},{"ruleId":"330","severity":1,"message":"418","line":2,"column":38,"nodeType":"332","messageId":"333","endLine":2,"endColumn":42},{"ruleId":"330","severity":1,"message":"335","line":7,"column":30,"nodeType":"332","messageId":"333","endLine":7,"endColumn":59},{"ruleId":"330","severity":1,"message":"419","line":1,"column":44,"nodeType":"332","messageId":"333","endLine":1,"endColumn":54},{"ruleId":"372","severity":1,"message":"373","line":27,"column":103,"nodeType":"374","messageId":"375","endLine":27,"endColumn":106,"suggestions":"420"},{"ruleId":"342","severity":1,"message":"343","line":42,"column":5,"nodeType":"344","messageId":"345","endLine":42,"endColumn":28},{"ruleId":"330","severity":1,"message":"335","line":44,"column":31,"nodeType":"332","messageId":"333","endLine":44,"endColumn":37},{"ruleId":"330","severity":1,"message":"335","line":47,"column":37,"nodeType":"332","messageId":"333","endLine":47,"endColumn":43},{"ruleId":"330","severity":1,"message":"335","line":59,"column":32,"nodeType":"332","messageId":"333","endLine":59,"endColumn":38},{"ruleId":"330","severity":1,"message":"335","line":62,"column":39,"nodeType":"332","messageId":"333","endLine":62,"endColumn":45},{"ruleId":"330","severity":1,"message":"335","line":71,"column":39,"nodeType":"332","messageId":"333","endLine":71,"endColumn":45},{"ruleId":"330","severity":1,"message":"335","line":74,"column":46,"nodeType":"332","messageId":"333","endLine":74,"endColumn":52},{"ruleId":"330","severity":1,"message":"335","line":82,"column":33,"nodeType":"332","messageId":"333","endLine":82,"endColumn":39},{"ruleId":"330","severity":1,"message":"335","line":85,"column":40,"nodeType":"332","messageId":"333","endLine":85,"endColumn":46},{"ruleId":"330","severity":1,"message":"335","line":93,"column":37,"nodeType":"332","messageId":"333","endLine":93,"endColumn":43},{"ruleId":"330","severity":1,"message":"335","line":96,"column":44,"nodeType":"332","messageId":"333","endLine":96,"endColumn":50},{"ruleId":"330","severity":1,"message":"335","line":104,"column":40,"nodeType":"332","messageId":"333","endLine":104,"endColumn":46},{"ruleId":"330","severity":1,"message":"335","line":107,"column":47,"nodeType":"332","messageId":"333","endLine":107,"endColumn":53},{"ruleId":"330","severity":1,"message":"335","line":115,"column":38,"nodeType":"332","messageId":"333","endLine":115,"endColumn":44},{"ruleId":"330","severity":1,"message":"335","line":118,"column":45,"nodeType":"332","messageId":"333","endLine":118,"endColumn":51},{"ruleId":"330","severity":1,"message":"335","line":126,"column":42,"nodeType":"332","messageId":"333","endLine":126,"endColumn":48},{"ruleId":"330","severity":1,"message":"335","line":129,"column":49,"nodeType":"332","messageId":"333","endLine":129,"endColumn":55},{"ruleId":"330","severity":1,"message":"418","line":2,"column":15,"nodeType":"332","messageId":"333","endLine":2,"endColumn":19},{"ruleId":"330","severity":1,"message":"335","line":16,"column":31,"nodeType":"332","messageId":"333","endLine":16,"endColumn":37},"lines-around-directive",["421"],"no-spaced-func",["422"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'createSelector' is defined but never used.","Identifier","unusedVar","'PayloadAction' is defined but never used.","'action' is defined but never used.",["421"],["422"],[],[],[],[],"no-alert","Unexpected alert.","CallExpression","unexpected","'AddBookPostInterface' is defined but never used.","'addBookPostAPI' is defined but never used.","'getBookPostAPI' is defined but never used.","'getBookPostDetailViewAPI' is defined but never used.",["421"],["422"],[],[],[],[],["421"],["422"],[],[],[],[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["421"],["422"],[],[],[],[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["423","424"],["421"],["422"],[],[],[],[],["421"],["422"],[],[],[],[],"'RootStateOrAny' is defined but never used.","'useSelector' is defined but never used.",["421"],["422"],[],[],[],[],["421"],["422"],[],[],[],[],"'dummyNoticeList' is defined but never used.",["421"],["422"],[],[],[],[],["421"],["422"],[],[],[],[],"'PostList' is defined but never used.","'MyPage' is defined but never used.","'call' is defined but never used.","'getContext' is defined but never used.",["425","426"],"padding-line-between-statements","func-call-spacing",{"messageId":"427","fix":"428","desc":"429"},{"messageId":"430","fix":"431","desc":"432"},{"messageId":"427","fix":"433","desc":"429"},{"messageId":"430","fix":"434","desc":"432"},"suggestUnknown",{"range":"435","text":"436"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"435","text":"437"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"438","text":"436"},{"range":"438","text":"437"},[397,400],"unknown","never",[832,835]]