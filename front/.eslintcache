[{"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts":"1","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts":"2","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx":"3","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts":"4","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx":"5","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts":"6","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mypage\\MyPage.tsx":"7","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx":"8","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts":"9","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx":"10","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx":"11","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSlice.ts":"12","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx":"13","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts":"14","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx":"15","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx":"16","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts":"17"},{"size":894,"mtime":1612832857469,"results":"18","hashOfConfig":"19"},{"size":2543,"mtime":1612832857510,"results":"20","hashOfConfig":"19"},{"size":16825,"mtime":1612832857483,"results":"21","hashOfConfig":"19"},{"size":2247,"mtime":1612842318301,"results":"22","hashOfConfig":"19"},{"size":1414,"mtime":1612832857476,"results":"23","hashOfConfig":"19"},{"size":440,"mtime":1611271238964,"results":"24","hashOfConfig":"19"},{"size":4551,"mtime":1612848698723,"results":"25","hashOfConfig":"19"},{"size":2894,"mtime":1612842322914,"results":"26","hashOfConfig":"19"},{"size":569,"mtime":1612832857526,"results":"27","hashOfConfig":"19"},{"size":3604,"mtime":1612832857503,"results":"28","hashOfConfig":"19"},{"size":2305,"mtime":1612849413574,"results":"29","hashOfConfig":"19"},{"size":885,"mtime":1612832857470,"results":"30","hashOfConfig":"19"},{"size":2051,"mtime":1612832857490,"results":"31","hashOfConfig":"19"},{"size":987,"mtime":1612832857460,"results":"32","hashOfConfig":"19"},{"size":1565,"mtime":1612832857477,"results":"33","hashOfConfig":"19"},{"size":4775,"mtime":1612832857473,"results":"34","hashOfConfig":"19"},{"size":343,"mtime":1612832857529,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"sthwp6",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSaga.ts",[],["78","79","80","81","82","83"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSlice.ts",["84","85","86","87"],"import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { articleInterface } from '../../interfaces/PostList.interface';\n\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    bookPost: [],\n    hasMorePost: true,\n    filtering: { division: 'sales', category: '' },\n\n    isLoadBookPostLoading: false,\n    isLoadBookPostDone: false,\n    isLoadBookPostError: false,\n\n    isLoadScrollBookPostLoading: false,\n    isLoadScrollPostDone: false,\n    isLoadScrollPostError: null,\n\n    isDeleteBookPostLoading: false,\n    isDeleteBookPostDone: false,\n    isDeleteBookPostError: null,\n  },\n  reducers: {\n    loadBookPostRequest(state, action) {\n      state.isLoadBookPostLoading = true;\n      state.isLoadScrollBookPostLoading = false;\n      state.hasMorePost = true;\n      state.filtering.division = action.payload.division;\n      state.filtering.category = action.payload.category;\n    },\n    loadBookPostSuccess(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostDone = true;\n      state.bookPost = action.payload;\n    },\n    loadBookPostError(state, action) {\n      state.isLoadBookPostLoading = false;\n      state.isLoadBookPostError = action.payload.error;\n    },\n    loadScrollBookPostRequest(state, action) {\n      state.isLoadScrollBookPostLoading = true;\n    },\n    loadScrollBookPostSuccess(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostDone = true;\n      state.bookPost = state.bookPost.concat(action.payload);\n      state.hasMorePost = state.bookPost.length === 10;\n    },\n    loadScrollBookPostError(state, action) {\n      state.isLoadScrollBookPostLoading = false;\n      state.isLoadScrollPostError = action.payload.error;\n    },\n    deleteBookPostRequest(state, action) {\n      state.isDeleteBookPostLoading = true;\n    },\n    deleteBookPostSuccess(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostDone = true;\n      state.bookPost.filter((post:articleInterface) => post.articleId !== action.payload);\n    },\n    deleteBookPostError(state, action) {\n      state.isDeleteBookPostLoading = false;\n      state.isDeleteBookPostError = action.payload.error;\n    },\n  },\n});\n\nexport const {\n  loadBookPostRequest,\n  loadBookPostSuccess,\n  loadBookPostError,\n  loadScrollBookPostRequest,\n  loadScrollBookPostSuccess,\n  loadScrollBookPostError,\n  deleteBookPostRequest,\n  deleteBookPostSuccess,\n  deleteBookPostError,\n} = postSlice.actions;\n\nexport default postSlice.reducer;\n",["88","89","90","91","92","93"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\join\\Join.tsx",["94","95","96","97","98","99","100"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\postSaga.ts",["101","102","103","104","105","106"],"import { PayloadAction } from '@reduxjs/toolkit';\nimport { all, takeLatest, put, fork, call, throttle, select } from 'redux-saga/effects';\nimport { AddBookPostInterface } from '../../interfaces/PostList.interface';\nimport { generateDummyPost } from '../../interfaces/mockdata';\nimport { addBookPostAPI, deleteBookPostAPI, getBookPostAPI, getBookPostDetailViewAPI } from '../../api/postBookApi';\nimport { loadBookPostRequest, loadBookPostSuccess, loadBookPostError,\n  loadScrollBookPostRequest, loadScrollBookPostSuccess, loadScrollBookPostError, deleteBookPostSuccess, deleteBookPostError, deleteBookPostRequest } from './postSlice';\n\ninterface loadBookPost {\n  division: 'purchase' | 'sale',\n  categoty?: string\n}\nfunction* loadBookPost(action: PayloadAction<loadBookPost>) {\n  try {\n    // const result = yield call(getBookPostAPI, action.payload.division);\n    const result = generateDummyPost(10);\n    console.log(result);\n    yield put(loadBookPostSuccess(result));\n  } catch (error) {\n    yield put(loadBookPostError({ error: error.response.data }));\n  }\n}\nfunction* loadScrollBookPost(action: PayloadAction<number>) {\n  try {\n    const { filtering } = yield select((state) => state.postSlice);\n    // const result = yield call(getBookPostAPI, filtering, action.payload);\n    console.log(filtering);\n    const result = generateDummyPost(10);\n    console.log(result);\n    yield put(loadScrollBookPostSuccess(result));\n  } catch (error) {\n    yield put(loadScrollBookPostError({ error: error.response.data }));\n  }\n}\nfunction* deleteBookPost(action: PayloadAction<number>) {\n  try {\n    yield call(deleteBookPostAPI, action.payload);\n    yield put(deleteBookPostSuccess(action.payload));\n  } catch (error) {\n    yield put(deleteBookPostError({ error: error.response.data }));\n  }\n}\nfunction* watchLoadBookPost() {\n  yield takeLatest(loadBookPostRequest, loadBookPost);\n}\nfunction* watchloadScrollBookPost() {\n  yield throttle(2000, loadScrollBookPostRequest, loadScrollBookPost);\n}\nfunction* watchdeleteBookPost() {\n  yield takeLatest(deleteBookPostRequest, deleteBookPost);\n}\n\nexport default function* postSaga():Generator {\n  yield all([\n    fork(watchloadScrollBookPost),\n    fork(watchLoadBookPost),\n    fork(watchdeleteBookPost),\n  ]);\n}\n",["107","108","109","110","111","112"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImageSlide.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\reportWebVitals.ts",["113"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\mypage\\MyPage.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\InfiniteScrollList.tsx",["114"],"import React from 'react';\nimport { List, AutoSizer } from 'react-virtualized';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport CategoryFormatUtil from '../../utils/categoryFormatUtil';\nimport { loadScrollBookPostRequest } from './postSlice';\n\ninterface IndexInterface {\n  index: number;\n  style?: any;\n}\ninterface OnScrollParams {\n  clientHeight: number;\n  clientWidth: number;\n  scrollHeight: number;\n  scrollLeft: number;\n  scrollTop: number;\n  scrollWidth: number;\n}\nconst ListWrapper = styled.div`\n  display: flex;\n  max-width: 100%;\n  flex-wrap: wrap;\n  margin-top: 150px;\n  overflow: hidden;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 200px;\n  flex-basis: 50%;\n  padding:10px;\n  border-top: 1px solid #e8e8e8;\n  & img {\n    width: 150px;\n    height: 150px;\n    border-radius: 10px;\n  }\n`;\nconst ContentExplanation = styled.div`\n  padding: 0px 20px;\n  & h3 {\n    overflow:hidden;\n    padding: 10px 0px;\n  }\n`;\nconst Categoty = styled.div`\n  font-size: 9px;\n`;\nfunction InfiniteScrollList(): JSX.Element {\n  const dispatch = useDispatch();\n  const { bookPost, hasMorePost, isLoadScrollBookPostLoading } = useSelector((state) => state.postSlice);\n\n  const scrollListener = (params:OnScrollParams) => {\n    if (params.scrollTop + params.clientHeight >= params.scrollHeight - 300) {\n      console.log(hasMorePost, !isLoadScrollBookPostLoading);\n      if (hasMorePost && !isLoadScrollBookPostLoading) {\n        const LastId = bookPost[bookPost.length - 1].articleId;\n        dispatch(loadScrollBookPostRequest(LastId));\n      }\n    }\n  };\n\n  const rowRanderer = ({ index, style }: IndexInterface) => {\n    const post = bookPost[index];\n    return (\n      <div style={style}>\n        <NavLink to={`post/${post.articleId}`}>\n          <Content key={post.articleId}>\n            <img src={post.image} alt=\"\" />\n            <ContentExplanation>\n              <Categoty>{CategoryFormatUtil(post.category)}</Categoty>\n              <h3>{post.title}</h3>\n              <h3>{post.tprice}원</h3>\n            </ContentExplanation>\n          </Content>\n        </NavLink>\n      </div>\n    );\n  };\n\n  return (\n    <ListWrapper>\n      <AutoSizer disableHeight>\n        {({ width }) => (\n          <List\n            rowCount={bookPost.length} // 항목의 개수\n            height={800} // 실제 렌더링 되는 높이범위\n            rowHeight={200} // 항목의높이\n            width={width} // 항목의 너비\n            rowRenderer={rowRanderer} // 항목렌더링할때쓰는 함수\n            onScroll={scrollListener} // scroll 함수\n            overscanRowCount={2} // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\n          />\n        )}\n      </AutoSizer>\n    </ListWrapper>\n  );\n}\n\nexport default InfiniteScrollList;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\categoryFormatUtil.ts",["115"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\postList\\CategoryMenu.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\components\\AppLayout.tsx",["116","117"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\addPost\\addPostSlice.ts",["118","119"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\login\\LoginForm.tsx",["120","121"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { postLoginRequest } from './userSlice';\n\ninterface inputFormInterface {\n  email: string,\n  passwd: string\n}\n\nconst Form = styled.form`\n  width: 90vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst InputBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1.8em;\n`;\n\nconst Input = styled.input`\n  width: 18em;\n  font-size: 4.5vw;\n  padding: 0.8em 1.3em;\n  outline: none;\n  border: 2px solid #3960a688;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px #3960a655;\n  &:not(:last-child) {\n    margin-bottom: 1em;\n  }\n`;\n\nconst Button = styled.button`\n  width: 18em;\n  text-align: center;\n  padding: 1em 0;\n  background: #3960a6;\n  font-weight: bold;\n  color: #FFF;\n  font-size: 4.5vw;\n  border: none;\n  border-radius: 200px;\n  outline: none;\n  margin-bottom: 1.2em;\n`;\n\nfunction LoginForm(): JSX.Element {\n  const [inputs, setInputs] = useState<inputFormInterface>({\n    email: '',\n    passwd: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const history = useHistory();\n\n  const onLogin = (e:React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(postLoginRequest({ user: { email: inputs.email, passwd: inputs.passwd }, history }));\n  };\n\n  return (\n    <Form method=\"GET\" onSubmit={onLogin}>\n      <InputBox>\n        <Input type=\"email\" name=\"email\" placeholder=\"아이디\" value={inputs.email} onChange={handleChange} required />\n        <Input type=\"password\" name=\"passwd\" placeholder=\"비밀번호\" value={inputs.passwd} onChange={handleChange} required />\n      </InputBox>\n      <Button type=\"submit\">로그인</Button>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n","C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\api\\joinApi.ts",[],["122","123","124","125","126","127"],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\ImagesZoom.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\features\\detailPostView\\DetailPostContent.tsx",[],"C:\\Users\\phg0644\\Desktop\\project\\corsMarket\\front\\src\\utils\\progressUtil.ts",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":24},{"ruleId":"140","severity":1,"message":"144","line":1,"column":39,"nodeType":"142","messageId":"143","endLine":1,"endColumn":52},{"ruleId":"140","severity":1,"message":"145","line":40,"column":38,"nodeType":"142","messageId":"143","endLine":40,"endColumn":44},{"ruleId":"140","severity":1,"message":"145","line":53,"column":34,"nodeType":"142","messageId":"143","endLine":53,"endColumn":40},{"ruleId":"128","replacedBy":"146"},{"ruleId":"130","replacedBy":"147"},{"ruleId":"132","replacedBy":"148"},{"ruleId":"134","replacedBy":"149"},{"ruleId":"136","replacedBy":"150"},{"ruleId":"138","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":503,"column":7,"nodeType":"154","messageId":"155","endLine":503,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":505,"column":7,"nodeType":"154","messageId":"155","endLine":505,"endColumn":40},{"ruleId":"152","severity":1,"message":"153","line":507,"column":7,"nodeType":"154","messageId":"155","endLine":507,"endColumn":33},{"ruleId":"152","severity":1,"message":"153","line":509,"column":7,"nodeType":"154","messageId":"155","endLine":509,"endColumn":32},{"ruleId":"152","severity":1,"message":"153","line":511,"column":7,"nodeType":"154","messageId":"155","endLine":511,"endColumn":27},{"ruleId":"152","severity":1,"message":"153","line":513,"column":7,"nodeType":"154","messageId":"155","endLine":513,"endColumn":33},{"ruleId":"152","severity":1,"message":"153","line":516,"column":7,"nodeType":"154","messageId":"155","endLine":516,"endColumn":30},{"ruleId":"140","severity":1,"message":"156","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":30},{"ruleId":"140","severity":1,"message":"157","line":5,"column":10,"nodeType":"142","messageId":"143","endLine":5,"endColumn":24},{"ruleId":"140","severity":1,"message":"158","line":5,"column":45,"nodeType":"142","messageId":"143","endLine":5,"endColumn":59},{"ruleId":"140","severity":1,"message":"159","line":5,"column":61,"nodeType":"142","messageId":"143","endLine":5,"endColumn":85},{"ruleId":"140","severity":1,"message":"145","line":13,"column":24,"nodeType":"142","messageId":"143","endLine":13,"endColumn":59},{"ruleId":"140","severity":1,"message":"145","line":23,"column":30,"nodeType":"142","messageId":"143","endLine":23,"endColumn":59},{"ruleId":"128","replacedBy":"160"},{"ruleId":"130","replacedBy":"161"},{"ruleId":"132","replacedBy":"162"},{"ruleId":"134","replacedBy":"163"},{"ruleId":"136","replacedBy":"164"},{"ruleId":"138","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":3,"column":25,"nodeType":"168","messageId":"169","endLine":3,"endColumn":57},{"ruleId":"170","severity":1,"message":"171","line":11,"column":11,"nodeType":"172","messageId":"173","endLine":11,"endColumn":14,"suggestions":"174"},{"ruleId":"166","severity":1,"message":"167","line":4,"column":28,"nodeType":"168","messageId":"169","endLine":4,"endColumn":60},{"ruleId":"140","severity":1,"message":"175","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":16},{"ruleId":"140","severity":1,"message":"176","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":14},{"ruleId":"140","severity":1,"message":"145","line":11,"column":31,"nodeType":"142","messageId":"143","endLine":11,"endColumn":37},{"ruleId":"140","severity":1,"message":"145","line":15,"column":31,"nodeType":"142","messageId":"143","endLine":15,"endColumn":37},{"ruleId":"140","severity":1,"message":"177","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":24},{"ruleId":"140","severity":1,"message":"178","line":3,"column":39,"nodeType":"142","messageId":"143","endLine":3,"endColumn":50},{"ruleId":"128","replacedBy":"179"},{"ruleId":"130","replacedBy":"180"},{"ruleId":"132","replacedBy":"181"},{"ruleId":"134","replacedBy":"182"},{"ruleId":"136","replacedBy":"183"},{"ruleId":"138","replacedBy":"184"},"lines-around-directive",["185"],"no-spaced-func",["186"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'createSelector' is defined but never used.","Identifier","unusedVar","'PayloadAction' is defined but never used.","'action' is defined but never used.",["185"],["186"],[],[],[],[],"no-alert","Unexpected alert.","CallExpression","unexpected","'AddBookPostInterface' is defined but never used.","'addBookPostAPI' is defined but never used.","'getBookPostAPI' is defined but never used.","'getBookPostDetailViewAPI' is defined but never used.",["185"],["186"],[],[],[],[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["187","188"],"'PostList' is defined but never used.","'MyPage' is defined but never used.","'RootStateOrAny' is defined but never used.","'useSelector' is defined but never used.",["185"],["186"],[],[],[],[],"padding-line-between-statements","func-call-spacing",{"messageId":"189","fix":"190","desc":"191"},{"messageId":"192","fix":"193","desc":"194"},"suggestUnknown",{"range":"195","text":"196"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"195","text":"197"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[397,400],"unknown","never"]