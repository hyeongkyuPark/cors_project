[{"/home/workspace/cors_market/www/cors/front/src/reportWebVitals.ts":"1","/home/workspace/cors_market/www/cors/front/src/features/detailPostView/detailViewSlice.ts":"2","/home/workspace/cors_market/www/cors/front/src/features/login/userSaga.ts":"3","/home/workspace/cors_market/www/cors/front/src/features/login/userSlice.ts":"4","/home/workspace/cors_market/www/cors/front/src/styles/GlobalStyles.ts":"5","/home/workspace/cors_market/www/cors/front/src/features/addPost/AddPostPage.tsx":"6","/home/workspace/cors_market/www/cors/front/src/features/postList/PostList.tsx":"7","/home/workspace/cors_market/www/cors/front/src/api/userApi.ts":"8","/home/workspace/cors_market/www/cors/front/src/interfaces/mockdata.ts":"9","/home/workspace/cors_market/www/cors/front/src/api/postBookApi.ts":"10","/home/workspace/cors_market/www/cors/front/src/features/postList/AddPostButton.tsx":"11","/home/workspace/cors_market/www/cors/front/src/features/postList/InfiniteScrollList.tsx":"12","/home/workspace/cors_market/www/cors/front/src/features/postList/Header.tsx":"13","/home/workspace/cors_market/www/cors/front/src/components/AppLayout.tsx":"14","/home/workspace/cors_market/www/cors/front/src/utils/categoryFormatUtil.ts":"15","/home/workspace/cors_market/www/cors/front/src/features/postList/CategoryMenu.tsx":"16","/home/workspace/cors_market/www/cors/front/src/features/addPost/addPostSaga.ts":"17","/home/workspace/cors_market/www/cors/front/src/index.tsx":"18","/home/workspace/cors_market/www/cors/front/src/features/postList/postSlice.ts":"19","/home/workspace/cors_market/www/cors/front/src/features/join/Join.tsx":"20","/home/workspace/cors_market/www/cors/front/src/features/detailPostView/DetailPostContent.tsx":"21","/home/workspace/cors_market/www/cors/front/src/features/login/LoginForm.tsx":"22","/home/workspace/cors_market/www/cors/front/src/utils/countDaoUtil.ts":"23","/home/workspace/cors_market/www/cors/front/src/utils/progressUtil.ts":"24","/home/workspace/cors_market/www/cors/front/src/features/detailPostView/ImageSlide.tsx":"25","/home/workspace/cors_market/www/cors/front/src/features/addPost/addPostSlice.ts":"26","/home/workspace/cors_market/www/cors/front/src/features/postList/postSaga.ts":"27","/home/workspace/cors_market/www/cors/front/src/features/detailPostView/DetailPostView.tsx":"28","/home/workspace/cors_market/www/cors/front/src/api/joinApi.ts":"29"},{"size":440,"mtime":1611560536010,"results":"30","hashOfConfig":"31"},{"size":957,"mtime":1612832072773,"results":"32","hashOfConfig":"31"},{"size":3666,"mtime":1612832072780,"results":"33","hashOfConfig":"31"},{"size":5786,"mtime":1612832072781,"results":"34","hashOfConfig":"31"},{"size":375,"mtime":1612832072809,"results":"35","hashOfConfig":"31"},{"size":475,"mtime":1612832072759,"results":"36","hashOfConfig":"31"},{"size":810,"mtime":1612832072791,"results":"37","hashOfConfig":"31"},{"size":1380,"mtime":1612832072755,"results":"38","hashOfConfig":"31"},{"size":3156,"mtime":1612832072804,"results":"39","hashOfConfig":"31"},{"size":1496,"mtime":1612832072752,"results":"40","hashOfConfig":"31"},{"size":1487,"mtime":1612832072783,"results":"41","hashOfConfig":"31"},{"size":2997,"mtime":1612832072789,"results":"42","hashOfConfig":"31"},{"size":3498,"mtime":1612832072787,"results":"43","hashOfConfig":"31"},{"size":2287,"mtime":1612832072757,"results":"44","hashOfConfig":"31"},{"size":586,"mtime":1612832072811,"results":"45","hashOfConfig":"31"},{"size":3732,"mtime":1612832072785,"results":"46","hashOfConfig":"31"},{"size":920,"mtime":1612832072761,"results":"47","hashOfConfig":"31"},{"size":865,"mtime":1611935355603,"results":"48","hashOfConfig":"31"},{"size":2623,"mtime":1612832072796,"results":"49","hashOfConfig":"31"},{"size":17442,"mtime":1612832072775,"results":"50","hashOfConfig":"31"},{"size":4961,"mtime":1612832072765,"results":"51","hashOfConfig":"31"},{"size":2138,"mtime":1612832072778,"results":"52","hashOfConfig":"31"},{"size":262,"mtime":1612832072812,"results":"53","hashOfConfig":"31"},{"size":360,"mtime":1612832072813,"results":"54","hashOfConfig":"31"},{"size":1472,"mtime":1612832072769,"results":"55","hashOfConfig":"31"},{"size":919,"mtime":1612832072762,"results":"56","hashOfConfig":"31"},{"size":2306,"mtime":1612832072793,"results":"57","hashOfConfig":"31"},{"size":1356,"mtime":1612832072767,"results":"58","hashOfConfig":"31"},{"size":987,"mtime":1612832072751,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1oq40te",{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/workspace/cors_market/www/cors/front/src/reportWebVitals.ts",["126"],"/home/workspace/cors_market/www/cors/front/src/features/detailPostView/detailViewSlice.ts",["127"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst detailViewSlice = createSlice({\r\n  name: 'detailView',\r\n  initialState: {\r\n    detailBookPost: null,\r\n    isLoadDetailBookPostLoading: false,\r\n    isLoadDetailBookPostDone: false,\r\n    isLoadDetailBookPostError: null,\r\n  },\r\n  reducers: {\r\n    loadDetailBookPostRequest(state, action) {\r\n      state.isLoadDetailBookPostLoading = true;\r\n    },\r\n    loadDetailBookPostSuccess(state, action) {\r\n      state.isLoadDetailBookPostLoading = false;\r\n      state.isLoadDetailBookPostDone = true;\r\n      state.detailBookPost = action.payload;\r\n    },\r\n    loadDetailBookPostError(state, action) {\r\n      state.isLoadDetailBookPostLoading = false;\r\n      state.isLoadDetailBookPostError = action.payload.error;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  loadDetailBookPostRequest,\r\n  loadDetailBookPostSuccess,\r\n  loadDetailBookPostError,\r\n} = detailViewSlice.actions;\r\n\r\nexport default detailViewSlice.reducer;\r\n",["128","129","130","131","132","133"],"/home/workspace/cors_market/www/cors/front/src/features/login/userSaga.ts",["134","135","136"],"import { all, call, fork, put, takeLatest, getContext } from 'redux-saga/effects';\r\nimport {\r\n  logoutAsync,\r\n  modifyProfileAsync,\r\n  postLoginAsync,\r\n  socialLoginAsync,\r\n} from '../../api/userApi';\r\nimport {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  postModifyProfileRequest,\r\n  getWishListRequest,\r\n  postAddWishListRequest,\r\n  postRemoveWishListRequest,\r\n  getMySaleArticleRequest,\r\n  getMyPurchaseArticleRequest,\r\n  postModifyProfileRequestError,\r\n  postModifyProfileRequestSuccess,\r\n} from './userSlice';\r\nimport { modifyProfileInterface } from '../../interfaces/UserInterface';\r\n\r\nfunction* postLoginRequestSaga(action: { payload: { user: { email: string, passwd: string }, history: any } }) {\r\n  try {\r\n    const loginUser = yield call(postLoginAsync, action.payload.user);\r\n\r\n    yield put({\r\n      type: postLoginRequestSuccess,\r\n      payload: loginUser,\r\n    });\r\n\r\n    action.payload.history.push('/home');\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error,\r\n    });\r\n    alert('로그인 정보를 확인하세요.');\r\n  }\r\n}\r\n\r\nfunction* postSocialLoginRequestSaga(action: { payload: { social: string } }) {\r\n  try {\r\n    yield call(socialLoginAsync, action.payload.social);\r\n\r\n    yield put({\r\n      type: postLoginRequestSuccess,\r\n      payload: 'social',\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLoginRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postLogoutRequestSaga() {\r\n  try {\r\n    yield call(logoutAsync);\r\n\r\n    yield put({\r\n      type: postLogoutRequestSuccess,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postLogoutRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* postModifyProfileRequestSaga(action: {payload: modifyProfileInterface}) {\r\n  try {\r\n    yield call(modifyProfileAsync, action.payload);\r\n\r\n    yield put({\r\n      type: postModifyProfileRequestSuccess,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: postModifyProfileRequestError,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* getWishListRequestSaga() {\r\n  yield console.log('찜목록 불러오기');\r\n}\r\n\r\nfunction* postAddWishListRequestSaga() {\r\n  yield console.log('찜하기');\r\n}\r\n\r\nfunction* postRemoveWishListRequestSaga() {\r\n  yield console.log('찜 해제하기');\r\n}\r\n\r\nfunction* getMySaleArticleRequestSaga() {\r\n  yield console.log('내 판매글 불러오기');\r\n}\r\n\r\nfunction* getMyPurchaseArticleRequestSaga() {\r\n  yield console.log('내 구매글 불러오기');\r\n}\r\n\r\nfunction* watchLogin(): Generator {\r\n  yield takeLatest(postLoginRequest, postLoginRequestSaga);\r\n  yield takeLatest(postSocialLoginRequest, postSocialLoginRequestSaga);\r\n  yield takeLatest(postLogoutRequest, postLogoutRequestSaga);\r\n}\r\n\r\nfunction* watchProfile(): Generator {\r\n  yield takeLatest(postModifyProfileRequest, postModifyProfileRequestSaga);\r\n}\r\n\r\nfunction* watchWishList(): Generator {\r\n  yield takeLatest(getWishListRequest, getWishListRequestSaga);\r\n  yield takeLatest(postAddWishListRequest, postAddWishListRequestSaga);\r\n  yield takeLatest(postRemoveWishListRequest, postRemoveWishListRequestSaga);\r\n}\r\n\r\nfunction* watchMyArticles(): Generator {\r\n  yield takeLatest(getMySaleArticleRequest, getMySaleArticleRequestSaga);\r\n  yield takeLatest(getMyPurchaseArticleRequest, getMyPurchaseArticleRequestSaga);\r\n}\r\n\r\nexport default function* loginSaga(): Generator {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchProfile),\r\n    fork(watchWishList),\r\n    fork(watchMyArticles),\r\n  ]);\r\n}\r\n",["137","138","139","140","141","142"],"/home/workspace/cors_market/www/cors/front/src/features/login/userSlice.ts",["143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { memberInterface } from '../../interfaces/UserInterface';\r\n\r\nconst initialUser: memberInterface = {\r\n  nickname: '', // 닉네임\r\n  profileImg: '', // 프로필 이미지\r\n  latitude: 0, // 위도\r\n  longitude: 0, // 경도\r\n  role: '', // 권한\r\n  articles: [], // 아이디 만\r\n  wishList: [], // 아이디 만\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: initialUser,\r\n    isLoginLoading: false, // 로그인\r\n    isLoginSucceed: false,\r\n    isLoginError: null,\r\n    isLogoutLoading: false, // 로그아웃\r\n    isLogoutSucceed: false,\r\n    isLogoutError: null,\r\n    isModifyProfileLoading: false, // 프로필 수정\r\n    isModifyProfileSuccess: false,\r\n    isModifyProfileError: null,\r\n    isGetWishListLoading: false, // 내 찜목록 가져오기\r\n    isGetWishListSuccess: false,\r\n    isGetWishListError: null,\r\n    isAddWishListLoading: false, // 찜하기\r\n    isAddWishListSuccess: false,\r\n    isAddWishListError: null,\r\n    isRemoveWishListLoading: false, // 찜 해제하기\r\n    isRemoveWishListSuccess: false,\r\n    isRemoveWishListError: null,\r\n    isGetMySaleArticlesLoading: false, // 내 판매글 가져오기\r\n    isGetMySaleArticlesSuccess: false,\r\n    isGetMySaleArticlesError: null,\r\n    isGetMyPurchaseArticlesLoading: false, // 내 구매글 가져오기\r\n    isGetMyPurchaseArticlesSuccess: false,\r\n    isGetMyPurchaseArticlesError: null,\r\n  },\r\n  reducers: {\r\n    postLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n    },\r\n    postSocialLoginRequest: (state, action) => {\r\n      state.isLoginLoading = true;\r\n    },\r\n    postLoginRequestSuccess: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginSucceed = true;\r\n      state.user = action.payload;\r\n    },\r\n    postLoginRequestError: (state, action) => {\r\n      state.isLoginLoading = false;\r\n      state.isLoginError = action.payload;\r\n    },\r\n    postLogoutRequest: (state, action) => {\r\n      state.isLogoutLoading = true;\r\n    },\r\n    postLogoutRequestSuccess: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutSucceed = true;\r\n      state.user = initialUser;\r\n    },\r\n    postLogoutRequestError: (state, action) => {\r\n      state.isLogoutLoading = false;\r\n      state.isLogoutError = action.payload;\r\n    },\r\n    postModifyProfileRequest: (state, action) => {\r\n      state.isModifyProfileLoading = true;\r\n    },\r\n    postModifyProfileRequestSuccess: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileSuccess = true;\r\n    },\r\n    postModifyProfileRequestError: (state, action) => {\r\n      state.isModifyProfileLoading = false;\r\n      state.isModifyProfileError = action.payload;\r\n    },\r\n    getWishListRequest: (state, action) => {\r\n      state.isGetWishListLoading = true;\r\n    },\r\n    getWishListRequestSuccess: (state, action) => {\r\n      state.isGetWishListLoading = false;\r\n      state.isGetWishListSuccess = true;\r\n    },\r\n    getWishListRequestError: (state, action) => {\r\n      state.isGetWishListLoading = false;\r\n      state.isGetWishListError = action.payload;\r\n    },\r\n    postAddWishListRequest: (state, action) => {\r\n      state.isAddWishListLoading = true;\r\n    },\r\n    postAddWishListRequestSuccess: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListSuccess = true;\r\n    },\r\n    postAddWishListRequestError: (state, action) => {\r\n      state.isAddWishListLoading = false;\r\n      state.isAddWishListError = action.payload;\r\n    },\r\n    postRemoveWishListRequest: (state, action) => {\r\n      state.isRemoveWishListLoading = true;\r\n    },\r\n    postRemoveWishListRequestSuccess: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListSuccess = true;\r\n    },\r\n    postRemoveWishListRequestError: (state, action) => {\r\n      state.isRemoveWishListLoading = false;\r\n      state.isRemoveWishListError = action.payload;\r\n    },\r\n    getMySaleArticleRequest: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = true;\r\n    },\r\n    getMySaleArticleRequestSuccess: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesSuccess = true;\r\n    },\r\n    getMySaleArticleRequestError: (state, action) => {\r\n      state.isGetMySaleArticlesLoading = false;\r\n      state.isGetMySaleArticlesError = action.payload;\r\n    },\r\n    getMyPurchaseArticleRequest: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = true;\r\n    },\r\n    getMyPurchaseArticleRequestSuccess: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = false;\r\n      state.isGetMyPurchaseArticlesSuccess = true;\r\n    },\r\n    getMyPurchaseArticleRequestError: (state, action) => {\r\n      state.isGetMyPurchaseArticlesLoading = false;\r\n      state.isGetMyPurchaseArticlesError = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  postLoginRequest,\r\n  postSocialLoginRequest,\r\n  postLoginRequestSuccess,\r\n  postLoginRequestError,\r\n  postLogoutRequest,\r\n  postLogoutRequestSuccess,\r\n  postLogoutRequestError,\r\n  postModifyProfileRequest,\r\n  postModifyProfileRequestSuccess,\r\n  postModifyProfileRequestError,\r\n  getWishListRequest,\r\n  getWishListRequestSuccess,\r\n  getWishListRequestError,\r\n  postAddWishListRequest,\r\n  postAddWishListRequestSuccess,\r\n  postAddWishListRequestError,\r\n  postRemoveWishListRequest,\r\n  postRemoveWishListRequestSuccess,\r\n  postRemoveWishListRequestError,\r\n  getMySaleArticleRequest,\r\n  getMySaleArticleRequestSuccess,\r\n  getMySaleArticleRequestError,\r\n  getMyPurchaseArticleRequest,\r\n  getMyPurchaseArticleRequestSuccess,\r\n  getMyPurchaseArticleRequestError,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","/home/workspace/cors_market/www/cors/front/src/styles/GlobalStyles.ts",[],"/home/workspace/cors_market/www/cors/front/src/features/addPost/AddPostPage.tsx",[],"/home/workspace/cors_market/www/cors/front/src/features/postList/PostList.tsx",["159"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport Header from './Header';\r\nimport { loadBookPostRequest } from './postSlice';\r\nimport InfiniteScrollList from './InfiniteScrollList';\r\nimport AddPostButton from './AddPostButton';\r\n\r\nconst PostListWrapper = styled.div`\r\n`;\r\nfunction PostList(): JSX.Element {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadBookPostRequest({ division: 'sales', category: '' }));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <PostListWrapper>\r\n        <Header />\r\n        <AddPostButton />\r\n        <InfiniteScrollList />\r\n      </PostListWrapper>\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport default PostList;","/home/workspace/cors_market/www/cors/front/src/api/userApi.ts",[],"/home/workspace/cors_market/www/cors/front/src/interfaces/mockdata.ts",["160","161"],"import faker from 'faker';\r\nimport { AddBookPostInterface, PostListInterface, articleDetailInterface } from './PostList.interface';\r\n\r\nexport const dummyAddBookPost = (data: AddBookPostInterface) => ({\r\n  articleId: faker.random.number(),\r\n  memberId: data.memberId, // 내가 넣어줄 값\r\n  rprice: data.rprice, // 내가 넣어줄 값\r\n  writeDate: new Date(),\r\n  progress: data.progress, // 내가 넣어줄 값\r\n  title: data.title, // 내가 넣어줄 값\r\n  thumnail: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNEqDnzERi5Aa-o2Qk7r-GmibgwZWM0wV4utkTJZBRNULFk8KwNzUKtPXvgPE&usqp=CAc', // 내가 넣어줄 값\r\n  images: [], // 내가 넣어줄 값\r\n  content: data.content, // 내가 넣어줄 값\r\n  category: data.category, // 내가 넣어줄 값\r\n  tprice: data.tprice, // 내가 넣어줄 값\r\n  division: data.division, // 내가 넣어줄 값\r\n});\r\n\r\nexport const dummyPost: AddBookPostInterface = {\r\n  memberId: 3, // 작성자\r\n  rprice: 13000, // 판매가격\r\n  tprice: 16000, // 원래가격\r\n  content: '두번만 읽은 책입니다', // 내용\r\n  progress: 'POSTING', // 게시글 상태\r\n  title: '진격의거인', // 책제목\r\n  thumnail: 'http://image.yes24.com/momo/TopCate3025/MidCate007/302460746.jpg',\r\n  images: ['https://blog.kakaocdn.net/dn/28NKv/btqFjFQr9pe/n0TKtuuV3zmBSTF1olKqIK/img.jpg', 'https://www.hanbit.co.kr/data/editor/20200706083421_vfsgqsvu.jpg', 'https://www.hanbit.co.kr/data/editor/20200705234134_skcbzgms.jpg'],\r\n  category: '국내도서>자기계발', // 카테고리 키\r\n  division: 'SALE', // 구매 판매 구분\r\n};\r\n\r\nexport const dummyBookPost: PostListInterface = {\r\n  data: [],\r\n};\r\nexport const dummyDetailBookPost: articleDetailInterface = {\r\n  articleId: 1,\r\n  memberId: 2,\r\n  countDAO: {\r\n    chatCount: 10,\r\n    countId: 2,\r\n    views: 3,\r\n    wishCount: 5,\r\n  },\r\n  title: '이것이 MYSQL 이다',\r\n  content: '한번밖에 안읽은 책입니다. 상태 깨끗하고요.',\r\n  writeDate: new Date('2020-10-11'),\r\n  rprice: 13000,\r\n  tprice: 28000,\r\n  progress: 'POSTING',\r\n  category: {\r\n    cid: 2435, oneDepth: '국내도서', twoDepth: '자기계발', threeDepth: 'IT서적', fourDepth: '', fiveDepth: '',\r\n  },\r\n  division: 'SALE',\r\n  thumbnail: 'http://image.yes24.com/momo/TopCate3025/MidCate007/302460746.jpg',\r\n  image: ['https://blog.kakaocdn.net/dn/28NKv/btqFjFQr9pe/n0TKtuuV3zmBSTF1olKqIK/img.jpg', 'https://www.hanbit.co.kr/data/editor/20200706083421_vfsgqsvu.jpg', 'https://www.hanbit.co.kr/data/editor/20200705234134_skcbzgms.jpg'],\r\n};\r\nexport const generateDummyPost = (Postnumber: number) => Array(Postnumber).fill(0).map(() => (\r\n  {\r\n    articleId: faker.random.number(),\r\n    countDAO: {\r\n      chatCount: 2,\r\n      countId: 2,\r\n      views: 2,\r\n      wishCount: 3,\r\n    },\r\n    title: faker.commerce.productName(),\r\n    writeDate: new Date(),\r\n    tprice: 20000,\r\n    progress: 'POSTING',\r\n    category: {\r\n      cid: faker.random.number(), oneDepth: '국내도서', twoDepth: '소설/시/희곡', threeDepth: '', fourDepth: '', fiveDepth: '',\r\n    },\r\n    image: faker.random.image(),\r\n    nickname: faker.name.findName(),\r\n    market: null,\r\n  }\r\n));\r\n","/home/workspace/cors_market/www/cors/front/src/api/postBookApi.ts",[],"/home/workspace/cors_market/www/cors/front/src/features/postList/AddPostButton.tsx",[],"/home/workspace/cors_market/www/cors/front/src/features/postList/InfiniteScrollList.tsx",["162"],"/home/workspace/cors_market/www/cors/front/src/features/postList/Header.tsx",[],"/home/workspace/cors_market/www/cors/front/src/components/AppLayout.tsx",[],"/home/workspace/cors_market/www/cors/front/src/utils/categoryFormatUtil.ts",["163"],"/home/workspace/cors_market/www/cors/front/src/features/postList/CategoryMenu.tsx",[],"/home/workspace/cors_market/www/cors/front/src/features/addPost/addPostSaga.ts",[],"/home/workspace/cors_market/www/cors/front/src/index.tsx",[],"/home/workspace/cors_market/www/cors/front/src/features/postList/postSlice.ts",["164","165","166","167"],"/home/workspace/cors_market/www/cors/front/src/features/join/Join.tsx",["168","169","170","171","172","173","174"],"import React, { useRef, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport DaumPostCode, { AddressData } from 'react-daum-postcode';\r\nimport { emailCertificationAsync, emailDuplicationAsync, joinRequestAsync, nicknameDuplicationAsync } from '../../api/joinApi';\r\n\r\nconst Positional = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 4.5vw;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 0.8em 0;\r\n  & h1 {\r\n    font-size: 4.5vw;\r\n    font-weight: 400;\r\n  }\r\n`;\r\n\r\nconst Main = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  padding: 1.5em 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  overflow: auto;\r\n`;\r\n\r\nconst BackLink = styled(Link)`\r\n  position: absolute;\r\n  left: 0.5em;\r\n`;\r\n\r\nconst BackLogo = styled.img`\r\n  width: 1.8em;\r\n  height: 1.8em;\r\n`;\r\n\r\nconst JoinForm = styled.form`\r\n  width: 90vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  & > div:last-child {\r\n    margin-bottom: 1.5em;\r\n  }\r\n  `;\r\n\r\nconst JoinInputBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1em;\r\n  & label {\r\n    font-size: 3.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  `;\r\n\r\nconst JoinInput = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.5em 0.5em;\r\n  background: #f9f9f9;\r\n  box-shadow: 3px 3px 10px #c4c4c4;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  font-size: 4vw;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nconst CheckLogo = styled.img`\r\n  width: 1.2em;\r\n  height: 1.2em;\r\n  flex-grow: 1;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst CertificationRequest = styled.button`\r\n  position: absolute;\r\n  right: 0;\r\n  font-size: 3vw;\r\n  font-weight: bold;\r\n  padding: 1em 1.5em;\r\n  background: #265290;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  outline: none;\r\n`;\r\n\r\nconst CertificationBox = styled.div`\r\n  display: none;\r\n  flex-direction: column;\r\n  margin-top: 0.5em;\r\n`;\r\n\r\nconst CertificationInputBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst CertificationInput = styled.input`\r\n  width: 10em;\r\n  font-size: 4vw;\r\n  padding: 0.5em 1em;\r\n  margin-right: 0.5em;\r\n  background: #f9f9f9;\r\n  box-shadow: 3px 3px 10px #c4c4c4;\r\n  border-radius: 5px;\r\n  border: none;\r\n  outline: none;\r\n`;\r\nconst CertificationButton = styled.button`\r\n  font-size: 4vw;\r\n  font-weight: bold;\r\n  padding: 0.5em 1em;\r\n  background: #265290;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  outline: none;\r\n`;\r\n\r\nconst InputMessage = styled.p`\r\n  font-size: 2vw;\r\n  margin-top: 1em;\r\n`;\r\n\r\nconst SearchModal = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  display: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #5c5c5c55;\r\n`;\r\n\r\nconst CloseButton = styled.img`\r\n  position: absolute;\r\n  width: 1.5em;\r\n  height: 1.5em;\r\n  top: 0.4em;\r\n  right: 0.4em;\r\n  font-size: 6vw;\r\n`;\r\n\r\nconst AddressFormBox = styled.div`\r\n  margin-bottom: 2em;\r\n  & label {\r\n    display: block;\r\n    font-size: 3.5vw;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  & ${JoinInput}:not(:last-child) {\r\n    margin-bottom: 1em;\r\n  }\r\n  & ${JoinInput} {\r\n    padding: 0.5em;\r\n  }\r\n`;\r\n\r\nconst AddressSearchBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 1em;\r\n`;\r\nconst AddressSearchInput = styled.input`\r\n  width: 10em;\r\n  padding: 0.6em 0.5em;\r\n  background: #f9f9f9;\r\n  box-shadow: 3px 3px 10px #c4c4c4;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 5px;\r\n  margin-right: 0.5em;\r\n  font-size: 4vw;\r\n`;\r\nconst AddressSearchButton = styled.button`\r\n  padding: 0.7em;\r\n  background: #265290;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 5px;\r\n  font-size: 3.5vw;\r\n`;\r\n\r\nconst AgreementBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 90vw;\r\n  margin-bottom: 2.5em;\r\n`;\r\nconst AllAgreeBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 4.5vw;\r\n  font-weight: bold;\r\n  margin-bottom: 1em;\r\n`;\r\nconst AgreeCheckBox = styled.img`\r\n  width: 1.5em;\r\n  height: 1.5em;\r\n  margin-right: 0.5em;\r\n`;\r\nconst AgreeText = styled.div`\r\n  & span {\r\n    color: #265290;\r\n  }\r\n`;\r\n\r\nconst SubAgreeBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 4vw;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst AgreeDetail = styled.img`\r\n  width: 1em;\r\n  height: 1em;\r\n  position: absolute;\r\n  right: 0;\r\n  transform: rotate(-90deg);\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst JoinButton = styled.button`\r\n  width: 80vw;\r\n  font-size: 4.5vw;\r\n  padding: 0.8em 0;\r\n  text-align: center;\r\n  color: #fff;\r\n  background: #265290;\r\n  border: none;\r\n  outline: none;\r\n  margin-bottom: 1.5em;\r\n`;\r\n\r\nfunction Join():JSX.Element {\r\n  const initialInputs = {\r\n    email: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n      duplicationCheck: false,\r\n      code: '',\r\n      certificationCheck: false,\r\n    },\r\n    nickname: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    passwd: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    passwdCheck: {\r\n      value: '',\r\n      state: 'none',\r\n      message: '',\r\n      color: 'red',\r\n    },\r\n    address: {\r\n      zipcode: '',\r\n      baseAddress: '',\r\n      detailAddress: '',\r\n    },\r\n    agreement: {\r\n      all: false,\r\n      agree1: false,\r\n      agree2: false,\r\n      agree3: false,\r\n    },\r\n  };\r\n\r\n  const [showsModal, setShowsModal] = useState(false);\r\n  const [inputs, setInputs] = useState(initialInputs);\r\n  const emailCertificationBox = useRef<HTMLInputElement>(null);\r\n  const history = useHistory();\r\n\r\n  const {\r\n    email,\r\n    nickname,\r\n    passwd,\r\n    passwdCheck,\r\n    address,\r\n    agreement,\r\n  } = inputs;\r\n\r\n  const inputChange = (name: 'email' | 'nickname' | 'passwd' | 'passwdCheck', value: string, state: 'check' | 'fail' | 'none', message: string, color: 'red' | 'blue') => {\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: {\r\n        ...inputs[name],\r\n        value,\r\n        state,\r\n        message,\r\n        color,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onChangeText = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'email':\r\n        if (/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(value)) {\r\n          inputChange(name, value, 'check', '', 'blue');\r\n        } else {\r\n          inputChange(name, value, 'fail', '이메일 형식이 아닙니다.', 'red');\r\n        }\r\n        break;\r\n      case 'nickname':\r\n        if (value.length < 4) {\r\n          inputChange(name, value, 'fail', '닉네임을 4자 이상 입력해주세요.', 'red');\r\n        } else {\r\n          try {\r\n            await nicknameDuplicationAsync(value);\r\n            inputChange(name, value, 'check', '', 'blue');\r\n          } catch {\r\n            inputChange(name, value, 'fail', '이미 사용중인 닉네임입니다.', 'red');\r\n          }\r\n        }\r\n        break;\r\n      case 'passwd':\r\n        if (/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,20}$/.test(value)) {\r\n          inputChange(name, value, 'check', '', 'blue');\r\n        } else {\r\n          inputChange(name, value, 'fail', '8~20자의 영문 대소문자, 숫자, 특수문자 조합으로 설정해주세요.', 'red');\r\n        }\r\n        break;\r\n      case 'passwdCheck':\r\n        if (value === passwd.value) {\r\n          inputChange(name, value, 'check', '', 'blue');\r\n        } else {\r\n          inputChange(name, value, 'fail', '비밀번호가 일치하지 않습니다.', 'red');\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onClickEmailDuplication = async () => {\r\n    try {\r\n      await emailDuplicationAsync(email.value);\r\n      setInputs({\r\n        ...inputs,\r\n        email: {\r\n          ...email,\r\n          duplicationCheck: true,\r\n        },\r\n      });\r\n      if (emailCertificationBox.current != null) {\r\n        emailCertificationBox.current.style.display = 'flex';\r\n      }\r\n    } catch {\r\n      setInputs({\r\n        ...inputs,\r\n        email: {\r\n          ...email,\r\n          message: '이미 사용중인 이메일입니다.',\r\n          color: 'red',\r\n          duplicationCheck: false,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const onChangeCode = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputs({\r\n      ...inputs,\r\n      email: {\r\n        ...email,\r\n        code: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onClickEmailCertification = async () => {\r\n    try {\r\n      await emailCertificationAsync(email.value, email.code);\r\n      setInputs({\r\n        ...inputs,\r\n        email: {\r\n          ...email,\r\n          message: '인증이 완료되었습니다.',\r\n          color: 'blue',\r\n          certificationCheck: true,\r\n        },\r\n      });\r\n      if (emailCertificationBox.current != null) {\r\n        emailCertificationBox.current.style.display = 'none';\r\n      }\r\n    } catch {\r\n      setInputs({\r\n        ...inputs,\r\n        email: {\r\n          ...email,\r\n          message: '코드를 확인해주세요.',\r\n          color: 'red',\r\n          certificationCheck: false,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const onCompleteAddressSelect = (data: AddressData) => {\r\n    setInputs({\r\n      ...inputs,\r\n      address: {\r\n        ...address,\r\n        zipcode: data.zonecode,\r\n        baseAddress: data.jibunAddress,\r\n      },\r\n    });\r\n    setShowsModal(false);\r\n  };\r\n\r\n  const onChangeDetailAddress = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputs({\r\n      ...inputs,\r\n      address: {\r\n        ...address,\r\n        detailAddress: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onClickAgree = (agree: 'all' | 'agree1' | 'agree2' | 'agree3') => {\r\n    if (agree === 'all') {\r\n      setInputs({\r\n        ...inputs,\r\n        agreement: {\r\n          all: !agreement.all,\r\n          agree1: !agreement.all,\r\n          agree2: !agreement.all,\r\n          agree3: !agreement.all,\r\n        },\r\n      });\r\n    } else {\r\n      const resultArr: boolean[] = [];\r\n\r\n      Object.keys(agreement).forEach((key) => {\r\n        if (key !== 'all' && (key === 'agree1' || key === 'agree2' || key === 'agree3')) {\r\n          if (key === agree) {\r\n            resultArr.push(!agreement[key]);\r\n          } else {\r\n            resultArr.push(agreement[key]);\r\n          }\r\n        }\r\n      });\r\n\r\n      if (agree === 'agree1' || agree === 'agree2' || agree === 'agree3') {\r\n        setInputs({\r\n          ...inputs,\r\n          agreement: {\r\n            ...agreement,\r\n            all: resultArr.every((value) => value === true),\r\n            [agree]: !agreement[agree],\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onsubmitJoin = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!email.certificationCheck) {\r\n      alert('이메일 인증을 진행해주세요.');\r\n    } else if (nickname.state !== 'check') {\r\n      alert('닉네임이 중복되었거나 형식이 맞지 않습니다.');\r\n    } else if (passwd.state !== 'check') {\r\n      alert('비밀번호 형식이 맞지 않습니다.');\r\n    } else if (passwdCheck.state !== 'check') {\r\n      alert('비밀번호가 일치하지 않습니다.');\r\n    } else if (address.zipcode === '') {\r\n      alert('주소를 입력해주세요.');\r\n    } else if (!agreement.agree1 || !agreement.agree2) {\r\n      alert('필수 약관 항목에 동의해주세요.');\r\n    } else {\r\n      await joinRequestAsync(email.value, nickname.value, passwd.value, `${address.baseAddress} ${address.detailAddress}`);\r\n      alert('회원가입이 완료되었습니다.');\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Positional>\r\n      <Header>\r\n        <BackLink to=\"/\">\r\n          <BackLogo src=\"/images/icons/back.png\" />\r\n        </BackLink>\r\n        <h1>회원가입</h1>\r\n      </Header>\r\n      <Main>\r\n        <JoinForm method=\"post\" onSubmit={onsubmitJoin}>\r\n          <JoinInputBox>\r\n            <label htmlFor=\"email\">이메일</label>\r\n            <JoinInput>\r\n              <Input required type=\"email\" id=\"email\" name=\"email\" onChange={onChangeText} value={email.value} disabled={email.duplicationCheck} />\r\n              <CheckLogo src={`/images/icons/${email.state}.png`} />\r\n              <CertificationRequest style={{ display: email.state === 'check' && !email.certificationCheck ? 'block' : 'none' }} type=\"button\" onClick={onClickEmailDuplication}>인증요청</CertificationRequest>\r\n            </JoinInput>\r\n            <CertificationBox ref={emailCertificationBox}>\r\n              <CertificationInputBox>\r\n                <CertificationInput name=\"certification\" onChange={onChangeCode} value={email.code} />\r\n                <CertificationButton type=\"button\" onClick={onClickEmailCertification}>확인</CertificationButton>\r\n              </CertificationInputBox>\r\n            </CertificationBox>\r\n            <InputMessage style={{ color: email.color }}>{email.message}</InputMessage>\r\n          </JoinInputBox>\r\n          <JoinInputBox>\r\n            <label htmlFor=\"nickname\">닉네임</label>\r\n            <JoinInput>\r\n              <Input required type=\"text\" maxLength={10} id=\"nickname\" name=\"nickname\" onChange={onChangeText} value={nickname.value} />\r\n              <CheckLogo src={`/images/icons/${nickname.state}.png`} />\r\n            </JoinInput>\r\n            <InputMessage style={{ color: nickname.color }}>{nickname.message}</InputMessage>\r\n          </JoinInputBox>\r\n          <JoinInputBox>\r\n            <label htmlFor=\"passwd\">비밀번호</label>\r\n            <JoinInput>\r\n              <Input maxLength={20} required type=\"password\" id=\"passwd\" name=\"passwd\" onChange={onChangeText} value={passwd.value} />\r\n              <CheckLogo src={`/images/icons/${passwd.state}.png`} />\r\n            </JoinInput>\r\n            <InputMessage style={{ color: passwd.color }}>{passwd.message}</InputMessage>\r\n          </JoinInputBox>\r\n          <JoinInputBox>\r\n            <label htmlFor=\"passwdCheck\">비밀번호 확인</label>\r\n            <JoinInput>\r\n              <Input maxLength={20} required type=\"password\" id=\"passwdCheck\" name=\"passwdCheck\" onChange={onChangeText} value={passwdCheck.value} />\r\n              <CheckLogo src={`/images/icons/${passwdCheck.state}.png`} />\r\n            </JoinInput>\r\n            <InputMessage style={{ color: passwdCheck.color }}>{passwdCheck.message}</InputMessage>\r\n          </JoinInputBox>\r\n          <AddressFormBox>\r\n            <label>주소</label>\r\n            <AddressSearchBox>\r\n              <AddressSearchInput disabled value={address.zipcode} />\r\n              <AddressSearchButton type=\"button\" onClick={() => setShowsModal(true)}>우편번호 검색</AddressSearchButton>\r\n            </AddressSearchBox>\r\n            <JoinInput>\r\n              <Input type=\"text\" disabled placeholder=\"상세 주소\" value={address.baseAddress} />\r\n            </JoinInput>\r\n            <JoinInput>\r\n              <Input type=\"text\" placeholder=\"나머지 주소\" onChange={onChangeDetailAddress} value={address.detailAddress} />\r\n            </JoinInput>\r\n          </AddressFormBox>\r\n          <AgreementBox>\r\n            <AllAgreeBox onClick={() => onClickAgree('all')}>\r\n              <AgreeCheckBox src={`/images/icons/${agreement.all ? 'check' : 'check_default'}.png`} />\r\n              <AgreeText>전체 약관에 동의합니다.</AgreeText>\r\n            </AllAgreeBox>\r\n            <SubAgreeBox onClick={() => onClickAgree('agree1')}>\r\n              <AgreeCheckBox src={`/images/icons/${agreement.agree1 ? 'check' : 'check_default'}.png`} />\r\n              <AgreeText>서비스 이용약관 <span>(필수)</span></AgreeText>\r\n              <AgreeDetail src=\"/images/icons/back.png\" />\r\n            </SubAgreeBox>\r\n            <SubAgreeBox onClick={() => onClickAgree('agree2')}>\r\n              <AgreeCheckBox src={`/images/icons/${agreement.agree2 ? 'check' : 'check_default'}.png`} />\r\n              <AgreeText>개인정보 처리방침 <span>(필수)</span></AgreeText>\r\n              <AgreeDetail src=\"/images/icons/back.png\" />\r\n            </SubAgreeBox>\r\n            <SubAgreeBox onClick={() => onClickAgree('agree3')}>\r\n              <AgreeCheckBox src={`/images/icons/${agreement.agree3 ? 'check' : 'check_default'}.png`} />\r\n              <AgreeText>이벤트 마케팅 수신 동의 <span>(선택)</span></AgreeText>\r\n              <AgreeDetail src=\"/images/icons/back.png\" />\r\n            </SubAgreeBox>\r\n          </AgreementBox>\r\n          <ButtonWrapper>\r\n            <JoinButton type=\"submit\">회원가입</JoinButton>\r\n          </ButtonWrapper>\r\n        </JoinForm>\r\n      </Main>\r\n      <SearchModal style={{ display: showsModal ? 'flex' : 'none' }}>\r\n        <CloseButton src=\"/images/icons/x.png\" onClick={() => setShowsModal(false)} />\r\n        <DaumPostCode onComplete={onCompleteAddressSelect} />\r\n      </SearchModal>\r\n    </Positional>\r\n  );\r\n}\r\n\r\nexport default Join;\r\n","/home/workspace/cors_market/www/cors/front/src/features/detailPostView/DetailPostContent.tsx",[],"/home/workspace/cors_market/www/cors/front/src/features/login/LoginForm.tsx",["175","176"],"/home/workspace/cors_market/www/cors/front/src/utils/countDaoUtil.ts",[],"/home/workspace/cors_market/www/cors/front/src/utils/progressUtil.ts",[],"/home/workspace/cors_market/www/cors/front/src/features/detailPostView/ImageSlide.tsx",[],"/home/workspace/cors_market/www/cors/front/src/features/addPost/addPostSlice.ts",["177","178"],"/home/workspace/cors_market/www/cors/front/src/features/postList/postSaga.ts",["179","180","181","182","183","184"],"/home/workspace/cors_market/www/cors/front/src/features/detailPostView/DetailPostView.tsx",[],"/home/workspace/cors_market/www/cors/front/src/api/joinApi.ts",[],{"ruleId":"185","severity":1,"message":"186","line":3,"column":25,"nodeType":"187","messageId":"188","endLine":3,"endColumn":57},{"ruleId":"189","severity":1,"message":"190","line":12,"column":38,"nodeType":"191","messageId":"192","endLine":12,"endColumn":44},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"189","severity":1,"message":"205","line":1,"column":44,"nodeType":"191","messageId":"192","endLine":1,"endColumn":54},{"ruleId":"206","severity":1,"message":"207","line":27,"column":103,"nodeType":"208","messageId":"209","endLine":27,"endColumn":106,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":42,"column":5,"nodeType":"213","messageId":"214","endLine":42,"endColumn":28},{"ruleId":"193","replacedBy":"215"},{"ruleId":"195","replacedBy":"216"},{"ruleId":"197","replacedBy":"217"},{"ruleId":"199","replacedBy":"218"},{"ruleId":"201","replacedBy":"219"},{"ruleId":"203","replacedBy":"220"},{"ruleId":"189","severity":1,"message":"190","line":44,"column":31,"nodeType":"191","messageId":"192","endLine":44,"endColumn":37},{"ruleId":"189","severity":1,"message":"190","line":47,"column":37,"nodeType":"191","messageId":"192","endLine":47,"endColumn":43},{"ruleId":"189","severity":1,"message":"190","line":59,"column":32,"nodeType":"191","messageId":"192","endLine":59,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":62,"column":39,"nodeType":"191","messageId":"192","endLine":62,"endColumn":45},{"ruleId":"189","severity":1,"message":"190","line":71,"column":39,"nodeType":"191","messageId":"192","endLine":71,"endColumn":45},{"ruleId":"189","severity":1,"message":"190","line":74,"column":46,"nodeType":"191","messageId":"192","endLine":74,"endColumn":52},{"ruleId":"189","severity":1,"message":"190","line":82,"column":33,"nodeType":"191","messageId":"192","endLine":82,"endColumn":39},{"ruleId":"189","severity":1,"message":"190","line":85,"column":40,"nodeType":"191","messageId":"192","endLine":85,"endColumn":46},{"ruleId":"189","severity":1,"message":"190","line":93,"column":37,"nodeType":"191","messageId":"192","endLine":93,"endColumn":43},{"ruleId":"189","severity":1,"message":"190","line":96,"column":44,"nodeType":"191","messageId":"192","endLine":96,"endColumn":50},{"ruleId":"189","severity":1,"message":"190","line":104,"column":40,"nodeType":"191","messageId":"192","endLine":104,"endColumn":46},{"ruleId":"189","severity":1,"message":"190","line":107,"column":47,"nodeType":"191","messageId":"192","endLine":107,"endColumn":53},{"ruleId":"189","severity":1,"message":"190","line":115,"column":38,"nodeType":"191","messageId":"192","endLine":115,"endColumn":44},{"ruleId":"189","severity":1,"message":"190","line":118,"column":45,"nodeType":"191","messageId":"192","endLine":118,"endColumn":51},{"ruleId":"189","severity":1,"message":"190","line":126,"column":42,"nodeType":"191","messageId":"192","endLine":126,"endColumn":48},{"ruleId":"189","severity":1,"message":"190","line":129,"column":49,"nodeType":"191","messageId":"192","endLine":129,"endColumn":55},{"ruleId":"221","severity":2,"message":"222","line":30,"column":25,"nodeType":"223","messageId":"224","fix":"225"},{"ruleId":"185","severity":1,"message":"186","line":4,"column":33,"nodeType":"187","messageId":"188","endLine":4,"endColumn":64},{"ruleId":"185","severity":1,"message":"186","line":57,"column":34,"nodeType":"187","messageId":"188","endLine":57,"endColumn":57},{"ruleId":"206","severity":1,"message":"207","line":11,"column":11,"nodeType":"208","messageId":"209","endLine":11,"endColumn":14,"suggestions":"226"},{"ruleId":"185","severity":1,"message":"186","line":4,"column":28,"nodeType":"187","messageId":"188","endLine":4,"endColumn":60},{"ruleId":"189","severity":1,"message":"227","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":24},{"ruleId":"189","severity":1,"message":"228","line":1,"column":39,"nodeType":"191","messageId":"192","endLine":1,"endColumn":52},{"ruleId":"189","severity":1,"message":"190","line":40,"column":38,"nodeType":"191","messageId":"192","endLine":40,"endColumn":44},{"ruleId":"189","severity":1,"message":"190","line":53,"column":34,"nodeType":"191","messageId":"192","endLine":53,"endColumn":40},{"ruleId":"211","severity":1,"message":"212","line":503,"column":7,"nodeType":"213","messageId":"214","endLine":503,"endColumn":31},{"ruleId":"211","severity":1,"message":"212","line":505,"column":7,"nodeType":"213","messageId":"214","endLine":505,"endColumn":40},{"ruleId":"211","severity":1,"message":"212","line":507,"column":7,"nodeType":"213","messageId":"214","endLine":507,"endColumn":33},{"ruleId":"211","severity":1,"message":"212","line":509,"column":7,"nodeType":"213","messageId":"214","endLine":509,"endColumn":32},{"ruleId":"211","severity":1,"message":"212","line":511,"column":7,"nodeType":"213","messageId":"214","endLine":511,"endColumn":27},{"ruleId":"211","severity":1,"message":"212","line":513,"column":7,"nodeType":"213","messageId":"214","endLine":513,"endColumn":33},{"ruleId":"211","severity":1,"message":"212","line":516,"column":7,"nodeType":"213","messageId":"214","endLine":516,"endColumn":30},{"ruleId":"189","severity":1,"message":"229","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":24},{"ruleId":"189","severity":1,"message":"230","line":3,"column":39,"nodeType":"191","messageId":"192","endLine":3,"endColumn":50},{"ruleId":"189","severity":1,"message":"190","line":11,"column":31,"nodeType":"191","messageId":"192","endLine":11,"endColumn":37},{"ruleId":"189","severity":1,"message":"190","line":15,"column":31,"nodeType":"191","messageId":"192","endLine":15,"endColumn":37},{"ruleId":"189","severity":1,"message":"231","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":30},{"ruleId":"189","severity":1,"message":"232","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":24},{"ruleId":"189","severity":1,"message":"233","line":5,"column":45,"nodeType":"191","messageId":"192","endLine":5,"endColumn":59},{"ruleId":"189","severity":1,"message":"234","line":5,"column":61,"nodeType":"191","messageId":"192","endLine":5,"endColumn":85},{"ruleId":"189","severity":1,"message":"190","line":13,"column":24,"nodeType":"191","messageId":"192","endLine":13,"endColumn":59},{"ruleId":"189","severity":1,"message":"190","line":23,"column":30,"nodeType":"191","messageId":"192","endLine":23,"endColumn":59},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'action' is defined but never used.","Identifier","unusedVar","lines-around-directive",["235"],"no-spaced-func",["236"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'getContext' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["237","238"],"no-alert","Unexpected alert.","CallExpression","unexpected",["235"],["236"],[],[],[],[],"eol-last","Newline required at end of file but not found.","Program","missing",{"range":"239","text":"240"},["241","242"],"'createSelector' is defined but never used.","'PayloadAction' is defined but never used.","'RootStateOrAny' is defined but never used.","'useSelector' is defined but never used.","'AddBookPostInterface' is defined but never used.","'addBookPostAPI' is defined but never used.","'getBookPostAPI' is defined but never used.","'getBookPostDetailViewAPI' is defined but never used.","padding-line-between-statements","func-call-spacing",{"messageId":"243","fix":"244","desc":"245"},{"messageId":"246","fix":"247","desc":"248"},[810,810],"\n",{"messageId":"243","fix":"249","desc":"245"},{"messageId":"246","fix":"250","desc":"248"},"suggestUnknown",{"range":"251","text":"252"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"251","text":"253"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"254","text":"252"},{"range":"254","text":"253"},[832,835],"unknown","never",[407,410]]